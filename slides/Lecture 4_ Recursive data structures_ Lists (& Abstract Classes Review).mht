From: <Saved by Blink>
Snapshot-Content-Location: https://course.ccs.neu.edu/cs5004/lecturelists_and_hof.html
Subject: Lecture 4: Recursive data structures: Lists (& Abstract Classes Review)
Date: Sun, 2 Apr 2023 06:14:02 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----"


------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: text/html
Content-ID: <frame-B8469AACAF279A47F8AE72C7231624DC@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://course.ccs.neu.edu/cs5004/lecturelists_and_hof.html

<!DOCTYPE html><html><head><meta http-equiv=3D"Content-Type" content=3D"tex=
t/html; charset=3DUTF-8"><link rel=3D"stylesheet" type=3D"text/css" href=3D=
"cid:css-0963ee1c-62df-448e-801d-29271a4cd7c9@mhtml.blink" /><link rel=3D"s=
tylesheet" type=3D"text/css" href=3D"cid:css-9ed4eb94-d9a5-4a31-aa4a-cfcebc=
3a3f8b@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=3D"ci=
d:css-bb52830e-c3c5-4472-b0aa-1a5aa556b82d@mhtml.blink" /><link rel=3D"styl=
esheet" type=3D"text/css" href=3D"cid:css-87b9fe58-7b55-4849-a0a7-a68b34e15=
798@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:c=
ss-f406a906-7f1b-4db9-88ea-b9a5e5500a96@mhtml.blink" /><link rel=3D"stylesh=
eet" type=3D"text/css" href=3D"cid:css-efae5c0c-72ce-477b-b2b1-f6c357ed3f83=
@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-=
6a04ac47-7b43-4134-b33f-12a195ba94da@mhtml.blink" /><link rel=3D"stylesheet=
" type=3D"text/css" href=3D"cid:css-734fb081-4323-4942-b4eb-e88a6f00c2df@mh=
tml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-ef0=
2318d-c88d-43f0-a259-e253e2224043@mhtml.blink" />





<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D0.=
8"><title>Lecture 4: Recursive data structures: Lists (&amp; Abstract Class=
es Review)</title><link rel=3D"stylesheet" type=3D"text/css" href=3D"https:=
//course.ccs.neu.edu/cs5004/scribble.css" title=3D"default"><link rel=3D"st=
ylesheet" type=3D"text/css" href=3D"https://course.ccs.neu.edu/cs5004/racke=
t.css" title=3D"default"><link rel=3D"stylesheet" type=3D"text/css" href=3D=
"https://course.ccs.neu.edu/cs5004/manual-style.css" title=3D"default"><lin=
k rel=3D"stylesheet" type=3D"text/css" href=3D"https://course.ccs.neu.edu/c=
s5004/manual-racket.css" title=3D"default"><link rel=3D"stylesheet" type=3D=
"text/css" href=3D"https://course.ccs.neu.edu/cs5004/extra-styles.css" titl=
e=3D"default"><link rel=3D"stylesheet" type=3D"text/css" href=3D"https://co=
urse.ccs.neu.edu/cs5004/codemirror.css" title=3D"default"><!--[if IE 6]><st=
yle type=3D"text/css">.SIEHidden { overflow: hidden; }</style><![endif]--><=
/head><body id=3D"scribble-racket-lang-org" class=3D"__bm__extension vsc-in=
itialized"><div id=3D"MathJax_Message" style=3D"display: none;"></div><div =
class=3D"tocset"><div class=3D"tocview"><div class=3D"tocviewlist tocviewli=
sttopspace"><div class=3D"tocviewtitle"><table cellspacing=3D"0" cellpaddin=
g=3D"0"><tbody><tr><td style=3D"width: 1em;"><a title=3D"Expand/Collapse" c=
lass=3D"tocviewtoggle">=E2=96=BA</a></td><td></td><td><a href=3D"https://co=
urse.ccs.neu.edu/cs5004/index.html" class=3D"tocviewlink" data-pltdoc=3D"x"=
>CS 5004:
<br>
Object-<wbr>Oriented Design</a></td></tr></tbody></table></div><div class=
=3D"tocviewsublisttop" style=3D"display: none;" id=3D"tocview_0"><table cel=
lspacing=3D"0" cellpadding=3D"0"><tbody><tr><td align=3D"right"></td><td><a=
 href=3D"https://course.ccs.neu.edu/cs5004/General.html" class=3D"tocviewli=
nk" data-pltdoc=3D"x">General</a></td></tr><tr><td align=3D"right"></td><td=
><a href=3D"https://course.ccs.neu.edu/cs5004/Texts.html" class=3D"tocviewl=
ink" data-pltdoc=3D"x">Texts</a></td></tr><tr><td align=3D"right"></td><td>=
<a href=3D"https://course.ccs.neu.edu/cs5004/Lectures.html" class=3D"tocvie=
wselflink" data-pltdoc=3D"x">Lectures</a></td></tr><tr><td align=3D"right">=
</td><td><a href=3D"https://course.ccs.neu.edu/cs5004/Syllabus.html" class=
=3D"tocviewlink" data-pltdoc=3D"x">Syllabus</a></td></tr><tr><td align=3D"r=
ight"></td><td><a href=3D"https://course.ccs.neu.edu/cs5004/Lab_Materials.h=
tml" class=3D"tocviewlink" data-pltdoc=3D"x">Lab Materials</a></td></tr><tr=
><td align=3D"right"></td><td><a href=3D"https://course.ccs.neu.edu/cs5004/=
Assignments.html" class=3D"tocviewlink" data-pltdoc=3D"x">Assignments</a></=
td></tr><tr><td align=3D"right"></td><td><a href=3D"https://course.ccs.neu.=
edu/cs5004/testing-notes.html" class=3D"tocviewlink" data-pltdoc=3D"x">Test=
ing</a></td></tr><tr><td align=3D"right"></td><td><a href=3D"https://course=
.ccs.neu.edu/cs5004/Documentation.html" class=3D"tocviewlink" data-pltdoc=
=3D"x">Documentation</a></td></tr><tr><td align=3D"right"></td><td><a href=
=3D"https://course.ccs.neu.edu/cs5004/Design_Principles.html" class=3D"tocv=
iewlink" data-pltdoc=3D"x">Design Principles</a></td></tr><tr><td align=3D"=
right"></td><td><a href=3D"https://course.ccs.neu.edu/cs5004/code-style.htm=
l" class=3D"tocviewlink" data-pltdoc=3D"x">Code style</a></td></tr></tbody>=
</table></div></div><div class=3D"tocviewlist"><table cellspacing=3D"0" cel=
lpadding=3D"0"><tbody><tr><td style=3D"width: 1em;"><a title=3D"Expand/Coll=
apse" class=3D"tocviewtoggle">=E2=96=BC</a></td><td></td><td><a href=3D"htt=
ps://course.ccs.neu.edu/cs5004/Lectures.html" class=3D"tocviewlink" data-pl=
tdoc=3D"x">Lectures</a></td></tr></tbody></table><div class=3D"tocviewsubli=
st" style=3D"display: block;" id=3D"tocview_1"><table cellspacing=3D"0" cel=
lpadding=3D"0"><tbody><tr><td align=3D"right"></td><td><a href=3D"https://c=
ourse.ccs.neu.edu/cs5004/lectureclasses_testing.html" class=3D"tocviewlink"=
 data-pltdoc=3D"x"><span class=3D"LectureNum">Lecture 1:</span> Data Defini=
tions, Classes and Testing in Java</a></td></tr><tr><td align=3D"right"></t=
d><td><a href=3D"https://course.ccs.neu.edu/cs5004/lecturemethods_exception=
s.html" class=3D"tocviewlink" data-pltdoc=3D"x"><span class=3D"LectureNum">=
Lecture 2:</span> Methods for simple classes and exceptions</a></td></tr><t=
r><td align=3D"right"></td><td><a href=3D"https://course.ccs.neu.edu/cs5004=
/lectureenums_unions.html" class=3D"tocviewlink" data-pltdoc=3D"x"><span cl=
ass=3D"LectureNum">Lecture 3:</span> Representing more complex forms of dat=
a</a></td></tr><tr><td align=3D"right"></td><td><a href=3D"https://course.c=
cs.neu.edu/cs5004/lecturelists_and_hof.html" class=3D"tocviewselflink" data=
-pltdoc=3D"x"><span class=3D"LectureNum">Lecture 4:</span> Recursive data s=
tructures:<span class=3D"mywbr"> &nbsp;</span> Lists (&amp; Abstract Classe=
s Review)</a></td></tr><tr><td align=3D"right"></td><td><a href=3D"https://=
course.ccs.neu.edu/cs5004/lecturelists_adt_java.html" class=3D"tocviewlink"=
 data-pltdoc=3D"x"><span class=3D"LectureNum">Lecture 5:</span> Lists conti=
nued</a></td></tr><tr><td align=3D"right"></td><td><a href=3D"https://cours=
e.ccs.neu.edu/cs5004/lectureequality_and_comparison.html" class=3D"tocviewl=
ink" data-pltdoc=3D"x"><span class=3D"LectureNum">Lecture 6:</span> Equalit=
y and comparison</a></td></tr><tr><td align=3D"right"></td><td><a href=3D"h=
ttps://course.ccs.neu.edu/cs5004/lectureequality_comparison_hashing.html" c=
lass=3D"tocviewlink" data-pltdoc=3D"x"><span class=3D"LectureNum">Lecture 7=
:</span> Applications of Equality</a></td></tr><tr><td align=3D"right"></td=
><td><a href=3D"https://course.ccs.neu.edu/cs5004/lecturemvc.html" class=3D=
"tocviewlink" data-pltdoc=3D"x"><span class=3D"LectureNum">Lecture 8:</span=
> Design of programs, MVC architecture</a></td></tr><tr><td align=3D"right"=
></td><td><a href=3D"https://course.ccs.neu.edu/cs5004/lecturecontrollers.h=
tml" class=3D"tocviewlink" data-pltdoc=3D"x"><span class=3D"LectureNum">Lec=
ture 9:</span> The Controller</a></td></tr><tr><td align=3D"right"></td><td=
><a href=3D"https://course.ccs.neu.edu/cs5004/lecturecommands.html" class=
=3D"tocviewlink" data-pltdoc=3D"x"><span class=3D"LectureNum">Lecture 10:</=
span> The Command Design Pattern</a></td></tr><tr><td align=3D"right"></td>=
<td><a href=3D"https://course.ccs.neu.edu/cs5004/lectureinheritance_composi=
tion.html" class=3D"tocviewlink" data-pltdoc=3D"x"><span class=3D"LectureNu=
m">Lecture 11:</span> Inheritance vs composition</a></td></tr><tr><td align=
=3D"right"></td><td><a href=3D"https://course.ccs.neu.edu/cs5004/lecturegui=
.html" class=3D"tocviewlink" data-pltdoc=3D"x"><span class=3D"LectureNum">L=
ecture 12:</span> Views and Graphical User Interfaces</a></td></tr><tr><td =
align=3D"right"></td><td><a href=3D"https://course.ccs.neu.edu/cs5004/lectu=
readapters.html" class=3D"tocviewlink" data-pltdoc=3D"x"><span class=3D"Lec=
tureNum">Lecture 13:</span> Adapter Pattern</a></td></tr><tr><td align=3D"r=
ight"></td><td><a href=3D"https://course.ccs.neu.edu/cs5004/lecturelecture1=
2.html" class=3D"tocviewlink" data-pltdoc=3D"x"><span class=3D"LectureNum">=
Lecture 14:</span> The Strategy and Decorator Patterns</a></td></tr><tr><td=
 align=3D"right"></td><td><a href=3D"https://course.ccs.neu.edu/cs5004/lect=
ureiterators.html" class=3D"tocviewlink" data-pltdoc=3D"x"><span class=3D"L=
ectureNum">Lecture 15:</span> Iterators</a></td></tr><tr><td align=3D"right=
"></td><td><a href=3D"https://course.ccs.neu.edu/cs5004/lecturevisitors.htm=
l" class=3D"tocviewlink" data-pltdoc=3D"x"><span class=3D"LectureNum">Lectu=
re 16:</span> Visitors</a></td></tr><tr><td align=3D"right"></td><td><a hre=
f=3D"https://course.ccs.neu.edu/cs5004/lecturetrees.html" class=3D"tocviewl=
ink" data-pltdoc=3D"x"><span class=3D"LectureNum">Lecture 17:</span> Hierar=
chical structures</a></td></tr><tr><td align=3D"right"></td><td><a href=3D"=
https://course.ccs.neu.edu/cs5004/lecturetrees_adt.html" class=3D"tocviewli=
nk" data-pltdoc=3D"x"><span class=3D"LectureNum">Lecture 18:</span> Generic=
 trees and other data structures</a></td></tr></tbody></table></div></div><=
div class=3D"tocviewlist"><table cellspacing=3D"0" cellpadding=3D"0"><tbody=
><tr><td style=3D"width: 1em;"><a title=3D"Expand/Collapse" class=3D"tocvie=
wtoggle">=E2=96=BA</a></td><td></td><td><a href=3D"https://course.ccs.neu.e=
du/cs5004/lecturelists_and_hof.html" class=3D"tocviewselflink" data-pltdoc=
=3D"x"><span class=3D"LectureNum">Lecture 4:</span> Recursive data structur=
es:<span class=3D"mywbr"> &nbsp;</span> Lists (&amp; Abstract Classes Revie=
w)</a></td></tr></tbody></table><div class=3D"tocviewsublistbottom" style=
=3D"display: none;" id=3D"tocview_2"><table cellspacing=3D"0" cellpadding=
=3D"0"><tbody><tr><td align=3D"right">4.1&nbsp;</td><td><a href=3D"https://=
course.ccs.neu.edu/cs5004/lecturelists_and_hof.html#%28part._.Brief_.Review=
__.Abstract_.Classes%29" class=3D"tocviewlink" data-pltdoc=3D"x">Brief Revi=
ew:<span class=3D"mywbr"> &nbsp;</span> Abstract Classes</a></td></tr><tr><=
td align=3D"right">4.2&nbsp;</td><td><a href=3D"https://course.ccs.neu.edu/=
cs5004/lecturelists_and_hof.html#%28part._.Quick_.Peek__.Static%29" class=
=3D"tocviewlink" data-pltdoc=3D"x">Quick Peek:<span class=3D"mywbr"> &nbsp;=
</span> Static</a></td></tr><tr><td align=3D"right">4.3&nbsp;</td><td><a hr=
ef=3D"https://course.ccs.neu.edu/cs5004/lecturelists_and_hof.html#%28part._=
.Recursive_data_structures%29" class=3D"tocviewlink" data-pltdoc=3D"x">Recu=
rsive data structures</a></td></tr><tr><td align=3D"right">4.4&nbsp;</td><t=
d><a href=3D"https://course.ccs.neu.edu/cs5004/lecturelists_and_hof.html#%2=
8part._.A_collection_of_books%29" class=3D"tocviewlink" data-pltdoc=3D"x">A=
 collection of books</a></td></tr><tr><td align=3D"right">4.5&nbsp;</td><td=
><a href=3D"https://course.ccs.neu.edu/cs5004/lecturelists_and_hof.html#%28=
part._.Printing_the_list_of_books%29" class=3D"tocviewlink" data-pltdoc=3D"=
x">Printing the list of books</a></td></tr><tr><td align=3D"right">4.6&nbsp=
;</td><td><a href=3D"https://course.ccs.neu.edu/cs5004/lecturelists_and_hof=
.html#%28part._.Abstracting_behavior%29" class=3D"tocviewlink" data-pltdoc=
=3D"x">Abstracting behavior</a></td></tr><tr><td align=3D"right">4.7&nbsp;<=
/td><td><a href=3D"https://course.ccs.neu.edu/cs5004/lecturelists_and_hof.h=
tml#%28part._higher-order-functions%29" class=3D"tocviewlink" data-pltdoc=
=3D"x">Stating abstractions more formally</a></td></tr></tbody></table></di=
v></div></div><div class=3D"tocsub"><div class=3D"tocsubtitle">On this page=
:</div><table class=3D"tocsublist" cellspacing=3D"0"><tbody><tr><td><span c=
lass=3D"tocsublinknumber">4.1<tt>&nbsp;</tt></span><a href=3D"https://cours=
e.ccs.neu.edu/cs5004/lecturelists_and_hof.html#%28part._.Brief_.Review__.Ab=
stract_.Classes%29" class=3D"tocsubseclink" data-pltdoc=3D"x">Brief Review:=
<span class=3D"mywbr"> &nbsp;</span> Abstract Classes</a></td></tr><tr><td>=
<span class=3D"tocsublinknumber">4.2<tt>&nbsp;</tt></span><a href=3D"https:=
//course.ccs.neu.edu/cs5004/lecturelists_and_hof.html#%28part._.Quick_.Peek=
__.Static%29" class=3D"tocsubseclink" data-pltdoc=3D"x">Quick Peek:<span cl=
ass=3D"mywbr"> &nbsp;</span> Static</a></td></tr><tr><td><span class=3D"toc=
sublinknumber">4.3<tt>&nbsp;</tt></span><a href=3D"https://course.ccs.neu.e=
du/cs5004/lecturelists_and_hof.html#%28part._.Recursive_data_structures%29"=
 class=3D"tocsubseclink" data-pltdoc=3D"x">Recursive data structures</a></t=
d></tr><tr><td><span class=3D"tocsublinknumber">4.4<tt>&nbsp;</tt></span><a=
 href=3D"https://course.ccs.neu.edu/cs5004/lecturelists_and_hof.html#%28par=
t._.A_collection_of_books%29" class=3D"tocsubseclink" data-pltdoc=3D"x">A c=
ollection of books</a></td></tr><tr><td><span class=3D"tocsublinknumber">4.=
4.1<tt>&nbsp;</tt></span><a href=3D"https://course.ccs.neu.edu/cs5004/lectu=
relists_and_hof.html#%28part._.Data_representation_and_operations%29" class=
=3D"tocsubseclink" data-pltdoc=3D"x">Data representation and operations</a>=
</td></tr><tr><td><span class=3D"tocsublinknumber">4.4.2<tt>&nbsp;</tt></sp=
an><a href=3D"https://course.ccs.neu.edu/cs5004/lecturelists_and_hof.html#%=
28part._.Examples%29" class=3D"tocsubseclink" data-pltdoc=3D"x">Examples</a=
></td></tr><tr><td><span class=3D"tocsublinknumber">4.4.3<tt>&nbsp;</tt></s=
pan><a href=3D"https://course.ccs.neu.edu/cs5004/lecturelists_and_hof.html#=
%28part._count-list%29" class=3D"tocsubseclink" data-pltdoc=3D"x">Counting =
the number of books</a></td></tr><tr><td><span class=3D"tocsublinknumber">4=
.4.4<tt>&nbsp;</tt></span><a href=3D"https://course.ccs.neu.edu/cs5004/lect=
urelists_and_hof.html#%28part._.Counting__.Take_2%29" class=3D"tocsubseclin=
k" data-pltdoc=3D"x">Counting:<span class=3D"mywbr"> &nbsp;</span> Take 2</=
a></td></tr><tr><td><span class=3D"tocsublinknumber">4.4.5<tt>&nbsp;</tt></=
span><a href=3D"https://course.ccs.neu.edu/cs5004/lecturelists_and_hof.html=
#%28part._.Unravel_or_accumulate_%29" class=3D"tocsubseclink" data-pltdoc=
=3D"x">Unravel or accumulate?</a></td></tr><tr><td><span class=3D"tocsublin=
knumber">4.5<tt>&nbsp;</tt></span><a href=3D"https://course.ccs.neu.edu/cs5=
004/lecturelists_and_hof.html#%28part._.Printing_the_list_of_books%29" clas=
s=3D"tocsubseclink" data-pltdoc=3D"x">Printing the list of books</a></td></=
tr><tr><td><span class=3D"tocsublinknumber">4.5.1<tt>&nbsp;</tt></span><a h=
ref=3D"https://course.ccs.neu.edu/cs5004/lecturelists_and_hof.html#%28part.=
_.Computing_the_total_price_of_all_books%29" class=3D"tocsubseclink" data-p=
ltdoc=3D"x">Computing the total price of all books</a></td></tr><tr><td><sp=
an class=3D"tocsublinknumber">4.5.2<tt>&nbsp;</tt></span><a href=3D"https:/=
/course.ccs.neu.edu/cs5004/lecturelists_and_hof.html#%28part._.Getting_a_li=
st_of_all_books_published_before_a_given_year%29" class=3D"tocsubseclink" d=
ata-pltdoc=3D"x">Getting a list of all books published before a given year<=
/a></td></tr><tr><td><span class=3D"tocsublinknumber">4.5.3<tt>&nbsp;</tt><=
/span><a href=3D"https://course.ccs.neu.edu/cs5004/lecturelists_and_hof.htm=
l#%28part._.Sorting_the_list_by_price%29" class=3D"tocsubseclink" data-pltd=
oc=3D"x">Sorting the list by price</a></td></tr><tr><td><span class=3D"tocs=
ublinknumber">4.6<tt>&nbsp;</tt></span><a href=3D"https://course.ccs.neu.ed=
u/cs5004/lecturelists_and_hof.html#%28part._.Abstracting_behavior%29" class=
=3D"tocsubseclink" data-pltdoc=3D"x">Abstracting behavior</a></td></tr><tr>=
<td><span class=3D"tocsublinknumber">4.6.1<tt>&nbsp;</tt></span><a href=3D"=
https://course.ccs.neu.edu/cs5004/lecturelists_and_hof.html#%28part._.Getti=
ng_a__sub__list___%29" class=3D"tocsubseclink" data-pltdoc=3D"x">Getting a =
(sub) list...</a></td></tr><tr><td><span class=3D"tocsublinknumber">4.6.1.1=
<tt>&nbsp;</tt></span><a href=3D"https://course.ccs.neu.edu/cs5004/lecturel=
ists_and_hof.html#%28part._.Java_syntactic_sugar%29" class=3D"tocsubseclink=
" data-pltdoc=3D"x">Java syntactic sugar</a></td></tr><tr><td><span class=
=3D"tocsublinknumber">4.6.2<tt>&nbsp;</tt></span><a href=3D"https://course.=
ccs.neu.edu/cs5004/lecturelists_and_hof.html#%28part._sort-by-anything%29" =
class=3D"tocsubseclink" data-pltdoc=3D"x">Sort by ...</a></td></tr><tr><td>=
<span class=3D"tocsublinknumber">4.7<tt>&nbsp;</tt></span><a href=3D"https:=
//course.ccs.neu.edu/cs5004/lecturelists_and_hof.html#%28part._higher-order=
-functions%29" class=3D"tocsubseclink" data-pltdoc=3D"x">Stating abstractio=
ns more formally</a></td></tr><tr><td><span class=3D"tocsublinknumber">4.7.=
1<tt>&nbsp;</tt></span><a href=3D"https://course.ccs.neu.edu/cs5004/lecture=
lists_and_hof.html#%28part._list-filter%29" class=3D"tocsubseclink" data-pl=
tdoc=3D"x">Filter</a></td></tr><tr><td><span class=3D"tocsublinknumber">4.7=
.2<tt>&nbsp;</tt></span><a href=3D"https://course.ccs.neu.edu/cs5004/lectur=
elists_and_hof.html#%28part._list-fold%29" class=3D"tocsubseclink" data-plt=
doc=3D"x">Fold/<span class=3D"mywbr"> &nbsp;</span>Reduce</a></td></tr><tr>=
<td><span class=3D"tocsublinknumber">4.7.3<tt>&nbsp;</tt></span><a href=3D"=
https://course.ccs.neu.edu/cs5004/lecturelists_and_hof.html#%28part._list-m=
ap%29" class=3D"tocsubseclink" data-pltdoc=3D"x">Map</a></td></tr></tbody><=
/table></div></div><div class=3D"maincolumn"><div class=3D"main"><div class=
=3D"versionbox"><span class=3D"version">7.7</span></div><div class=3D"navse=
ttop"><span class=3D"navleft"><div class=3D"nosearchform"></div>&nbsp;&nbsp=
;</span><span class=3D"navright">&nbsp;&nbsp;<a href=3D"https://course.ccs.=
neu.edu/cs5004/lectureenums_unions.html" title=3D"backward to &quot;Lecture=
 3: Representing more complex forms of data&quot;" data-pltdoc=3D"x">=E2=86=
=90 prev</a>&nbsp;&nbsp;<a href=3D"https://course.ccs.neu.edu/cs5004/Lectur=
es.html" title=3D"up to &quot;Lectures&quot;" data-pltdoc=3D"x">up</a>&nbsp=
;&nbsp;<a href=3D"https://course.ccs.neu.edu/cs5004/lecturelists_adt_java.h=
tml" title=3D"forward to &quot;Lecture 5: Lists continued&quot;" data-pltdo=
c=3D"x">next =E2=86=92</a></span>&nbsp;</div><h4><a name=3D"(part._)"></a><=
span class=3D"LectureNum">Lecture 4:</span> Recursive data structures: List=
s (&amp; Abstract Classes Review)</h4><p class=3D"boxed">How to represent l=
ists of data.<br>
Methods on lists.<br>
Abstracting behavior.<br></p><div class=3D"RelatedFiles"><blockquote><p cla=
ss=3D"boxed">Related files:<br><span class=3D"hspace">&nbsp;&nbsp;</span><a=
 href=3D"https://course.ccs.neu.edu/cs5004/lectures/lists_and_hof/code/Book=
.java">Book.java</a><span class=3D"hspace">&nbsp;&nbsp;</span> <span class=
=3D"hspace">&nbsp;&nbsp;</span><a href=3D"https://course.ccs.neu.edu/cs5004=
/lectures/lists_and_hof/code/IListOfBooks.java">IListOfBooks.java</a><span =
class=3D"hspace">&nbsp;&nbsp;</span> <span class=3D"hspace">&nbsp;&nbsp;</s=
pan><a href=3D"https://course.ccs.neu.edu/cs5004/lectures/lists_and_hof/cod=
e/EmptyNode.java">EmptyNode.java</a><span class=3D"hspace">&nbsp;&nbsp;</sp=
an> <span class=3D"hspace">&nbsp;&nbsp;</span><a href=3D"https://course.ccs=
.neu.edu/cs5004/lectures/lists_and_hof/code/ElementNode.java">ElementNode.j=
ava</a><span class=3D"hspace">&nbsp;&nbsp;</span> <span class=3D"hspace">&n=
bsp;&nbsp;</span><a href=3D"https://course.ccs.neu.edu/cs5004/lectures/list=
s_and_hof/code/IListOfBooksTest.java">IListOfBooksTest.java</a><span class=
=3D"hspace">&nbsp;&nbsp;</span> </p></blockquote></div><h5>4.1<tt>&nbsp;</t=
t><a name=3D"(part._.Brief_.Review__.Abstract_.Classes)"></a>Brief Review: =
Abstract Classes</h5><p>We saw in <a href=3D"https://course.ccs.neu.edu/cs5=
004/lectureenums_unions.html" data-pltdoc=3D"x"><span class=3D"LectureNum">=
Lecture 3:</span> Representing more complex forms of data</a> that an inter=
face and abstract classes can be used to specify the protocol for types to =
implement specific behavior.
Depending on the situation either approach towards design - using interface=
s and/or abstract classes - is appropriate.
During Analysis and early Design, one may take a "top down" approach and us=
e abstract classes to help organize and understand the domain more effectiv=
ely. An abstract class
might begin as a placeholder for a hierarchical concept, and it may disappe=
ar as design iterations fold those concepts into more direct
approaches for implementation. On the other hand, during later design and i=
terations of implementation, one may take a "bottom up" approach to
re-factor the existing classes and "push" common, reusable code into an abs=
tract class.</p><p>Some general observations for design decision-making (wi=
th the understanding that there is no one <span class=3D"emph">correct</spa=
n> answer for all cases)</p><p><img src=3D"https://course.ccs.neu.edu/cs500=
4/abstract_and_interfaces.png" alt=3D"" width=3D"862" height=3D"388"></p><h=
5>4.2<tt>&nbsp;</tt><a name=3D"(part._.Quick_.Peek__.Static)"></a>Quick Pee=
k: Static</h5><p>So far, we have discussed classes, objects, instance data =
(the attributes specified by a class and "realized" when an object is insta=
ntiated from the class blueprint), and
instance methods (the functions specified by a class and invoked by each in=
stance to do something). Thus, we have (up to now) used classes as a <span =
class=3D"emph">blueprint</span> for how to make and use objects.
In addition to this viewpoint, object-oriented systems also support the con=
cept of classes themselves having behavior and data for use by its instance=
s and other clients.
The breadth of support for class-related behavior and data varies from one =
OO language to the next. But in general, this facility allows class-scoped =
data to be accessed before/without any objects created.
In Java, class data and class methods are created with the <span class=3D"e=
mph">static</span> keyword.</p><p></p><div class=3D"SIntrapara">Consider th=
e following:
</div><div class=3D"SIntrapara"><div class=3D"JavaHighlightBlock"><blockquo=
te class=3D"SCodeFlow"><table cellspacing=3D"0" cellpadding=3D"0" class=3D"=
RktBlk"><tbody><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjK=
eyword">public</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D=
"ProfjKeyword">class</span><span class=3D"ProfjWhiteSpace"> </span><span cl=
ass=3D"ProfjType">CalendarEventV2</span><span class=3D"ProfjWhiteSpace"> </=
span><span class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></span></=
td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpa=
ce">  </span><span class=3D"ProfjComment">// create a set of values
</span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjIdentif=
ier">enum</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Prof=
jConstant">DAY</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D=
"ProfjKeyword">{</span><span class=3D"ProfjWhiteSpace"> </span><span class=
=3D"ProfjConstant">MONDAY</span><span class=3D"ProfjDefault">,</span><span =
class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjConstant">TUESDAY</sp=
an><span class=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"> </=
span><span class=3D"ProfjConstant">WEDNESDAY</span><span class=3D"ProfjDefa=
ult">,</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjCo=
nstant">THURSDAY</span><span class=3D"ProfjDefault">,</span><span class=3D"=
ProfjWhiteSpace"> </span><span class=3D"ProfjConstant">FRIDAY</span><span c=
lass=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"> </span><span=
 class=3D"ProfjConstant">SATURDAY</span><span class=3D"ProfjDefault">,</spa=
n><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjConstant">SUN=
DAY</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeywo=
rd">}</span><span class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></=
span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjE=
rror">&nbsp;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span c=
lass=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span clas=
s=3D"ProfjKeyword">static</span><span class=3D"ProfjWhiteSpace"> </span><sp=
an class=3D"ProfjKeyword">private</span><span class=3D"ProfjWhiteSpace"> </=
span><span class=3D"ProfjPrimType">int</span><span class=3D"ProfjWhiteSpace=
"> </span><span class=3D"ProfjIdentifier">currentYear</span><span class=3D"=
ProfjDefault">;</span><span class=3D"RktMeta"></span></td></tr><tr><td><spa=
n class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span c=
lass=3D"ProfjKeyword">private</span><span class=3D"ProfjWhiteSpace"> </span=
><span class=3D"ProfjConstant">DAY</span><span class=3D"ProfjWhiteSpace"> <=
/span><span class=3D"ProfjIdentifier">dayOfEvent</span><span class=3D"Profj=
Default">;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span cla=
ss=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=
=3D"ProfjKeyword">private</span><span class=3D"ProfjWhiteSpace"> </span><sp=
an class=3D"ProfjPrimType">String</span><span class=3D"ProfjWhiteSpace"> </=
span><span class=3D"ProfjIdentifier">eventName</span><span class=3D"ProfjDe=
fault">;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=
=3D"RktMeta"></span><span class=3D"ProfjError">&nbsp;</span><span class=3D"=
RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span clas=
s=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjComment">// ... etc. ...
</span><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></sp=
an></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhi=
teSpace">  </span><span class=3D"ProfjKeyword">public</span><span class=3D"=
ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">static</span><span cl=
ass=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">void</span><sp=
an class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">setCur=
rentYear</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjPri=
mType">int</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Pro=
fjIdentifier">year</span><span class=3D"ProfjKeyword">)</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span cla=
ss=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><spa=
n class=3D"ProfjWhiteSpace">    </span><span class=3D"ProfjIdentifier">curr=
entYear</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjK=
eyword">=3D</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Pr=
ofjIdentifier">year</span><span class=3D"ProfjDefault">;</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjComment">//do NOT use "thi=
s" no object. It's a class variable
</span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword=
">}</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"R=
ktMeta"></span><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMe=
ta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"=
ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">public</span><span c=
lass=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">static</span>=
<span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjPrimType">int</=
span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier=
">getCurrentYear</span><span class=3D"ProfjKeyword">(</span><span class=3D"=
ProfjKeyword">)</span><span class=3D"ProfjWhiteSpace"> </span><span class=
=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></span></td></tr><tr><td>=
<span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">    </span><=
span class=3D"ProfjType">System</span><span class=3D"ProfjDefault">.</span>=
<span class=3D"ProfjIdentifier">out</span><span class=3D"ProfjDefault">.</s=
pan><span class=3D"ProfjIdentifier">println</span><span class=3D"ProfjKeywo=
rd">(</span><span class=3D"ProfjIdentifier">currentYear</span><span class=
=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">;</span><span class=
=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span =
class=3D"ProfjWhiteSpace">    </span><span class=3D"ProfjKeyword">if</span>=
<span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">(</spa=
n><span class=3D"ProfjIdentifier">currentYear</span><span class=3D"ProfjWhi=
teSpace"> </span><span class=3D"ProfjKeyword">=3D=3D</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjLiteral">0</span><span class=3D=
"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpace"> </span><span class=
=3D"ProfjKeyword">{</span><span class=3D"ProfjWhiteSpace"> </span><span cla=
ss=3D"ProfjComment">// Java initializes primitive types like ints to zero
</span><span class=3D"ProfjWhiteSpace">      </span><span class=3D"ProfjIde=
ntifier">currentYear</span><span class=3D"ProfjWhiteSpace"> </span><span cl=
ass=3D"ProfjKeyword">=3D</span><span class=3D"ProfjWhiteSpace"> </span><spa=
n class=3D"ProfjLiteral">2020</span><span class=3D"ProfjDefault">;</span><s=
pan class=3D"ProfjWhiteSpace">   </span><span class=3D"ProfjComment">// "la=
zy" initialization with a good default
</span><span class=3D"ProfjWhiteSpace">      </span><span class=3D"ProfjKey=
word">}</span><span class=3D"ProfjWhiteSpace">                       </span=
><span class=3D"ProfjComment">// if this was an object, we'd check for null=
 instead
</span><span class=3D"ProfjWhiteSpace">      </span><span class=3D"ProfjKey=
word">return</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"P=
rofjIdentifier">currentYear</span><span class=3D"ProfjDefault">;</span><spa=
n class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span=
><span class=3D"ProfjWhiteSpace">    </span><span class=3D"ProfjKeyword">}<=
/span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMe=
ta"></span><span class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></s=
pan></td></tr></tbody></table></blockquote></div></div><p></p><p>When a var=
iable is declared as static, then a single copy of variable is created and =
shared among all objects at the class level.
All instances of the class share the same static variable, so these "class =
variables" (rather than "instance variables") are similar to
class-scoped global variables.</p><p>Note that class methods (static method=
s in Java) can only access class variables (static data in Java) since ther=
e is no guarantee that an
object will actually be in existence when the method is invoked.</p><p></p>=
<div class=3D"SIntrapara">Using the previous example code, we would call th=
e static method (aka "class method") in this way:
</div><div class=3D"SIntrapara"><div class=3D"JavaHighlightBlock"><blockquo=
te class=3D"SCodeFlow"><table cellspacing=3D"0" cellpadding=3D"0" class=3D"=
RktBlk"><tbody><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjT=
ype">System</span><span class=3D"ProfjDefault">.</span><span class=3D"Profj=
Identifier">out</span><span class=3D"ProfjDefault">.</span><span class=3D"P=
rofjIdentifier">println</span><span class=3D"ProfjKeyword">(</span><span cl=
ass=3D"ProfjString">"Current year is "</span><span class=3D"ProfjWhiteSpace=
"> </span><span class=3D"ProfjKeyword">+</span><span class=3D"ProfjWhiteSpa=
ce"> </span><span class=3D"ProfjType">CalendarEventV2</span><span class=3D"=
ProfjDefault">.</span><span class=3D"ProfjIdentifier">getCurrentYear</span>=
<span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">)</span><=
span class=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">;</span><s=
pan class=3D"RktMeta"></span></td></tr></tbody></table></blockquote></div><=
/div><p></p><p>Note the use of the fully-qualified name by using the <span =
class=3D"emph">className dot static-method</span> format. Again, there is n=
o OBJECT invoking this method; we
are accessing it through the class.</p><p>When would you use static/class m=
ethods and data? Certainly when you would have leaned towards using a globa=
l variable, class data (and the class methods to access that data)
are a suitable choice. Later in this course when we cover design patterns y=
ou will explore the use of class methods for the purpose of creation and "f=
actory" approaches
to give your systems flexibility in how objects are instantiated.</p><h5>4.=
3<tt>&nbsp;</tt><a name=3D"(part._.Recursive_data_structures)"></a>Recursiv=
e data structures</h5><p>We saw in <a href=3D"https://course.ccs.neu.edu/cs=
5004/lectureenums_unions.html" data-pltdoc=3D"x"><span class=3D"LectureNum"=
>Lecture 3:</span> Representing more complex forms of data</a> that an inte=
rface can be used to represent data that is one of several different forms.=
 Sometimes, some of those forms refer to themselves or other forms of the d=
ata type adhering to the protocol (common list of methods) and implementing=
 the interface. If so, this is a recursive structure.</p><h5>4.4<tt>&nbsp;<=
/tt><a name=3D"(part._.A_collection_of_books)"></a>A collection of books</h=
5><p>We use a simplified variant of a book representation. This is included=
 in the <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D=
"RktMeta"></span><span class=3D"ProfjType">Book</span><span class=3D"ProfjD=
efault">.</span><span class=3D"ProfjIdentifier">java</span><span class=3D"R=
ktMeta"></span></span></span> file in the accompanying code. Specifically, =
the <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"Rkt=
Meta"></span><span class=3D"ProfjType">Book</span><span class=3D"RktMeta"><=
/span></span></span> class has the following structure:</p><div class=3D"Ja=
vaHighlightBlock"><blockquote class=3D"SCodeFlow"><table cellspacing=3D"0" =
cellpadding=3D"0" class=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta"><=
/span><span class=3D"ProfjKeyword">package</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjIdentifier">bookutil</span><span class=3D=
"ProfjDefault">;</span><span class=3D"RktMeta"></span></td></tr><tr><td><sp=
an class=3D"RktMeta"></span><span class=3D"ProfjError">&nbsp;</span><span c=
lass=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><s=
pan class=3D"ProfjBlockComment">/**
 * This class represents a book. A book has a title, an author, a year
 * of publication and a price
 */</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"R=
ktMeta"></span><span class=3D"ProfjKeyword">public</span><span class=3D"Pro=
fjWhiteSpace"> </span><span class=3D"ProfjKeyword">class</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">Book</span><span cla=
ss=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span c=
lass=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><s=
pan class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">private=
</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjPrimType=
">String</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Profj=
Identifier">title</span><span class=3D"ProfjDefault">;</span><span class=3D=
"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span cla=
ss=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">private</span>=
<span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjPrimType">Strin=
g</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentif=
ier">author</span><span class=3D"ProfjDefault">;</span><span class=3D"RktMe=
ta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"=
ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">private</span><span =
class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjPrimType">int</span><=
span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">year=
</span><span class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span>=
</td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteS=
pace">  </span><span class=3D"ProfjKeyword">private</span><span class=3D"Pr=
ofjWhiteSpace"> </span><span class=3D"ProfjPrimType">float</span><span clas=
s=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">price</span><=
span class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span></td></t=
r><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjError">&nbsp;<=
/span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMe=
ta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjBlo=
ckComment">/**
   * Construct a Book object that has the provided title, author and  price
   *
   * @param title  the title to be given to this book
   * @param author the author of this book
   * @param year   year in which the book was published
   * @param price  the price to be assigned to this book
   */</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D=
"RktMeta"></span><span class=3D"ProfjError">&nbsp;</span><span class=3D"Rkt=
Meta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=
=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">public</span><sp=
an class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">Book</span><=
span class=3D"ProfjKeyword">(</span><span class=3D"ProfjPrimType">String</s=
pan><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier"=
>title</span><span class=3D"ProfjDefault">,</span><span class=3D"ProfjWhite=
Space"> </span><span class=3D"ProfjPrimType">String</span><span class=3D"Pr=
ofjWhiteSpace"> </span><span class=3D"ProfjIdentifier">author</span><span c=
lass=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"> </span><span=
 class=3D"ProfjPrimType">int</span><span class=3D"ProfjWhiteSpace"> </span>=
<span class=3D"ProfjIdentifier">year</span><span class=3D"ProfjDefault">,</=
span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjPrimType">=
float</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIde=
ntifier">price</span><span class=3D"ProfjKeyword">)</span><span class=3D"Pr=
ofjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"=
RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span clas=
s=3D"ProfjWhiteSpace">    </span><span class=3D"ProfjDefault">.</span><span=
 class=3D"ProfjDefault">.</span><span class=3D"ProfjDefault">.</span><span =
class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><=
span class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">}</spa=
n><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta">=
</span><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></sp=
an></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhi=
teSpace">  </span><span class=3D"ProfjBlockComment">/**
   * Return the title of this book
   *
   * @return the title of this book
   */</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D=
"RktMeta"></span><span class=3D"ProfjError">&nbsp;</span><span class=3D"Rkt=
Meta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=
=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">public</span><sp=
an class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjPrimType">String</=
span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier=
">getTitle</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjK=
eyword">)</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Prof=
jKeyword">{</span><span class=3D"RktMeta"></span></td></tr><tr><td><span cl=
ass=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">    </span><span cla=
ss=3D"ProfjKeyword">return</span><span class=3D"ProfjWhiteSpace"> </span><s=
pan class=3D"ProfjKeyword">this</span><span class=3D"ProfjDefault">.</span>=
<span class=3D"ProfjIdentifier">title</span><span class=3D"ProfjDefault">;<=
/span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMe=
ta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKey=
word">}</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=
=3D"RktMeta"></span><span class=3D"ProfjError">&nbsp;</span><span class=3D"=
RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span clas=
s=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjBlockComment">/**
   * Return the author of this book
   *
   * @return the author of this book
   */</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D=
"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"Pr=
ofjKeyword">public</span><span class=3D"ProfjWhiteSpace"> </span><span clas=
s=3D"ProfjPrimType">String</span><span class=3D"ProfjWhiteSpace"> </span><s=
pan class=3D"ProfjIdentifier">getAuthor</span><span class=3D"ProfjKeyword">=
(</span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpace=
"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></sp=
an></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhi=
teSpace">    </span><span class=3D"ProfjKeyword">return</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">this</span><span =
class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">author</span=
><span class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span></td><=
/tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">=
  </span><span class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></spa=
n></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjErro=
r">&nbsp;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span clas=
s=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=
=3D"ProfjBlockComment">/**
   * Return the price of this book
   *
   * @return the price of this book
   */</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D=
"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"Pr=
ofjKeyword">public</span><span class=3D"ProfjWhiteSpace"> </span><span clas=
s=3D"ProfjPrimType">float</span><span class=3D"ProfjWhiteSpace"> </span><sp=
an class=3D"ProfjIdentifier">getPrice</span><span class=3D"ProfjKeyword">(<=
/span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpace">=
 </span><span class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></span=
></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhite=
Space">    </span><span class=3D"ProfjKeyword">return</span><span class=3D"=
ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">this</span><span clas=
s=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">price</span><spa=
n class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span></td></tr><=
tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </s=
pan><span class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></t=
d></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjError">&n=
bsp;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"=
RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"Pro=
fjBlockComment">/**
   * Return the year in which this book was published
   * @return the year of publication
   */</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D=
"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"Pr=
ofjKeyword">public</span><span class=3D"ProfjWhiteSpace"> </span><span clas=
s=3D"ProfjPrimType">int</span><span class=3D"ProfjWhiteSpace"> </span><span=
 class=3D"ProfjIdentifier">getYear</span><span class=3D"ProfjKeyword">(</sp=
an><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpace"> </=
span><span class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></span></=
td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpa=
ce">    </span><span class=3D"ProfjKeyword">return</span><span class=3D"Pro=
fjWhiteSpace"> </span><span class=3D"ProfjKeyword">this</span><span class=
=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">year</span><span =
class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span></td></tr><tr=
><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </spa=
n><span class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td>=
</tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjError">&nbs=
p;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"Rk=
tMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"Profj=
Error">@</span><span class=3D"ProfjType">Override</span><span class=3D"RktM=
eta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D=
"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">public</span><span =
class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjPrimType">String</spa=
n><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">t=
oString</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyw=
ord">)</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKe=
yword">{</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=
=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">    </span><span class=
=3D"ProfjDefault">.</span><span class=3D"ProfjDefault">.</span><span class=
=3D"ProfjDefault">.</span><span class=3D"RktMeta"></span></td></tr><tr><td>=
<span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><sp=
an class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td></tr>=
<tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjError">&nbsp;</s=
pan><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta=
"></span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjBlock=
Comment">/**
   * Determine if this book was published before the given year
   *
   * @param year the year to test against
   * @return true if this book was published before the provided
   * year, false otherwise
   */</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D=
"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"Pr=
ofjKeyword">public</span><span class=3D"ProfjWhiteSpace"> </span><span clas=
s=3D"ProfjPrimType">boolean</span><span class=3D"ProfjWhiteSpace"> </span><=
span class=3D"ProfjIdentifier">before</span><span class=3D"ProfjKeyword">(<=
/span><span class=3D"ProfjPrimType">int</span><span class=3D"ProfjWhiteSpac=
e"> </span><span class=3D"ProfjIdentifier">year</span><span class=3D"ProfjK=
eyword">)</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Prof=
jKeyword">{</span><span class=3D"RktMeta"></span></td></tr><tr><td><span cl=
ass=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">    </span><span cla=
ss=3D"ProfjKeyword">return</span><span class=3D"ProfjWhiteSpace"> </span><s=
pan class=3D"ProfjKeyword">this</span><span class=3D"ProfjDefault">.</span>=
<span class=3D"ProfjIdentifier">year</span><span class=3D"ProfjWhiteSpace">=
 </span><span class=3D"ProfjKeyword">&lt;</span><span class=3D"ProfjWhiteSp=
ace"> </span><span class=3D"ProfjIdentifier">year</span><span class=3D"Prof=
jDefault">;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span cl=
ass=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=
=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td></tr><tr><td>=
<span class=3D"RktMeta"></span><span class=3D"ProfjError">&nbsp;</span><spa=
n class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span=
><span class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjBlockComment"=
>/**
   * Determine if this book is cheaper than the book passed to it
   *
   * @param book the book whose price should be compared to this book
   * @return true if this book is cheaper than the other book, false
   * otherwise
   */</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D=
"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"Pr=
ofjKeyword">public</span><span class=3D"ProfjWhiteSpace"> </span><span clas=
s=3D"ProfjPrimType">boolean</span><span class=3D"ProfjWhiteSpace"> </span><=
span class=3D"ProfjIdentifier">cheaperThan</span><span class=3D"ProfjKeywor=
d">(</span><span class=3D"ProfjType">Book</span><span class=3D"ProfjWhiteSp=
ace"> </span><span class=3D"ProfjIdentifier">book</span><span class=3D"Prof=
jKeyword">)</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Pr=
ofjKeyword">{</span><span class=3D"RktMeta"></span></td></tr><tr><td><span =
class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">    </span><span c=
lass=3D"ProfjKeyword">return</span><span class=3D"ProfjWhiteSpace"> </span>=
<span class=3D"ProfjKeyword">this</span><span class=3D"ProfjDefault">.</spa=
n><span class=3D"ProfjIdentifier">price</span><span class=3D"ProfjWhiteSpac=
e"> </span><span class=3D"ProfjKeyword">&lt;</span><span class=3D"ProfjWhit=
eSpace"> </span><span class=3D"ProfjIdentifier">book</span><span class=3D"P=
rofjDefault">.</span><span class=3D"ProfjIdentifier">getPrice</span><span c=
lass=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">)</span><span cl=
ass=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span></td></tr><tr><=
td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span>=
<span class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td></=
tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjError">&nbsp;=
</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktM=
eta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjEr=
ror">@</span><span class=3D"ProfjType">Override</span><span class=3D"RktMet=
a"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"P=
rofjWhiteSpace">  </span><span class=3D"ProfjKeyword">public</span><span cl=
ass=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjPrimType">boolean</span=
><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">eq=
uals</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjPrimTyp=
e">Object</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Prof=
jIdentifier">o</span><span class=3D"ProfjKeyword">)</span><span class=3D"Pr=
ofjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"=
RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span clas=
s=3D"ProfjWhiteSpace">    </span><span class=3D"ProfjDefault">.</span><span=
 class=3D"ProfjDefault">.</span><span class=3D"ProfjDefault">.</span><span =
class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><=
span class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">}</spa=
n><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta">=
</span><span class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span>=
</td></tr></tbody></table></blockquote></div><p>Suppose we wish to keep tra=
ck of several books. The simplest way to do this is to create a <span class=
=3D"emph">list</span>. There are several ways to represent a list of someth=
ing, one of which is a linked list.</p><p>A linked list is made of individu=
al nodes. A node in the list contains the data (in our case, the book) and =
points to the next node in the list (the link). The last node in such a lis=
t is often empty, signifying the end of the list. Thus the linked list stor=
es the data sequentially.</p><p><img src=3D"https://course.ccs.neu.edu/cs50=
04/linkedlist.png" alt=3D"" width=3D"618" height=3D"186"></p><h5>4.4.1<tt>&=
nbsp;</tt><a name=3D"(part._.Data_representation_and_operations)"></a>Data =
representation and operations</h5><p>A linked list is an example of a self-=
referential data structure, i.e. a recursive structure. As the illustration=
 above shows, a list can be thought of as a single node followed by =E2=80=
=9Cthe rest of the list=E2=80=9D. An empty list consists simply of an empty=
 node. Thus a list can implement a protocol that handles that variety. A li=
st can be (a) an empty node or (b) a node with an element of data and anoth=
er list.</p><p>We=E2=80=99d like to define the following operations on a li=
st:</p><ul><li><p>Count the number of books in the list</p></li><li><p>Calc=
ulate the total price of the list of books</p></li><li><p>Print the list of=
 books</p></li><li><p>Get a list of books that were published before a give=
n year</p></li><li><p>Sort the list of books by price</p></li></ul><p>This =
is denoted by the following class diagram</p><p><img src=3D"https://course.=
ccs.neu.edu/cs5004/classdiagram.png" alt=3D"" width=3D"467" height=3D"415">=
</p><p>and by the following code snippet:</p><div class=3D"JavaHighlightBlo=
ck"><blockquote class=3D"SCodeFlow"><table cellspacing=3D"0" cellpadding=3D=
"0" class=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta"></span><span cl=
ass=3D"ProfjBlockComment">/**
 * This interface represents all the operations to be supported by a list o=
f
 * books
 */</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"R=
ktMeta"></span><span class=3D"ProfjKeyword">public</span><span class=3D"Pro=
fjWhiteSpace"> </span><span class=3D"ProfjKeyword">interface</span><span cl=
ass=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">IListOfBooks</spa=
n><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</s=
pan><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta=
"></span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjPrimT=
ype">int</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Profj=
Identifier">count</span><span class=3D"ProfjKeyword">(</span><span class=3D=
"ProfjKeyword">)</span><span class=3D"ProfjDefault">;</span><span class=3D"=
RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span clas=
s=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjPrimType">float</span><s=
pan class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">total=
Price</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeywor=
d">)</span><span class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></s=
pan></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWh=
iteSpace">  </span><span class=3D"ProfjType">IListOfBooks</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">allBefore</spa=
n><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjPrimType">int</s=
pan><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier"=
>year</span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjDefaul=
t">;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"=
RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"Pro=
fjType">IListOfBooks</span><span class=3D"ProfjWhiteSpace"> </span><span cl=
ass=3D"ProfjIdentifier">sortByPrice</span><span class=3D"ProfjKeyword">(</s=
pan><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">;</sp=
an><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"=
></span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjPrimTy=
pe">String</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Pro=
fjIdentifier">toString</span><span class=3D"ProfjKeyword">(</span><span cla=
ss=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">;</span><span clas=
s=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span=
 class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td></tr><t=
r><td><span class=3D"RktMeta"></span><span class=3D"ProfjError">&nbsp;</spa=
n><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta">=
</span><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></sp=
an></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjKey=
word">public</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"P=
rofjKeyword">class</span><span class=3D"ProfjWhiteSpace"> </span><span clas=
s=3D"ProfjType">EmptyNode</span><span class=3D"ProfjWhiteSpace"> </span><sp=
an class=3D"ProfjKeyword">implements</span><span class=3D"ProfjWhiteSpace">=
 </span><span class=3D"ProfjType">IListOfBooks</span><span class=3D"ProfjWh=
iteSpace"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"RktMe=
ta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"=
ProfjError">&nbsp;</span><span class=3D"RktMeta"></span></td></tr><tr><td><=
span class=3D"RktMeta"></span><span class=3D"ProfjKeyword">}</span><span cl=
ass=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><sp=
an class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></span></td></=
tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjKeyword">publ=
ic</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeywor=
d">class</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Profj=
Type">ElementNode</span><span class=3D"ProfjWhiteSpace"> </span><span class=
=3D"ProfjKeyword">implements</span><span class=3D"ProfjWhiteSpace"> </span>=
<span class=3D"ProfjType">IListOfBooks</span><span class=3D"ProfjWhiteSpace=
"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></sp=
an></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhi=
teSpace">  </span><span class=3D"ProfjKeyword">private</span><span class=3D=
"ProfjWhiteSpace"> </span><span class=3D"ProfjType">Book</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">data</span><sp=
an class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span></td></tr>=
<tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </=
span><span class=3D"ProfjKeyword">private</span><span class=3D"ProfjWhiteSp=
ace"> </span><span class=3D"ProfjType">IListOfBooks</span><span class=3D"Pr=
ofjWhiteSpace"> </span><span class=3D"ProfjIdentifier">rest</span><span cla=
ss=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span></td></tr><tr><t=
d><span class=3D"RktMeta"></span><span class=3D"ProfjError">&nbsp;</span><s=
pan class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></sp=
an><span class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td=
></tr></tbody></table></blockquote></div><blockquote class=3D"refpara"><blo=
ckquote class=3D"refcolumn"><blockquote class=3D"refcontent"><p>An <span cl=
ass=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span=
><span class=3D"ProfjType">EmptyNode</span><span class=3D"RktMeta"></span><=
/span></span> object represents an empty list. It also represents the end o=
f a list. This is sometimes referred to as a sentinel representation, in co=
ntrast with ending a list in <span class=3D"RktBlk"><span class=3D"JavaHigh=
light"><span class=3D"RktMeta"></span><span class=3D"ProfjLiteral">null</sp=
an><span class=3D"RktMeta"></span></span></span>. Having an explicit empty =
object in the end helps in implementing several operations, as we see in th=
is lecture.</p></blockquote></blockquote></blockquote><h5>4.4.2<tt>&nbsp;</=
tt><a name=3D"(part._.Examples)"></a>Examples</h5><p>Here are some examples=
 of lists of books:</p><div class=3D"JavaHighlightBlock"><blockquote class=
=3D"SCodeFlow"><table cellspacing=3D"0" cellpadding=3D"0" class=3D"RktBlk">=
<tbody><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjIdentifie=
r">emptyListOfBooks</span><span class=3D"ProfjWhiteSpace"> </span><span cla=
ss=3D"ProfjKeyword">=3D</span><span class=3D"ProfjWhiteSpace"> </span><span=
 class=3D"ProfjKeyword">new</span><span class=3D"ProfjWhiteSpace"> </span><=
span class=3D"ProfjType">EmptyNode</span><span class=3D"ProfjKeyword">(</sp=
an><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">;</spa=
n><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta">=
</span><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></sp=
an></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjIde=
ntifier">partialListOfBooks</span><span class=3D"ProfjWhiteSpace"> </span><=
span class=3D"ProfjKeyword">=3D</span><span class=3D"RktMeta"></span></td><=
/tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjKeyword">new=
</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">El=
ementNode</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKe=
yword">new</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Pro=
fjType">Book</span><span class=3D"ProfjKeyword">(</span><span class=3D"Prof=
jString">"HP 1"</span><span class=3D"ProfjDefault">,</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjString">"J.K. Rowling"</span><s=
pan class=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"> </span>=
<span class=3D"ProfjLiteral">1997</span><span class=3D"ProfjDefault">,</spa=
n><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjLiteral">19.9=
9f</span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">=
,</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"Rkt=
Meta"></span><span class=3D"ProfjKeyword">new</span><span class=3D"ProfjWhi=
teSpace"> </span><span class=3D"ProfjType">ElementNode</span><span class=3D=
"ProfjKeyword">(</span><span class=3D"ProfjKeyword">new</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">Book</span><span cla=
ss=3D"ProfjKeyword">(</span><span class=3D"ProfjString">"HP 2"</span><span =
class=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"> </span><spa=
n class=3D"ProfjString">"J.K. Rowling"</span><span class=3D"ProfjDefault">,=
</span><span class=3D"ProfjLiteral">1999</span><span class=3D"ProfjDefault"=
>,</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjLitera=
l">29.99f</span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjDe=
fault">,</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=
=3D"RktMeta"></span><span class=3D"ProfjKeyword">new</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjType">ElementNode</span><span c=
lass=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">new</span><span =
class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">Book</span><spa=
n class=3D"ProfjKeyword">(</span><span class=3D"ProfjString">"HP 3"</span><=
span class=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"> </span=
><span class=3D"ProfjString">"J.K. Rowling"</span><span class=3D"ProfjDefau=
lt">,</span><span class=3D"ProfjLiteral">2001</span><span class=3D"ProfjDef=
ault">,</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjL=
iteral">10.99f</span><span class=3D"ProfjKeyword">)</span><span class=3D"Pr=
ofjDefault">,</span><span class=3D"RktMeta"></span></td></tr><tr><td><span =
class=3D"RktMeta"></span><span class=3D"ProfjKeyword">new</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">EmptyNode</span><spa=
n class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">)</span><span=
 class=3D"ProfjKeyword">)</span><span class=3D"ProfjKeyword">)</span><span =
class=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">;</span><span c=
lass=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><s=
pan class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></span></td><=
/tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjIdentifier">=
listOfBooks</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Pr=
ofjKeyword">=3D</span><span class=3D"RktMeta"></span></td></tr><tr><td><spa=
n class=3D"RktMeta"></span><span class=3D"ProfjKeyword">new</span><span cla=
ss=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">ElementNode</span>=
<span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">new</span=
><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">Book</sp=
an><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjString">"HP 4"<=
/span><span class=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace">=
 </span><span class=3D"ProfjString">"J.K. Rowling"</span><span class=3D"Pro=
fjDefault">,</span><span class=3D"ProfjLiteral">2004</span><span class=3D"P=
rofjDefault">,</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D=
"ProfjLiteral">15.49f</span><span class=3D"ProfjKeyword">)</span><span clas=
s=3D"ProfjDefault">,</span><span class=3D"RktMeta"></span></td></tr><tr><td=
><span class=3D"RktMeta"></span><span class=3D"ProfjKeyword">new</span><spa=
n class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">ElementNode</=
span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">new<=
/span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">Boo=
k</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjString">"H=
P 5"</span><span class=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSp=
ace"> </span><span class=3D"ProfjString">"J.K. Rowling"</span><span class=
=3D"ProfjDefault">,</span><span class=3D"ProfjLiteral">2006</span><span cla=
ss=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"> </span><span c=
lass=3D"ProfjLiteral">12.99f</span><span class=3D"ProfjKeyword">)</span><sp=
an class=3D"ProfjDefault">,</span><span class=3D"RktMeta"></span></td></tr>=
<tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjKeyword">new</sp=
an><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">Elemen=
tNode</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeywor=
d">new</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjTy=
pe">Book</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjStr=
ing">"HP 6"</span><span class=3D"ProfjDefault">,</span><span class=3D"Profj=
WhiteSpace"> </span><span class=3D"ProfjString">"J.K. Rowling"</span><span =
class=3D"ProfjDefault">,</span><span class=3D"ProfjLiteral">2007</span><spa=
n class=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"> </span><s=
pan class=3D"ProfjLiteral">7.99f</span><span class=3D"ProfjKeyword">)</span=
><span class=3D"ProfjDefault">,</span><span class=3D"RktMeta"></span></td><=
/tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjIdentifier">=
partialListOfBooks</span><span class=3D"ProfjKeyword">)</span><span class=
=3D"ProfjKeyword">)</span><span class=3D"ProfjKeyword">)</span><span class=
=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span></td></tr></tbody>=
</table></blockquote></div><h5>4.4.3<tt>&nbsp;</tt><a name=3D"(part._count-=
list)"></a>Counting the number of books</h5><p>For the above list, we expec=
t the following results for counting:</p><div class=3D"JavaHighlightBlock">=
<blockquote class=3D"SCodeFlow"><table cellspacing=3D"0" cellpadding=3D"0" =
class=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta"></span><span class=
=3D"ProfjIdentifier">emptyListOfBooks</span><span class=3D"ProfjWhiteSpace"=
> </span><span class=3D"ProfjKeyword">=3D</span><span class=3D"ProfjKeyword=
">&gt;</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjLi=
teral">0</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=
=3D"RktMeta"></span><span class=3D"ProfjIdentifier">partialListOfBooks</spa=
n><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">=3D<=
/span><span class=3D"ProfjKeyword">&gt;</span><span class=3D"ProfjWhiteSpac=
e"> </span><span class=3D"ProfjLiteral">3</span><span class=3D"RktMeta"></s=
pan></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjId=
entifier">listOfBooks</span><span class=3D"ProfjWhiteSpace"> </span><span c=
lass=3D"ProfjKeyword">=3D</span><span class=3D"ProfjKeyword">&gt;</span><sp=
an class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjLiteral">6</span><=
span class=3D"RktMeta"></span></td></tr></tbody></table></blockquote></div>=
<p>When a structure is recursive (as this list is), it helps to express an =
operation on it recursively as well. Often operations on recursive structur=
es are recursive themselves as they exploit the structure.</p><p>We may des=
cribe counting the number of books as: =E2=80=9Cthe number of books in the =
list can be obtained by counting the first book, and adding it to the numbe=
r of books in the rest of the list.=E2=80=9D As the base case, if the list =
is empty, the number of books is 0. Since <span class=3D"RktBlk"><span clas=
s=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D"ProfjType=
">EmptyNode</span><span class=3D"RktMeta"></span></span></span> represents =
an empty list, the base case is the implementation of <span class=3D"RktBlk=
"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=
=3D"ProfjIdentifier">count</span><span class=3D"ProfjKeyword">(</span><span=
 class=3D"ProfjKeyword">)</span><span class=3D"RktMeta"></span></span></spa=
n> in that class, while the recursive definition is the implementation of <=
span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"=
></span><span class=3D"ProfjIdentifier">count</span><span class=3D"ProfjKey=
word">(</span><span class=3D"ProfjKeyword">)</span><span class=3D"RktMeta">=
</span></span></span> in the <span class=3D"RktBlk"><span class=3D"JavaHigh=
light"><span class=3D"RktMeta"></span><span class=3D"ProfjType">ElementNode=
</span><span class=3D"RktMeta"></span></span></span>
class.</p><div class=3D"JavaHighlightBlock"><blockquote class=3D"SCodeFlow"=
><table cellspacing=3D"0" cellpadding=3D"0" class=3D"RktBlk"><tbody><tr><td=
><span class=3D"RktMeta"></span><span class=3D"ProfjComment">//In EmptyNode
</span><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></sp=
an></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjCom=
ment">//the base case
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjPrimType">int</span><span class=3D"ProfjW=
hiteSpace"> </span><span class=3D"ProfjIdentifier">count</span><span class=
=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">)</span><span class=
=3D"ProfjKeyword">{</span><span class=3D"ProfjKeyword">return</span><span c=
lass=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjLiteral">0</span><span=
 class=3D"ProfjDefault">;</span><span class=3D"ProfjKeyword">}</span><span =
class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><=
span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></span></td>=
</tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjComment">//=
In ElementNode
</span><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></sp=
an></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjKey=
word">public</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"P=
rofjPrimType">int</span><span class=3D"ProfjWhiteSpace"> </span><span class=
=3D"ProfjIdentifier">count</span><span class=3D"ProfjKeyword">(</span><span=
 class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpace"> </span><sp=
an class=3D"ProfjKeyword">{</span><span class=3D"ProfjWhiteSpace"> </span><=
span class=3D"ProfjKeyword">return</span><span class=3D"ProfjWhiteSpace"> <=
/span><span class=3D"ProfjLiteral">1</span><span class=3D"ProfjKeyword">+</=
span><span class=3D"ProfjKeyword">this</span><span class=3D"ProfjDefault">.=
</span><span class=3D"ProfjIdentifier">rest</span><span class=3D"ProfjDefau=
lt">.</span><span class=3D"ProfjIdentifier">count</span><span class=3D"Prof=
jKeyword">(</span><span class=3D"ProfjKeyword">)</span><span class=3D"Profj=
Default">;</span><span class=3D"ProfjKeyword">}</span><span class=3D"RktMet=
a"></span></td></tr></tbody></table></blockquote></div><p>How do we know th=
e recursive method will work? <span class=3D"RktBlk"><span class=3D"JavaHig=
hlight"><span class=3D"RktMeta"></span><span class=3D"ProfjKeyword">this</s=
pan><span class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">re=
st</span><span class=3D"RktMeta"></span></span></span> is an <span class=3D=
"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span=
 class=3D"ProfjType">IListOfBooks</span><span class=3D"RktMeta"></span></sp=
an></span> and is guaranteed to have a <span class=3D"RktBlk"><span class=
=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D"ProfjIdent=
ifier">count</span><span class=3D"ProfjKeyword">(</span><span class=3D"Prof=
jKeyword">)</span><span class=3D"RktMeta"></span></span></span> method.</p>=
<p>Here are the JUnit tests for this method:</p><div class=3D"JavaHighlight=
Block"><blockquote class=3D"SCodeFlow"><table cellspacing=3D"0" cellpadding=
=3D"0" class=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta"></span><span=
 class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteSpace"> </spa=
n><span class=3D"ProfjKeyword">class</span><span class=3D"ProfjWhiteSpace">=
 </span><span class=3D"ProfjType">IListOfBooksTest</span><span class=3D"Pro=
fjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"R=
ktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=
=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></span></td></tr><tr><=
td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span>=
<span class=3D"ProfjType">IListOfBooks</span><span class=3D"ProfjWhiteSpace=
"> </span><span class=3D"ProfjIdentifier">listOfBooks</span><span class=3D"=
ProfjDefault">,</span><span class=3D"ProfjIdentifier">partialListOfBooks</s=
pan><span class=3D"ProfjDefault">,</span><span class=3D"ProfjIdentifier">em=
ptyListOfBooks</span><span class=3D"ProfjDefault">;</span><span class=3D"Rk=
tMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=
=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></span></td></tr><tr><=
td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span>=
<span class=3D"ProfjError">@</span><span class=3D"ProfjType">Before</span><=
span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></s=
pan><span class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">p=
ublic</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKey=
word">void</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Pro=
fjIdentifier">setup</span><span class=3D"ProfjKeyword">(</span><span class=
=3D"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpace"> </span><span cla=
ss=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></span></td></tr><tr><t=
d><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">    </span=
><span class=3D"ProfjIdentifier">emptyListOfBooks</span><span class=3D"Prof=
jWhiteSpace"> </span><span class=3D"ProfjKeyword">=3D</span><span class=3D"=
ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">new</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">EmptyNode</span><spa=
n class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">)</span><span=
 class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span></td></tr><t=
r><td><span class=3D"RktMeta"></span><span class=3D"ProfjError">&nbsp;</spa=
n><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta">=
</span><span class=3D"ProfjWhiteSpace">    </span><span class=3D"ProfjIdent=
ifier">partialListOfBooks</span><span class=3D"ProfjWhiteSpace"> </span><sp=
an class=3D"ProfjKeyword">=3D</span><span class=3D"RktMeta"></span></td></t=
r><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  =
  </span><span class=3D"ProfjKeyword">new</span><span class=3D"ProfjWhiteSp=
ace"> </span><span class=3D"ProfjType">ElementNode</span><span class=3D"Pro=
fjKeyword">(</span><span class=3D"ProfjKeyword">new</span><span class=3D"Pr=
ofjWhiteSpace"> </span><span class=3D"ProfjType">Book</span><span class=3D"=
ProfjKeyword">(</span><span class=3D"ProfjString">"HP 1"</span><span class=
=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"> </span><span cla=
ss=3D"ProfjString">"J.K. Rowling"</span><span class=3D"ProfjDefault">,</spa=
n><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjLiteral">1997=
</span><span class=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"=
> </span><span class=3D"ProfjLiteral">19.99f</span><span class=3D"ProfjKeyw=
ord">)</span><span class=3D"ProfjDefault">,</span><span class=3D"RktMeta"><=
/span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"Profj=
WhiteSpace">    </span><span class=3D"ProfjKeyword">new</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">ElementNode</span><s=
pan class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">new</span><=
span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">Book</span=
><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjString">"HP 2"</s=
pan><span class=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"> <=
/span><span class=3D"ProfjString">"J.K. Rowling"</span><span class=3D"Profj=
Default">,</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Pro=
fjLiteral">1999</span><span class=3D"ProfjDefault">,</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjLiteral">29.99f</span><span cla=
ss=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">,</span><span clas=
s=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span=
 class=3D"ProfjWhiteSpace">    </span><span class=3D"ProfjKeyword">new</spa=
n><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">Element=
Node</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword=
">new</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjTyp=
e">Book</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjStri=
ng">"HP 3"</span><span class=3D"ProfjDefault">,</span><span class=3D"ProfjW=
hiteSpace"> </span><span class=3D"ProfjString">"J.K. Rowling"</span><span c=
lass=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"> </span><span=
 class=3D"ProfjLiteral">2001</span><span class=3D"ProfjDefault">,</span><sp=
an class=3D"ProfjLiteral">10.99f</span><span class=3D"ProfjKeyword">)</span=
><span class=3D"ProfjDefault">,</span><span class=3D"RktMeta"></span></td><=
/tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">=
    </span><span class=3D"ProfjKeyword">new</span><span class=3D"ProfjWhite=
Space"> </span><span class=3D"ProfjType">EmptyNode</span><span class=3D"Pro=
fjKeyword">(</span><span class=3D"ProfjKeyword">)</span><span class=3D"Prof=
jKeyword">)</span><span class=3D"ProfjKeyword">)</span><span class=3D"Profj=
Keyword">)</span><span class=3D"ProfjDefault">;</span><span class=3D"RktMet=
a"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"P=
rofjError">&nbsp;</span><span class=3D"RktMeta"></span></td></tr><tr><td><s=
pan class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">    </span><sp=
an class=3D"ProfjIdentifier">listOfBooks</span><span class=3D"ProfjWhiteSpa=
ce"> </span><span class=3D"ProfjKeyword">=3D</span><span class=3D"RktMeta">=
</span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"Prof=
jWhiteSpace">    </span><span class=3D"ProfjKeyword">new</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">ElementNode</span><s=
pan class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">new</span><=
span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">Book</span=
><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjString">"HP 4"</s=
pan><span class=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"> <=
/span><span class=3D"ProfjString">"J.K. Rowling"</span><span class=3D"Profj=
Default">,</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Pro=
fjLiteral">2004</span><span class=3D"ProfjDefault">,</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjLiteral">15.49f</span><span cla=
ss=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">,</span><span clas=
s=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span=
 class=3D"ProfjWhiteSpace">    </span><span class=3D"ProfjKeyword">new</spa=
n><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">Element=
Node</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword=
">new</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjTyp=
e">Book</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjStri=
ng">"HP 5"</span><span class=3D"ProfjDefault">,</span><span class=3D"ProfjW=
hiteSpace"> </span><span class=3D"ProfjString">"J.K. Rowling"</span><span c=
lass=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"> </span><span=
 class=3D"ProfjLiteral">2006</span><span class=3D"ProfjDefault">,</span><sp=
an class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjLiteral">12.99f</s=
pan><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">,</sp=
an><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"=
></span><span class=3D"ProfjWhiteSpace">    </span><span class=3D"ProfjKeyw=
ord">new</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Profj=
Type">ElementNode</span><span class=3D"ProfjKeyword">(</span><span class=3D=
"ProfjKeyword">new</span><span class=3D"ProfjWhiteSpace"> </span><span clas=
s=3D"ProfjType">Book</span><span class=3D"ProfjKeyword">(</span><span class=
=3D"ProfjString">"HP 6"</span><span class=3D"ProfjDefault">,</span><span cl=
ass=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjString">"J.K. Rowling"<=
/span><span class=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace">=
 </span><span class=3D"ProfjLiteral">2007</span><span class=3D"ProfjDefault=
">,</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjLiter=
al">7.99f</span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjDe=
fault">,</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=
=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">    </span><span class=
=3D"ProfjIdentifier">partialListOfBooks</span><span class=3D"ProfjKeyword">=
)</span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjKeyword">)=
</span><span class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span>=
</td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjError"=
>&nbsp;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=
=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=3D=
"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td></tr><tr><td><sp=
an class=3D"RktMeta"></span><span class=3D"ProfjError">&nbsp;</span><span c=
lass=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><s=
pan class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjError">@</span><=
span class=3D"ProfjType">Test</span><span class=3D"RktMeta"></span></td></t=
r><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  =
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjKeyword">void</span><span class=3D"ProfjW=
hiteSpace"> </span><span class=3D"ProfjIdentifier">testCounts</span><span c=
lass=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">)</span><span cl=
ass=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span =
class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><=
span class=3D"ProfjWhiteSpace">    </span><span class=3D"ProfjIdentifier">a=
ssertEquals</span><span class=3D"ProfjKeyword">(</span><span class=3D"Profj=
Literal">0</span><span class=3D"ProfjDefault">,</span><span class=3D"ProfjW=
hiteSpace"> </span><span class=3D"ProfjIdentifier">emptyListOfBooks</span><=
span class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">count</=
span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">)</s=
pan><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">;</sp=
an><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"=
></span><span class=3D"ProfjWhiteSpace">    </span><span class=3D"ProfjIden=
tifier">assertEquals</span><span class=3D"ProfjKeyword">(</span><span class=
=3D"ProfjLiteral">3</span><span class=3D"ProfjDefault">,</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">partialListOfB=
ooks</span><span class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentif=
ier">count</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjK=
eyword">)</span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjDe=
fault">;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=
=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">    </span><span class=
=3D"ProfjIdentifier">assertEquals</span><span class=3D"ProfjKeyword">(</spa=
n><span class=3D"ProfjLiteral">6</span><span class=3D"ProfjDefault">,</span=
><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">li=
stOfBooks</span><span class=3D"ProfjDefault">.</span><span class=3D"ProfjId=
entifier">count</span><span class=3D"ProfjKeyword">(</span><span class=3D"P=
rofjKeyword">)</span><span class=3D"ProfjKeyword">)</span><span class=3D"Pr=
ofjDefault">;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span =
class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span cla=
ss=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td></tr><tr><t=
d><span class=3D"RktMeta"></span><span class=3D"ProfjKeyword">}</span><span=
 class=3D"RktMeta"></span></td></tr></tbody></table></blockquote></div><h5>=
4.4.4<tt>&nbsp;</tt><a name=3D"(part._.Counting__.Take_2)"></a>Counting: Ta=
ke 2</h5><p>Look at the implementation of the <span class=3D"RktBlk"><span =
class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D"Profj=
Identifier">count</span><span class=3D"RktMeta"></span></span></span> metho=
d in the <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=
=3D"RktMeta"></span><span class=3D"ProfjType">ElementNode</span><span class=
=3D"RktMeta"></span></span></span> class.</p><div class=3D"JavaHighlightBlo=
ck"><blockquote class=3D"SCodeFlow"><table cellspacing=3D"0" cellpadding=3D=
"0" class=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta"></span><span cl=
ass=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteSpace"> </span><=
span class=3D"ProfjPrimType">int</span><span class=3D"ProfjWhiteSpace"> </s=
pan><span class=3D"ProfjIdentifier">count</span><span class=3D"ProfjKeyword=
">(</span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpa=
ce"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjKeyword">return</span><span class=3D"Prof=
jWhiteSpace"> </span><span class=3D"ProfjLiteral">1</span><span class=3D"Pr=
ofjKeyword">+</span><span class=3D"ProfjKeyword">this</span><span class=3D"=
ProfjDefault">.</span><span class=3D"ProfjIdentifier">rest</span><span clas=
s=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">count</span><spa=
n class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">)</span><span=
 class=3D"ProfjDefault">;</span><span class=3D"ProfjKeyword">}</span><span =
class=3D"RktMeta"></span></td></tr></tbody></table></blockquote></div><p>Th=
is method recursively calls itself (for the next node) and then adds <span =
class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></sp=
an><span class=3D"ProfjLiteral">1</span><span class=3D"RktMeta"></span></sp=
an></span> to the result. In other words it =E2=80=9Cbuilds=E2=80=9D the co=
unt as the recursion unravels (from back to front in the list). Another way=
 to think about this operation is to build the count as one proceeds from t=
he beginning to the end of the list.</p><p>We can do this by keeping track =
of the =E2=80=9Ccurrent=E2=80=9D count of books from the beginning of the l=
ist to the node where we currently are. Before proceeding to the rest of th=
e list, we add 1 to this count. Thus when we reach the end of the list, the=
 value of this count is equal to the number of books in the list. In other =
words, we <span class=3D"emph">accumulate</span> the count as we traverse t=
he list from front to back.</p><p>Where do we store this =E2=80=9Caccumulat=
or=E2=80=9D so that we can access it from the counting method? A common app=
roach is to store this accumulator as a =E2=80=9Cglobal=E2=80=9D variable. =
Besides the fact that Java does not support global variables, using global =
variables is usually bad design (its use is justified only when a value nee=
ds to be accessed from several places, and in that case the design is likel=
y flawed). Instead, we can pass this accumulator as an argument to our meth=
od.</p><p>We begin by declaring a helper method for our nodes.</p><div clas=
s=3D"JavaHighlightBlock"><blockquote class=3D"SCodeFlow"><table cellspacing=
=3D"0" cellpadding=3D"0" class=3D"RktBlk"><tbody><tr><td><span class=3D"Rkt=
Meta"></span><span class=3D"ProfjComment">//In IListOfBooks
</span><span class=3D"ProfjPrimType">int</span><span class=3D"ProfjWhiteSpa=
ce"> </span><span class=3D"ProfjIdentifier">countHelp</span><span class=3D"=
ProfjKeyword">(</span><span class=3D"ProfjPrimType">int</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">acc</span><spa=
n class=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">;</span><span=
 class=3D"RktMeta"></span></td></tr></tbody></table></blockquote></div><p>D=
eclaring a helper method in the interface makes it <span class=3D"RktBlk"><=
span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D"=
ProfjKeyword">public</span><span class=3D"RktMeta"></span></span></span>, w=
hich is bad design. A better design would be to use an abstract class and p=
ut this method there as <span class=3D"RktBlk"><span class=3D"JavaHighlight=
"><span class=3D"RktMeta"></span><span class=3D"ProfjKeyword">protected</sp=
an><span class=3D"RktMeta"></span></span></span>.</p><p>How do we implement=
 this method in the <span class=3D"RktBlk"><span class=3D"JavaHighlight"><s=
pan class=3D"RktMeta"></span><span class=3D"ProfjType">EmptyNode</span><spa=
n class=3D"RktMeta"></span></span></span> class? Our above logic says that =
when we reach the end of the list (i.e. the <span class=3D"RktBlk"><span cl=
ass=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D"ProfjTy=
pe">EmptyNode</span><span class=3D"RktMeta"></span></span></span> object) t=
he value of the accumulator is equal to the number of books. Therefore this=
 implementation simply returns the accumulator.</p><div class=3D"JavaHighli=
ghtBlock"><blockquote class=3D"SCodeFlow"><table cellspacing=3D"0" cellpadd=
ing=3D"0" class=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta"></span><s=
pan class=3D"ProfjComment">//In EmptyNode
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjPrimType">int</span><span class=3D"ProfjW=
hiteSpace"> </span><span class=3D"ProfjIdentifier">countHelp</span><span cl=
ass=3D"ProfjKeyword">(</span><span class=3D"ProfjPrimType">int</span><span =
class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">acc</span=
><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpace"> </sp=
an><span class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></span></td=
></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace=
">  </span><span class=3D"ProfjKeyword">return</span><span class=3D"ProfjWh=
iteSpace"> </span><span class=3D"ProfjIdentifier">acc</span><span class=3D"=
ProfjDefault">;</span><span class=3D"RktMeta"></span></td></tr><tr><td><spa=
n class=3D"RktMeta"></span><span class=3D"ProfjKeyword">}</span><span class=
=3D"RktMeta"></span></td></tr></tbody></table></blockquote></div><p>How do =
we implement this method in the <span class=3D"RktBlk"><span class=3D"JavaH=
ighlight"><span class=3D"RktMeta"></span><span class=3D"ProfjType">ElementN=
ode</span><span class=3D"RktMeta"></span></span></span> class? We add 1 to =
the accumulator and pass it along.</p><div class=3D"JavaHighlightBlock"><bl=
ockquote class=3D"SCodeFlow"><table cellspacing=3D"0" cellpadding=3D"0" cla=
ss=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta"></span><span class=3D"=
ProfjComment">//In ElementNode
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjPrimType">int</span><span class=3D"ProfjW=
hiteSpace"> </span><span class=3D"ProfjIdentifier">countHelp</span><span cl=
ass=3D"ProfjKeyword">(</span><span class=3D"ProfjPrimType">int</span><span =
class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">acc</span=
><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpace"> </sp=
an><span class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></span></td=
></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace=
">  </span><span class=3D"ProfjKeyword">return</span><span class=3D"ProfjWh=
iteSpace"> </span><span class=3D"ProfjKeyword">this</span><span class=3D"Pr=
ofjDefault">.</span><span class=3D"ProfjIdentifier">rest</span><span class=
=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">countHelp</span><=
span class=3D"ProfjKeyword">(</span><span class=3D"ProfjLiteral">1</span><s=
pan class=3D"ProfjKeyword">+</span><span class=3D"ProfjIdentifier">acc</spa=
n><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">;</span=
><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"><=
/span><span class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span><=
/td></tr></tbody></table></blockquote></div><p>Finally, we make the <span c=
lass=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></spa=
n><span class=3D"ProfjIdentifier">count</span><span class=3D"RktMeta"></spa=
n></span></span> method use this helper method.</p><div class=3D"JavaHighli=
ghtBlock"><blockquote class=3D"SCodeFlow"><table cellspacing=3D"0" cellpadd=
ing=3D"0" class=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta"></span><s=
pan class=3D"ProfjComment">//In ElementNode
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjPrimType">int</span><span class=3D"ProfjW=
hiteSpace"> </span><span class=3D"ProfjIdentifier">count</span><span class=
=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">)</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span cla=
ss=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><spa=
n class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">return</s=
pan><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">th=
is</span><span class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifie=
r">countHelp</span><span class=3D"ProfjKeyword">(</span><span class=3D"Prof=
jLiteral">0</span><span class=3D"ProfjKeyword">)</span><span class=3D"Profj=
Default">;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span cla=
ss=3D"RktMeta"></span><span class=3D"ProfjKeyword">}</span><span class=3D"R=
ktMeta"></span></td></tr></tbody></table></blockquote></div><h5>4.4.5<tt>&n=
bsp;</tt><a name=3D"(part._.Unravel_or_accumulate_)"></a>Unravel or accumul=
ate?</h5><p>Both approaches result in the correct answer, so which one is =
=E2=80=9Cbetter=E2=80=9D?</p><p>We observe that the first implementation bu=
ilds the count as the recursion unravels (back to front). No work is done b=
efore the recursive call is made and all the work is done <span class=3D"em=
ph">after</span> the recursive call returns. The accumulator implementation=
 builds the count as the recursion proceeds (front to back). All the work i=
s done <span class=3D"emph">before</span> the recursive call is made, and n=
othing after it returns. This last observation implies that the last operat=
ion that <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=
=3D"RktMeta"></span><span class=3D"ProfjIdentifier">countHelp</span><span c=
lass=3D"RktMeta"></span></span></span> does is to call itself recursively. =
This is referred to as =E2=80=9Ctail-recursive.=E2=80=9D</p><p>There is one=
 programming benefit to tail-recursive operations: they can be replaced wit=
h a non-recursive construct (usually loops). Recursive implementations, whe=
n done correctly, are elegant but suffer from one possible problem: stack o=
verflow. This occurs where there are too many recursive calls resulting in =
filling up of the program stack. In this particular method, the number of r=
ecursive calls is equal to the size of the list, so we may encounter this p=
roblem for large lists.</p><p>How can tail recursion be replaced? This tail=
 recursive implementation can be described as =E2=80=9Cstart with 0, increm=
ent the accumulator by 1 for every non-empty node in the list=E2=80=9D This=
 description readily reveals that a loop can be used for this purpose. In f=
act most modern compilers automatically recognize tail recursion and optimi=
ze the generated code. It is also possible to automatically transform code =
into tail recursion and then optimize it. Some aggressive compilers, especi=
ally in functional programming languages where recursion is ubiquitous, inc=
lude such features.</p><blockquote class=3D"IncerciseBody"><p></p><div clas=
s=3D"SIntrapara"><p class=3D"Incercise">Do Now!</p></div><div class=3D"SInt=
rapara">Try to make the <span class=3D"RktBlk"><span class=3D"JavaHighlight=
"><span class=3D"RktMeta"></span><span class=3D"ProfjIdentifier">countHelp<=
/span><span class=3D"RktMeta"></span></span></span> method non-recursive.</=
div><p></p></blockquote><p>Beyond the programming and efficiency benefits, =
the accumulator method is an important design technique by itself. Dependin=
g on the actual operation, it may be easier to think of accumulator-type de=
sign.</p><h5>4.5<tt>&nbsp;</tt><a name=3D"(part._.Printing_the_list_of_book=
s)"></a>Printing the list of books</h5><p>We can =E2=80=9Cprint=E2=80=9D th=
e list of books by simply writing a <span class=3D"RktBlk"><span class=3D"J=
avaHighlight"><span class=3D"RktMeta"></span><span class=3D"ProfjIdentifier=
">toString</span><span class=3D"RktMeta"></span></span></span> method for i=
ts nodes that creates and returns a string of a specific format.</p><p>Befo=
re we write the <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span =
class=3D"RktMeta"></span><span class=3D"ProfjIdentifier">toString</span><sp=
an class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">)</span><spa=
n class=3D"RktMeta"></span></span></span> method we need to illustrate how =
we=E2=80=99d like the output to look. We would like each book to appear wit=
hin a set of parentheses,
with all books in a single line. Here is an example:</p><div class=3D"JavaH=
ighlightBlock"><blockquote class=3D"SCodeFlow"><table cellspacing=3D"0" cel=
lpadding=3D"0" class=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta"></sp=
an><span class=3D"ProfjIdentifier">partialListOfBooks</span><span class=3D"=
ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">=3D</span><span class=
=3D"ProfjKeyword">&gt;</span><span class=3D"ProfjWhiteSpace"> </span><span =
class=3D"ProfjKeyword">(</span><span class=3D"ProfjType">Title</span><span =
class=3D"ProfjKeyword">:</span><span class=3D"ProfjWhiteSpace"> </span><spa=
n class=3D"ProfjConstant">HP</span><span class=3D"ProfjWhiteSpace"> </span>=
<span class=3D"ProfjLiteral">1</span><span class=3D"ProfjWhiteSpace"> </spa=
n><span class=3D"ProfjType">Year</span><span class=3D"ProfjKeyword">:</span=
><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjLiteral">1997<=
/span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">Pri=
ce</span><span class=3D"ProfjKeyword">:</span><span class=3D"ProfjWhiteSpac=
e"> </span><span class=3D"ProfjLiteral">19.99</span><span class=3D"ProfjKey=
word">)</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjType=
">Title</span><span class=3D"ProfjKeyword">:</span><span class=3D"ProfjWhit=
eSpace"> </span><span class=3D"ProfjConstant">HP</span><span class=3D"Profj=
WhiteSpace"> </span><span class=3D"ProfjLiteral">2</span><span class=3D"Pro=
fjWhiteSpace"> </span><span class=3D"ProfjType">Year</span><span class=3D"P=
rofjKeyword">:</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D=
"ProfjLiteral">1999</span><span class=3D"ProfjWhiteSpace"> </span><span cla=
ss=3D"ProfjType">Price</span><span class=3D"ProfjKeyword">:</span><span cla=
ss=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjLiteral">29.99</span><sp=
an class=3D"ProfjKeyword">)</span><span class=3D"ProfjKeyword">(</span><spa=
n class=3D"ProfjType">Title</span><span class=3D"ProfjKeyword">:</span><spa=
n class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjConstant">HP</span>=
<span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjLiteral">3</spa=
n><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">Year</s=
pan><span class=3D"ProfjKeyword">:</span><span class=3D"ProfjWhiteSpace"> <=
/span><span class=3D"ProfjLiteral">2001</span><span class=3D"ProfjWhiteSpac=
e"> </span><span class=3D"ProfjType">Price</span><span class=3D"ProfjKeywor=
d">:</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjLite=
ral">10.99</span><span class=3D"ProfjKeyword">)</span><span class=3D"RktMet=
a"></span></td></tr></tbody></table></blockquote></div><p>Let us try expres=
sing this operation recursively as well. Its objective is to generate and r=
eturn a string. One way to express it would be =E2=80=9CThe string represen=
ting the contents of a list can be constructed by creating a string represe=
ntation of the first book, and appending to it the string that represents t=
he rest of the list.=E2=80=9D. If the list is empty (base case) then an emp=
ty string is returned.</p><p>This expression is very similar to that of the=
 <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMet=
a"></span><span class=3D"ProfjIdentifier">count</span><span class=3D"ProfjK=
eyword">(</span><span class=3D"ProfjKeyword">)</span><span class=3D"RktMeta=
"></span></span></span>, and we expect its implementation to be similar as =
well. How do we create a string representation of a book? We could get all =
the data from the <span class=3D"RktBlk"><span class=3D"JavaHighlight"><spa=
n class=3D"RktMeta"></span><span class=3D"ProfjType">Book</span><span class=
=3D"RktMeta"></span></span></span> object and create the string ourselves, =
or we can delegate to ...the <span class=3D"RktBlk"><span class=3D"JavaHigh=
light"><span class=3D"RktMeta"></span><span class=3D"ProfjIdentifier">toStr=
ing</span><span class=3D"RktMeta"></span></span></span> of the <span class=
=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><s=
pan class=3D"ProfjType">Book</span><span class=3D"RktMeta"></span></span></=
span> class!</p><div class=3D"JavaHighlightBlock"><blockquote class=3D"SCod=
eFlow"><table cellspacing=3D"0" cellpadding=3D"0" class=3D"RktBlk"><tbody><=
tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjComment">//In Emp=
tyNode
</span><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></sp=
an></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjCom=
ment">//the base case
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjPrimType">String</span><span class=3D"Pro=
fjWhiteSpace"> </span><span class=3D"ProfjIdentifier">toString</span><span =
class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">)</span><span c=
lass=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span=
 class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">return</spa=
n><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjString">""</s=
pan><span class=3D"ProfjDefault">;</span><span class=3D"ProfjKeyword">}</sp=
an><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"=
></span><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></s=
pan></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjCo=
mment">//In ElementNode
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjPrimType">String</span><span class=3D"Pro=
fjWhiteSpace"> </span><span class=3D"ProfjIdentifier">toString</span><span =
class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">)</span><span c=
lass=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span=
 class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span>=
<span class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">retur=
n</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjString"=
>"("</span><span class=3D"ProfjKeyword">+</span><span class=3D"ProfjKeyword=
">this</span><span class=3D"ProfjDefault">.</span><span class=3D"ProfjIdent=
ifier">book</span><span class=3D"ProfjDefault">.</span><span class=3D"Profj=
Identifier">toString</span><span class=3D"ProfjKeyword">(</span><span class=
=3D"ProfjKeyword">)</span><span class=3D"ProfjKeyword">+</span><span class=
=3D"ProfjString">")"</span><span class=3D"ProfjKeyword">+</span><span class=
=3D"ProfjKeyword">this</span><span class=3D"ProfjDefault">.</span><span cla=
ss=3D"ProfjIdentifier">rest</span><span class=3D"ProfjDefault">.</span><spa=
n class=3D"ProfjIdentifier">toString</span><span class=3D"ProfjKeyword">(</=
span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">;</s=
pan><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta=
"></span><span class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></spa=
n></td></tr></tbody></table></blockquote></div><blockquote class=3D"Incerci=
seBody"><p></p><div class=3D"SIntrapara"><p class=3D"Incercise">Do Now!</p>=
</div><div class=3D"SIntrapara">Try to rewrite <span class=3D"RktBlk"><span=
 class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D"Prof=
jIdentifier">toString</span><span class=3D"RktMeta"></span></span></span> u=
sing an accumulator design.</div><p></p></blockquote><p>Here is the test fo=
r this method:</p><div class=3D"JavaHighlightBlock"><blockquote class=3D"SC=
odeFlow"><table cellspacing=3D"0" cellpadding=3D"0" class=3D"RktBlk"><tbody=
><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjError">@</span>=
<span class=3D"ProfjType">Test</span><span class=3D"RktMeta"></span></td></=
tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace"> =
 </span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhite=
Space"> </span><span class=3D"ProfjKeyword">void</span><span class=3D"Profj=
WhiteSpace"> </span><span class=3D"ProfjIdentifier">testToString</span><spa=
n class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">)</span><span=
 class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><sp=
an class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></spa=
n><span class=3D"ProfjWhiteSpace">    </span><span class=3D"ProfjPrimType">=
String</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjId=
entifier">expected</span><span class=3D"ProfjWhiteSpace"> </span><span clas=
s=3D"ProfjKeyword">=3D</span><span class=3D"ProfjWhiteSpace"> </span><span =
class=3D"ProfjString">"(Title: HP 4 Year: 2004 Price: 15.49)"</span><span c=
lass=3D"ProfjKeyword">+</span><span class=3D"RktMeta"></span></td></tr><tr>=
<td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">        =
    </span><span class=3D"ProfjString">"(Title: HP 5 Year: 2006 "</span><sp=
an class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">+</span><=
span class=3D"ProfjString">"Price: 12.99)"</span><span class=3D"ProfjKeywor=
d">+</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"=
RktMeta"></span><span class=3D"ProfjWhiteSpace">            </span><span cl=
ass=3D"ProfjString">"(Title: HP 6 Year: 2007 Price: 7.99)"</span><span clas=
s=3D"ProfjKeyword">+</span><span class=3D"RktMeta"></span></td></tr><tr><td=
><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">           =
 </span><span class=3D"ProfjString">"(Title: HP 1 Year: 1997 Price: 19.99)"=
</span><span class=3D"ProfjKeyword">+</span><span class=3D"RktMeta"></span>=
</td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteS=
pace">            </span><span class=3D"ProfjString">"(Title: HP 2 Year: 19=
99 Price: 29.99)"</span><span class=3D"ProfjKeyword">+</span><span class=3D=
"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span cla=
ss=3D"ProfjWhiteSpace">            </span><span class=3D"ProfjString">"(Tit=
le: HP 3 Year: 2001 Price: 10.99)"</span><span class=3D"ProfjDefault">;</sp=
an><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"=
></span><span class=3D"ProfjWhiteSpace">    </span><span class=3D"ProfjIden=
tifier">assertEquals</span><span class=3D"ProfjKeyword">(</span><span class=
=3D"ProfjIdentifier">expected</span><span class=3D"ProfjDefault">,</span><s=
pan class=3D"ProfjIdentifier">listOfBooks</span><span class=3D"ProfjDefault=
">.</span><span class=3D"ProfjIdentifier">toString</span><span class=3D"Pro=
fjKeyword">(</span><span class=3D"ProfjKeyword">)</span><span class=3D"Prof=
jKeyword">)</span><span class=3D"ProfjDefault">;</span><span class=3D"RktMe=
ta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"=
ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">}</span><span class=
=3D"RktMeta"></span></td></tr></tbody></table></blockquote></div><h5>4.5.1<=
tt>&nbsp;</tt><a name=3D"(part._.Computing_the_total_price_of_all_books)"><=
/a>Computing the total price of all books</h5><blockquote class=3D"Incercis=
eBody"><p></p><div class=3D"SIntrapara"><p class=3D"Incercise">Do Now!</p><=
/div><div class=3D"SIntrapara">Express this operation in a recursive way, a=
nd design an implementation for it</div><p></p></blockquote><h5>4.5.2<tt>&n=
bsp;</tt><a name=3D"(part._.Getting_a_list_of_all_books_published_before_a_=
given_year)"></a>Getting a list of all books published before a given year<=
/h5><p>This method requires us to assemble a list of only those books in th=
e original list that were published before the given year.
For each node that contains a book, we must decide whether the book in that=
 node should be included in our resulting list or not.
We can compare the year of publication of the book with the given year dire=
ctly, or we can delegate this determination to the <span class=3D"RktBlk"><=
span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D"=
ProfjType">Book</span><span class=3D"RktMeta"></span></span></span> class i=
tself, as a method <span class=3D"RktBlk"><span class=3D"JavaHighlight"><sp=
an class=3D"RktMeta"></span><span class=3D"ProfjPrimType">boolean</span><sp=
an class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">before=
</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjPrimType">i=
nt</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdenti=
fier">year</span><span class=3D"ProfjKeyword">)</span><span class=3D"RktMet=
a"></span></span></span>.</p><p>Can we express this operation recursively a=
s well? Here is one way: =E2=80=9Cthe list of books published before a give=
n year is made of (a) the first book in our list if it was published before=
 the given year, followed by such books in the rest of the list or (b) simp=
ly such books in the rest of the list, if the first book was not published =
before the given year.=E2=80=9D</p><div class=3D"JavaHighlightBlock"><block=
quote class=3D"SCodeFlow"><table cellspacing=3D"0" cellpadding=3D"0" class=
=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta"></span><span class=3D"Pr=
ofjComment">//In EmptyNode
</span><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></sp=
an></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjCom=
ment">//base case
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjType">IListOfBooks</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjIdentifier">allBefore</span><sp=
an class=3D"ProfjKeyword">(</span><span class=3D"ProfjPrimType">int</span><=
span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">year=
</span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpace"=
> </span><span class=3D"ProfjKeyword">{</span><span class=3D"ProfjWhiteSpac=
e"> </span><span class=3D"ProfjKeyword">return</span><span class=3D"ProfjWh=
iteSpace"> </span><span class=3D"ProfjKeyword">new</span><span class=3D"Pro=
fjWhiteSpace"> </span><span class=3D"ProfjType">EmptyNode</span><span class=
=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">)</span><span class=
=3D"ProfjDefault">;</span><span class=3D"ProfjWhiteSpace"> </span><span cla=
ss=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td></tr><tr><t=
d><span class=3D"RktMeta"></span><span class=3D"ProfjError">&nbsp;</span><s=
pan class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></sp=
an><span class=3D"ProfjComment">//In ElementNode
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjType">IListOfBooks</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjIdentifier">allBefore</span><sp=
an class=3D"ProfjKeyword">(</span><span class=3D"ProfjPrimType">int</span><=
span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">year=
</span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpace"=
> </span><span class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></spa=
n></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhit=
eSpace">   </span><span class=3D"ProfjKeyword">if</span><span class=3D"Prof=
jWhiteSpace"> </span><span class=3D"ProfjKeyword">(</span><span class=3D"Pr=
ofjIdentifier">book</span><span class=3D"ProfjDefault">.</span><span class=
=3D"ProfjIdentifier">before</span><span class=3D"ProfjKeyword">(</span><spa=
n class=3D"ProfjIdentifier">year</span><span class=3D"ProfjKeyword">)</span=
><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpace"> </sp=
an><span class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></span></td=
></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace=
">     </span><span class=3D"ProfjKeyword">return</span><span class=3D"Prof=
jWhiteSpace"> </span><span class=3D"ProfjKeyword">new</span><span class=3D"=
ProfjWhiteSpace"> </span><span class=3D"ProfjType">ElementNode</span><span =
class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">this</span><spa=
n class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">book</span=
><span class=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"> </sp=
an><span class=3D"ProfjKeyword">this</span><span class=3D"ProfjDefault">.</=
span><span class=3D"ProfjIdentifier">rest</span><span class=3D"ProfjDefault=
">.</span><span class=3D"ProfjIdentifier">allBefore</span><span class=3D"Pr=
ofjKeyword">(</span><span class=3D"ProfjIdentifier">year</span><span class=
=3D"ProfjKeyword">)</span><span class=3D"ProfjKeyword">)</span><span class=
=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span></td></tr><tr><td>=
<span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">   </span><s=
pan class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td></tr=
><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">   =
</span><span class=3D"ProfjKeyword">else</span><span class=3D"ProfjWhiteSpa=
ce"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></=
span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjW=
hiteSpace">     </span><span class=3D"ProfjKeyword">return</span><span clas=
s=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">this</span><span=
 class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">rest</span>=
<span class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">allBef=
ore</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjIdentifi=
er">year</span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjDef=
ault">;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=
=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">   </span><span class=
=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td></tr><tr><td>=
<span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace"> </span><spa=
n class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td></tr><=
tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjError">&nbsp;</sp=
an><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"=
></span><span class=3D"ProfjComment">//In Book class
</span><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></sp=
an></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjBlo=
ckComment">/**
  * Determine if this book was published before the given year
  * @param year the year to test against
  * @return true if this book was published before the provided year, false
  * otherwise
  */</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"=
RktMeta"></span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Prof=
jKeyword">public</span><span class=3D"ProfjWhiteSpace"> </span><span class=
=3D"ProfjPrimType">boolean</span><span class=3D"ProfjWhiteSpace"> </span><s=
pan class=3D"ProfjIdentifier">before</span><span class=3D"ProfjWhiteSpace">=
 </span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjPrimType">=
int</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdent=
ifier">year</span><span class=3D"ProfjKeyword">)</span><span class=3D"Profj=
WhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"Rkt=
Meta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=
=3D"ProfjWhiteSpace">   </span><span class=3D"ProfjKeyword">return</span><s=
pan class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">this</sp=
an><span class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">yea=
r</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword=
">&lt;</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjId=
entifier">year</span><span class=3D"ProfjDefault">;</span><span class=3D"Rk=
tMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">}</span><span cla=
ss=3D"RktMeta"></span></td></tr></tbody></table></blockquote></div><h5>4.5.=
3<tt>&nbsp;</tt><a name=3D"(part._.Sorting_the_list_by_price)"></a>Sorting =
the list by price</h5><p>Sorting, or arranging in an increasing/decreasing =
order is a very common operation for lists. At the lowest level, it require=
s comparing two things in the list (in our case, comparing books by price) =
so that we know their relative order in the list. There are many different =
ways to sort a list. Here is one: the list is recursively defined as the fi=
rst book, and the rest of the list (the structure of <span class=3D"RktBlk"=
><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=
=3D"ProfjType">ElementNode</span><span class=3D"RktMeta"></span></span></sp=
an>). Imagine if the rest of the list was already sorted as how we want it.=
 How can we use it to obtain the entire sorted list? We must insert the fir=
st book into the sorted list in such a way that the resulting list is sorte=
d. This insight gives us the recursive expression for this operation: inser=
t the first book into the sorted rest of the list. How do we sort the rest =
of the list? We see that <span class=3D"RktBlk"><span class=3D"JavaHighligh=
t"><span class=3D"RktMeta"></span><span class=3D"ProfjIdentifier">sortByPri=
ce</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">=
)</span><span class=3D"RktMeta"></span></span></span> exists for <span clas=
s=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><=
span class=3D"ProfjKeyword">this</span><span class=3D"ProfjDefault">.</span=
><span class=3D"ProfjIdentifier">rest</span><span class=3D"RktMeta"></span>=
</span></span>, so we already have a way to do that!</p><div class=3D"JavaH=
ighlightBlock"><blockquote class=3D"SCodeFlow"><table cellspacing=3D"0" cel=
lpadding=3D"0" class=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta"></sp=
an><span class=3D"ProfjComment">//In EmptyNode
</span><span class=3D"ProfjComment">//the base case: an empty list is alrea=
dy sorted
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjType">IListOfBooks</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjIdentifier">sortByPrice</span><=
span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">)</span><s=
pan class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</span>=
<span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">return=
</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword"=
>new</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType=
">EmptyNode</span><span class=3D"ProfjKeyword">(</span><span class=3D"Profj=
Keyword">)</span><span class=3D"ProfjDefault">;</span><span class=3D"ProfjK=
eyword">}</span><span class=3D"RktMeta"></span></td></tr><tr><td><span clas=
s=3D"RktMeta"></span><span class=3D"ProfjError">&nbsp;</span><span class=3D=
"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span cla=
ss=3D"ProfjComment">//In ElementNode
</span><span class=3D"ProfjComment">//insert the first data into the sortes=
t rest of the list
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjType">IListOfBooks</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjIdentifier">sortByPrice</span><=
span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">)</span><s=
pan class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</span>=
<span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></=
span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">=
return</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKe=
yword">this</span><span class=3D"ProfjDefault">.</span><span class=3D"Profj=
Identifier">rest</span><span class=3D"ProfjDefault">.</span><span class=3D"=
ProfjIdentifier">sortByPrice</span><span class=3D"ProfjKeyword">(</span><sp=
an class=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">.</span><spa=
n class=3D"ProfjIdentifier">insert</span><span class=3D"ProfjKeyword">(</sp=
an><span class=3D"ProfjKeyword">this</span><span class=3D"ProfjDefault">.</=
span><span class=3D"ProfjIdentifier">book</span><span class=3D"ProfjKeyword=
">)</span><span class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></sp=
an></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjKey=
word">}</span><span class=3D"RktMeta"></span></td></tr></tbody></table></bl=
ockquote></div><p>We=E2=80=99re almost done=E2=80=93we need to implement th=
e <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMe=
ta"></span><span class=3D"ProfjIdentifier">insert</span><span class=3D"Prof=
jKeyword">(</span><span class=3D"ProfjIdentifier">book</span><span class=3D=
"RktMeta"></span></span></span>} method in both <span class=3D"RktBlk"><spa=
n class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D"Pro=
fjType">EmptyNode</span><span class=3D"RktMeta"></span></span></span> and <=
span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"=
></span><span class=3D"ProfjType">ElementNode</span><span class=3D"RktMeta"=
></span></span></span>. Notice that the above code suggests that the <span =
class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></sp=
an><span class=3D"ProfjIdentifier">insert</span><span class=3D"RktMeta"></s=
pan></span></span> method must return the resulting list. Thus its signatur=
e will be <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=
=3D"RktMeta"></span><span class=3D"ProfjType">IListOfBooks</span><span clas=
s=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">insert</span>=
<span class=3D"ProfjKeyword">(</span><span class=3D"ProfjType">Book</span><=
span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">book=
</span><span class=3D"ProfjKeyword">)</span><span class=3D"RktMeta"></span>=
</span></span>.</p><p>The result of inserting a book into an empty list is =
a list of one element and an empty node at its end. This leads to the follo=
wing implementation in <span class=3D"RktBlk"><span class=3D"JavaHighlight"=
><span class=3D"RktMeta"></span><span class=3D"ProfjType">EmptyNode</span><=
span class=3D"RktMeta"></span></span></span>.</p><div class=3D"JavaHighligh=
tBlock"><blockquote class=3D"SCodeFlow"><table cellspacing=3D"0" cellpaddin=
g=3D"0" class=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta"></span><spa=
n class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjComment">//In Empty=
Node
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjType">IListOfBooks</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjIdentifier">insert</span><span =
class=3D"ProfjKeyword">(</span><span class=3D"ProfjType">Book</span><span c=
lass=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">book</span=
><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpace"> </sp=
an><span class=3D"ProfjKeyword">{</span><span class=3D"ProfjWhiteSpace"> </=
span><span class=3D"ProfjKeyword">return</span><span class=3D"ProfjWhiteSpa=
ce"> </span><span class=3D"ProfjKeyword">new</span><span class=3D"ProfjWhit=
eSpace"> </span><span class=3D"ProfjType">ElementNode</span><span class=3D"=
ProfjKeyword">(</span><span class=3D"ProfjIdentifier">book</span><span clas=
s=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"> </span><span cl=
ass=3D"ProfjKeyword">this</span><span class=3D"ProfjKeyword">)</span><span =
class=3D"ProfjDefault">;</span><span class=3D"ProfjWhiteSpace"> </span><spa=
n class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td></tr><=
/tbody></table></blockquote></div><p>For the <span class=3D"RktBlk"><span c=
lass=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D"ProfjT=
ype">ElementNode</span><span class=3D"RktMeta"></span></span></span> class =
we must compare the book to be added to the book that is in the node. If th=
e book in the node is cheaper, then the new book should be inserted in the =
=E2=80=9Crest=E2=80=9D of the list. If not, the
resulting list will have this book at the beginning, followed by the existi=
ng list.</p><div class=3D"JavaHighlightBlock"><blockquote class=3D"SCodeFlo=
w"><table cellspacing=3D"0" cellpadding=3D"0" class=3D"RktBlk"><tbody><tr><=
td><span class=3D"RktMeta"></span><span class=3D"ProfjComment">//In Element=
Node
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjType">IListOfBooks</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjIdentifier">insert</span><span =
class=3D"ProfjKeyword">(</span><span class=3D"ProfjType">Book</span><span c=
lass=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">book</span=
><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpace"> </sp=
an><span class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></span></td=
></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace=
">  </span><span class=3D"ProfjKeyword">if</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyw=
ord">this</span><span class=3D"ProfjDefault">.</span><span class=3D"ProfjId=
entifier">book</span><span class=3D"ProfjDefault">.</span><span class=3D"Pr=
ofjIdentifier">cheaperThan</span><span class=3D"ProfjKeyword">(</span><span=
 class=3D"ProfjIdentifier">book</span><span class=3D"ProfjKeyword">)</span>=
<span class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpace"> </spa=
n><span class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></span></td>=
</tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace"=
>    </span><span class=3D"ProfjComment">//insert the book into the rest pa=
rt of the list
</span><span class=3D"ProfjWhiteSpace">    </span><span class=3D"ProfjKeywo=
rd">return</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Pro=
fjKeyword">new</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D=
"ProfjType">ElementNode</span><span class=3D"ProfjKeyword">(</span><span cl=
ass=3D"ProfjKeyword">this</span><span class=3D"ProfjDefault">.</span><span =
class=3D"ProfjIdentifier">book</span><span class=3D"ProfjDefault">,</span><=
span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">this</s=
pan><span class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">re=
st</span><span class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifie=
r">insert</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjId=
entifier">book</span><span class=3D"ProfjKeyword">)</span><span class=3D"Pr=
ofjKeyword">)</span><span class=3D"ProfjDefault">;</span><span class=3D"Rkt=
Meta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=
=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">}</span><span cl=
ass=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><sp=
an class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">else</sp=
an><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</=
span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMet=
a"></span><span class=3D"ProfjWhiteSpace">    </span><span class=3D"ProfjCo=
mment">//prepend this list with this book
</span><span class=3D"ProfjWhiteSpace">    </span><span class=3D"ProfjKeywo=
rd">return</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Pro=
fjKeyword">new</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D=
"ProfjType">ElementNode</span><span class=3D"ProfjKeyword">(</span><span cl=
ass=3D"ProfjIdentifier">book</span><span class=3D"ProfjDefault">,</span><sp=
an class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">this</spa=
n><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">;</span=
><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"><=
/span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword"=
>}</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"Rk=
tMeta"></span><span class=3D"ProfjKeyword">}</span><span class=3D"RktMeta">=
</span></td></tr></tbody></table></blockquote></div><p><span class=3D"RktBl=
k"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=
=3D"ProfjKeyword">this</span><span class=3D"ProfjDefault">.</span><span cla=
ss=3D"ProfjIdentifier">rest</span><span class=3D"ProfjDefault">.</span><spa=
n class=3D"ProfjIdentifier">insert</span><span class=3D"ProfjKeyword">(</sp=
an><span class=3D"ProfjIdentifier">book</span><span class=3D"ProfjKeyword">=
)</span><span class=3D"RktMeta"></span></span></span> will not work, becaus=
e <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMe=
ta"></span><span class=3D"ProfjKeyword">this</span><span class=3D"ProfjDefa=
ult">.</span><span class=3D"ProfjIdentifier">rest</span><span class=3D"RktM=
eta"></span></span></span> is of type <span class=3D"RktBlk"><span class=3D=
"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D"ProfjType">IL=
istOfBooks</span><span class=3D"RktMeta"></span></span></span>! So we must =
add this method to the <span class=3D"RktBlk"><span class=3D"JavaHighlight"=
><span class=3D"RktMeta"></span><span class=3D"ProfjType">ILiIListOfBooks</=
span><span class=3D"RktMeta"></span></span></span> interface as well.</p><p=
>The missing piece is the <span class=3D"RktBlk"><span class=3D"JavaHighlig=
ht"><span class=3D"RktMeta"></span><span class=3D"ProfjIdentifier">cheaperT=
han</span><span class=3D"RktMeta"></span></span></span> in the <span class=
=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><s=
pan class=3D"ProfjType">Book</span><span class=3D"RktMeta"></span></span></=
span> class:</p><div class=3D"JavaHighlightBlock"><blockquote class=3D"SCod=
eFlow"><table cellspacing=3D"0" cellpadding=3D"0" class=3D"RktBlk"><tbody><=
tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjBlockComment">/**
 * Determine if this book is cheaper than the book passed to it
 * @param book the book whose price should be compared to this book
 * @return true if this book is cheaper than the other book, false otherwis=
e
 */</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"R=
ktMeta"></span><span class=3D"ProfjKeyword">public</span><span class=3D"Pro=
fjWhiteSpace"> </span><span class=3D"ProfjPrimType">boolean</span><span cla=
ss=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">cheaperThan<=
/span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjType">Book</=
span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier=
">book</span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhite=
Space"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"=
></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"Pro=
fjWhiteSpace">  </span><span class=3D"ProfjKeyword">return</span><span clas=
s=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">this</span><span=
 class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">price</span=
><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">&lt;<=
/span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifie=
r">book</span><span class=3D"ProfjDefault">.</span><span class=3D"ProfjIden=
tifier">getPrice</span><span class=3D"ProfjKeyword">(</span><span class=3D"=
ProfjKeyword">)</span><span class=3D"ProfjDefault">;</span><span class=3D"R=
ktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=
=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td></tr></tbody>=
</table></blockquote></div><p>This technique of sorting a list is called <s=
pan class=3D"emph">insertion sort</span>. It is relatively straightforward =
to implement recursively, but often not the best way (in terms of efficienc=
y) to sort a list.</p><h5>4.6<tt>&nbsp;</tt><a name=3D"(part._.Abstracting_=
behavior)"></a>Abstracting behavior</h5><h5>4.6.1<tt>&nbsp;</tt><a name=3D"=
(part._.Getting_a__sub__list___)"></a>Getting a (sub) list...</h5><p>Consid=
er a new operation for our list of books: <span class=3D"emph">"Get a list =
of all books that are written by an author with name =E2=80=98Rowling=E2=80=
=99"</span>.</p><p>We add this method to the <span class=3D"RktBlk"><span c=
lass=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D"ProfjT=
ype">IListOfBooks</span><span class=3D"RktMeta"></span></span></span> inter=
face:</p><div class=3D"JavaHighlightBlock"><blockquote class=3D"SCodeFlow">=
<table cellspacing=3D"0" cellpadding=3D"0" class=3D"RktBlk"><tbody><tr><td>=
<span class=3D"RktMeta"></span><span class=3D"ProfjType">IListOfBooks</span=
><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">al=
lWithAuthor</span><span class=3D"ProfjKeyword">(</span><span class=3D"Profj=
PrimType">String</span><span class=3D"ProfjWhiteSpace"> </span><span class=
=3D"ProfjIdentifier">authorName</span><span class=3D"ProfjKeyword">)</span>=
<span class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span></td></=
tr></tbody></table></blockquote></div><p>We can then implement it in the tw=
o implementations as:</p><div class=3D"JavaHighlightBlock"><blockquote clas=
s=3D"SCodeFlow"><table cellspacing=3D"0" cellpadding=3D"0" class=3D"RktBlk"=
><tbody><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjComment"=
>//In EmptyNode
</span><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></sp=
an></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjCom=
ment">//base case
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjType">IListOfBooks</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjIdentifier">allWithAuthor</span=
><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjPrimType">String<=
/span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifie=
r">authorName</span><span class=3D"ProfjKeyword">)</span><span class=3D"Pro=
fjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjKeyword">return</span><span cla=
ss=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">new</span><span=
 class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">EmptyNode</spa=
n><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">)</span=
><span class=3D"ProfjDefault">;</span><span class=3D"ProfjWhiteSpace"> </sp=
an><span class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td=
></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjError">&nb=
sp;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"R=
ktMeta"></span><span class=3D"ProfjComment">//In ElementNode
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjType">IListOfBooks</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjIdentifier">allWithAuthor</span=
><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjPrimType">String<=
/span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifie=
r">authorName</span><span class=3D"ProfjKeyword">)</span><span class=3D"Pro=
fjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"R=
ktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=
=3D"ProfjWhiteSpace">   </span><span class=3D"ProfjKeyword">if</span><span =
class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">(</span><spa=
n class=3D"ProfjIdentifier">book</span><span class=3D"ProfjDefault">.</span=
><span class=3D"ProfjIdentifier">containsAuthor</span><span class=3D"ProfjK=
eyword">(</span><span class=3D"ProfjIdentifier">authorName</span><span clas=
s=3D"ProfjKeyword">)</span><span class=3D"ProfjKeyword">)</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span cla=
ss=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><spa=
n class=3D"ProfjWhiteSpace">     </span><span class=3D"ProfjKeyword">return=
</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword"=
>new</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType=
">ElementNode</span><span class=3D"ProfjKeyword">(</span><span class=3D"Rkt=
Meta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=
=3D"ProfjWhiteSpace">     </span><span class=3D"ProfjKeyword">this</span><s=
pan class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">book</sp=
an><span class=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"> </=
span><span class=3D"ProfjKeyword">this</span><span class=3D"ProfjDefault">.=
</span><span class=3D"ProfjIdentifier">rest</span><span class=3D"ProfjDefau=
lt">.</span><span class=3D"ProfjIdentifier">allWithAuthor</span><span class=
=3D"ProfjKeyword">(</span><span class=3D"ProfjIdentifier">authorName</span>=
<span class=3D"ProfjKeyword">)</span><span class=3D"ProfjKeyword">)</span><=
span class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span></td></t=
r><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  =
 </span><span class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span=
></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhite=
Space">   </span><span class=3D"ProfjKeyword">else</span><span class=3D"Pro=
fjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"R=
ktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=
=3D"ProfjWhiteSpace">     </span><span class=3D"ProfjKeyword">return</span>=
<span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">this</=
span><span class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">r=
est</span><span class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifi=
er">allWithAuthor</span><span class=3D"ProfjKeyword">(</span><span class=3D=
"ProfjIdentifier">authorName</span><span class=3D"ProfjKeyword">)</span><sp=
an class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span></td></tr>=
<tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">   <=
/span><span class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span><=
/td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSp=
ace"> </span><span class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"><=
/span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"Profj=
Error">&nbsp;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span =
class=3D"RktMeta"></span><span class=3D"ProfjComment">//In Book class
</span><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></sp=
an></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjBlo=
ckComment">/**
  * Determine if this book's author contains the provided name
  * @param authorName the name of the author
  * @return true if this book's author contains the provided name,
  *     false otherwise
  */</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"=
RktMeta"></span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Prof=
jKeyword">public</span><span class=3D"ProfjWhiteSpace"> </span><span class=
=3D"ProfjPrimType">boolean</span><span class=3D"ProfjWhiteSpace"> </span><s=
pan class=3D"ProfjIdentifier">containsAuthor</span><span class=3D"ProfjWhit=
eSpace"> </span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjPr=
imType">String</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D=
"ProfjIdentifier">authorName</span><span class=3D"ProfjKeyword">)</span><sp=
an class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><=
span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></s=
pan><span class=3D"ProfjWhiteSpace">   </span><span class=3D"ProfjKeyword">=
return</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKe=
yword">this</span><span class=3D"ProfjDefault">.</span><span class=3D"Profj=
Identifier">author</span><span class=3D"ProfjDefault">.</span><span class=
=3D"ProfjIdentifier">contains</span><span class=3D"ProfjKeyword">(</span><s=
pan class=3D"ProfjIdentifier">authorName</span><span class=3D"ProfjKeyword"=
>)</span><span class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></spa=
n></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhit=
eSpace"> </span><span class=3D"ProfjKeyword">}</span><span class=3D"RktMeta=
"></span></td></tr></tbody></table></blockquote></div><p>When we compare th=
is method with the <span class=3D"RktBlk"><span class=3D"JavaHighlight"><sp=
an class=3D"RktMeta"></span><span class=3D"ProfjIdentifier">allBefore</span=
><span class=3D"RktMeta"></span></span></span> method before, we see severa=
l similarities in code. First, the signatures are similar. Secondly their i=
mplementations in <span class=3D"RktBlk"><span class=3D"JavaHighlight"><spa=
n class=3D"RktMeta"></span><span class=3D"ProfjType">EmptyNode</span><span =
class=3D"RktMeta"></span></span></span> are identical. Most importantly, th=
eir (non-trivial) implementation in the <span class=3D"RktBlk"><span class=
=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D"ProfjType"=
>ElementNode</span><span class=3D"RktMeta"></span></span></span> class is s=
imilar as well. The only difference is the use of the <span class=3D"RktBlk=
"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=
=3D"ProfjIdentifier">containsAuthor</span><span class=3D"RktMeta"></span></=
span></span> method instead of the <span class=3D"RktBlk"><span class=3D"Ja=
vaHighlight"><span class=3D"RktMeta"></span><span class=3D"ProfjIdentifier"=
>before</span><span class=3D"RktMeta"></span></span></span> method. In turn=
, both these methods have something in common: they operate upon a <span cl=
ass=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span=
><span class=3D"ProfjType">Book</span><span class=3D"RktMeta"></span></span=
></span> object. This repetition will proliferate if we design similar oper=
ations: <span class=3D"emph">"Get a list of all books that cost less than $=
10", "Get a list of all books that are published after 1980"</span>, etc. T=
his hints that we can abstract such operations so that we do not have to re=
peat their common parts.</p><p>At a higher level, the common aspects of all=
 these methods are: <span class=3D"emph">Apply a test to the book at the cu=
rrent node, and do one of two things depending on the result of that test</=
span>. We can abstract this into one method, if we have a way of "providing=
 the test" to this method. The test is a method of the form:</p><div class=
=3D"JavaHighlightBlock"><blockquote class=3D"SCodeFlow"><table cellspacing=
=3D"0" cellpadding=3D"0" class=3D"RktBlk"><tbody><tr><td><span class=3D"Rkt=
Meta"></span><span class=3D"ProfjPrimType">boolean</span><span class=3D"Pro=
fjWhiteSpace"> </span><span class=3D"ProfjIdentifier">test</span><span clas=
s=3D"ProfjKeyword">(</span><span class=3D"ProfjType">Book</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">b</span><span =
class=3D"ProfjKeyword">)</span><span class=3D"RktMeta"></span></td></tr></t=
body></table></blockquote></div><p>We can "provide" a "test" to this method=
 as any object that contains the above method within it. We formalize this =
in an interface.</p><div class=3D"JavaHighlightBlock"><blockquote class=3D"=
SCodeFlow"><table cellspacing=3D"0" cellpadding=3D"0" class=3D"RktBlk"><tbo=
dy><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjKeyword">publ=
ic</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeywor=
d">interface</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"P=
rofjType">IBookPredicate</span><span class=3D"ProfjWhiteSpace"> </span><spa=
n class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></span></td></tr><=
tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </s=
pan><span class=3D"ProfjPrimType">boolean</span><span class=3D"ProfjWhiteSp=
ace"> </span><span class=3D"ProfjIdentifier">test</span><span class=3D"Prof=
jKeyword">(</span><span class=3D"ProfjType">Book</span><span class=3D"Profj=
WhiteSpace"> </span><span class=3D"ProfjIdentifier">b</span><span class=3D"=
ProfjKeyword">)</span><span class=3D"ProfjDefault">;</span><span class=3D"R=
ktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=
=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td></tr></tbody>=
</table></blockquote></div><p>A function that takes in some data and return=
s a <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"Rkt=
Meta"></span><span class=3D"ProfjLiteral">true</span><span class=3D"ProfjKe=
yword">/</span><span class=3D"ProfjLiteral">false</span><span class=3D"RktM=
eta"></span></span></span> answer is called a <span class=3D"emph">predicat=
e</span>. The <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span cl=
ass=3D"RktMeta"></span><span class=3D"ProfjType">IBookPredicate</span><span=
 class=3D"RktMeta"></span></span></span> interface defines a "function obje=
ct," an object that serves as a "wrapper" for a predicate function.</p><p>N=
ow we can abstract the "Get a list..." method as:</p><div class=3D"JavaHigh=
lightBlock"><blockquote class=3D"SCodeFlow"><table cellspacing=3D"0" cellpa=
dding=3D"0" class=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta"></span>=
<span class=3D"ProfjComment">//In IListOfBooks
</span><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></sp=
an></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjTyp=
e">IListOfBooks</span><span class=3D"ProfjWhiteSpace"> </span><span class=
=3D"ProfjIdentifier">getList</span><span class=3D"ProfjKeyword">(</span><sp=
an class=3D"ProfjType">IBookPredicate</span><span class=3D"ProfjWhiteSpace"=
> </span><span class=3D"ProfjIdentifier">predicate</span><span class=3D"Pro=
fjKeyword">)</span><span class=3D"ProfjDefault">;</span><span class=3D"RktM=
eta"></span></td></tr></tbody></table></blockquote></div><p>We can implemen=
t it as follows:</p><div class=3D"JavaHighlightBlock"><blockquote class=3D"=
SCodeFlow"><table cellspacing=3D"0" cellpadding=3D"0" class=3D"RktBlk"><tbo=
dy><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjComment">//In=
 EmptyNode
</span><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></sp=
an></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjCom=
ment">//base case
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjType">IListOfBooks</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjIdentifier">getList</span><span=
 class=3D"ProfjKeyword">(</span><span class=3D"ProfjType">IBookPredicate</s=
pan><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier"=
>predicate</span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjW=
hiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"RktM=
eta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D=
"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">return</span><span =
class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">new</span><s=
pan class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">EmptyNode</=
span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">)</s=
pan><span class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span></t=
d></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjKeyword">=
}</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"Rkt=
Meta"></span><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta=
"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"Pr=
ofjComment">//In ElementNode
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjType">IListOfBooks</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjIdentifier">getList</span><span=
 class=3D"ProfjKeyword">(</span><span class=3D"ProfjType">IBookPredicate</s=
pan><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier"=
>predicate</span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjW=
hiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"RktM=
eta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D=
"ProfjWhiteSpace">   </span><span class=3D"ProfjKeyword">if</span><span cla=
ss=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">(</span><span c=
lass=3D"ProfjIdentifier">predicate</span><span class=3D"ProfjDefault">.</sp=
an><span class=3D"ProfjIdentifier">test</span><span class=3D"ProfjKeyword">=
(</span><span class=3D"ProfjKeyword">this</span><span class=3D"ProfjDefault=
">.</span><span class=3D"ProfjIdentifier">book</span><span class=3D"ProfjKe=
yword">)</span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhi=
teSpace"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"RktMet=
a"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"P=
rofjWhiteSpace">     </span><span class=3D"ProfjKeyword">return</span><span=
 class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">new</span><=
span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">ElementNod=
e</span><span class=3D"ProfjKeyword">(</span><span class=3D"RktMeta"></span=
></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhite=
Space">     </span><span class=3D"ProfjKeyword">this</span><span class=3D"P=
rofjDefault">.</span><span class=3D"ProfjIdentifier">book</span><span class=
=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"> </span><span cla=
ss=3D"ProfjKeyword">this</span><span class=3D"ProfjDefault">.</span><span c=
lass=3D"ProfjIdentifier">rest</span><span class=3D"ProfjDefault">.</span><s=
pan class=3D"ProfjIdentifier">getList</span><span class=3D"ProfjKeyword">(<=
/span><span class=3D"ProfjIdentifier">predicate</span><span class=3D"ProfjK=
eyword">)</span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjDe=
fault">;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=
=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">   </span><span class=
=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td></tr><tr><td>=
<span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">   </span><s=
pan class=3D"ProfjKeyword">else</span><span class=3D"ProfjWhiteSpace"> </sp=
an><span class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></span></td=
></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace=
">     </span><span class=3D"ProfjKeyword">return</span><span class=3D"Prof=
jWhiteSpace"> </span><span class=3D"ProfjKeyword">this</span><span class=3D=
"ProfjDefault">.</span><span class=3D"ProfjIdentifier">rest</span><span cla=
ss=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">getList</span><=
span class=3D"ProfjKeyword">(</span><span class=3D"ProfjIdentifier">predica=
te</span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">=
;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"Rkt=
Meta"></span><span class=3D"ProfjWhiteSpace">   </span><span class=3D"Profj=
Keyword">}</span><span class=3D"RktMeta"></span></td></tr><tr><td><span cla=
ss=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace"> </span><span class=
=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td></tr></tbody>=
</table></blockquote></div><p>We can express "all books before given year" =
and "all authors with name =E2=80=98Rowling=E2=80=99" as two implementation=
s of the <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=
=3D"RktMeta"></span><span class=3D"ProfjType">IBookPredicate</span><span cl=
ass=3D"RktMeta"></span></span></span> interface:</p><div class=3D"JavaHighl=
ightBlock"><blockquote class=3D"SCodeFlow"><table cellspacing=3D"0" cellpad=
ding=3D"0" class=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta"></span><=
span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteSpace"> <=
/span><span class=3D"ProfjKeyword">class</span><span class=3D"ProfjWhiteSpa=
ce"> </span><span class=3D"ProfjType">BookBefore</span><span class=3D"Profj=
WhiteSpace"> </span><span class=3D"ProfjKeyword">implements</span><span cla=
ss=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">IBookPredicate</sp=
an><span class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></span></td=
></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjError">&nb=
sp;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"R=
ktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"Prof=
jKeyword">private</span><span class=3D"ProfjWhiteSpace"> </span><span class=
=3D"ProfjPrimType">int</span><span class=3D"ProfjWhiteSpace"> </span><span =
class=3D"ProfjIdentifier">year</span><span class=3D"ProfjDefault">;</span><=
span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></s=
pan><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></span>=
</td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteS=
pace">  </span><span class=3D"ProfjKeyword">public</span><span class=3D"Pro=
fjWhiteSpace"> </span><span class=3D"ProfjType">BookBefore</span><span clas=
s=3D"ProfjKeyword">(</span><span class=3D"ProfjPrimType">int</span><span cl=
ass=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">year</span>=
<span class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpace"> </spa=
n><span class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></span></td>=
</tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace"=
>      </span><span class=3D"ProfjKeyword">this</span><span class=3D"ProfjD=
efault">.</span><span class=3D"ProfjIdentifier">year</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjKeyword">=3D</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">year</span><sp=
an class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span></td></tr>=
<tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </=
span><span class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></=
td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjError">&=
nbsp;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D=
"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=3D"Pr=
ofjError">@</span><span class=3D"ProfjType">Override</span><span class=3D"R=
ktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=
=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">public</span><sp=
an class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjPrimType">boolean<=
/span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifie=
r">test</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjType=
">Book</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjId=
entifier">b</span><span class=3D"ProfjKeyword">)</span><span class=3D"Profj=
WhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"Rkt=
Meta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=
=3D"ProfjWhiteSpace">    </span><span class=3D"ProfjKeyword">return</span><=
span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">b</s=
pan><span class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">ge=
tYear</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeywor=
d">)</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyw=
ord">&lt;</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Prof=
jIdentifier">year</span><span class=3D"ProfjDefault">;</span><span class=3D=
"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span cla=
ss=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">}</span><span =
class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><=
span class=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td></t=
r><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjError">&nbsp;<=
/span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMe=
ta"></span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWh=
iteSpace"> </span><span class=3D"ProfjKeyword">class</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjType">BookWithAuthor</span><spa=
n class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">implements=
</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">IB=
ookPredicate</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"P=
rofjKeyword">{</span><span class=3D"RktMeta"></span></td></tr><tr><td><span=
 class=3D"RktMeta"></span><span class=3D"ProfjError">&nbsp;</span><span cla=
ss=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><spa=
n class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">private</=
span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjPrimType">=
String</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjId=
entifier">authorName</span><span class=3D"ProfjDefault">;</span><span class=
=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span =
class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></span></td></tr>=
<tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </=
span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteSpa=
ce"> </span><span class=3D"ProfjType">BookWithAuthor</span><span class=3D"P=
rofjKeyword">(</span><span class=3D"ProfjPrimType">String</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">authorName</sp=
an><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpace"> </=
span><span class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></span></=
td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpa=
ce">    </span><span class=3D"ProfjKeyword">this</span><span class=3D"Profj=
Default">.</span><span class=3D"ProfjIdentifier">authorName</span><span cla=
ss=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">=3D</span><span=
 class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">authorNa=
me</span><span class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></spa=
n></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhit=
eSpace">  </span><span class=3D"ProfjKeyword">}</span><span class=3D"RktMet=
a"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"P=
rofjError">&nbsp;</span><span class=3D"RktMeta"></span></td></tr><tr><td><s=
pan class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span=
 class=3D"ProfjError">@</span><span class=3D"ProfjType">Override</span><spa=
n class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span=
><span class=3D"ProfjWhiteSpace">  </span><span class=3D"ProfjKeyword">publ=
ic</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjPrimTy=
pe">boolean</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Pr=
ofjIdentifier">test</span><span class=3D"ProfjKeyword">(</span><span class=
=3D"ProfjType">Book</span><span class=3D"ProfjWhiteSpace"> </span><span cla=
ss=3D"ProfjIdentifier">b</span><span class=3D"ProfjKeyword">)</span><span c=
lass=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span=
 class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span>=
<span class=3D"ProfjWhiteSpace">    </span><span class=3D"ProfjKeyword">ret=
urn</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdent=
ifier">b</span><span class=3D"ProfjDefault">.</span><span class=3D"ProfjIde=
ntifier">getAuthor</span><span class=3D"ProfjKeyword">(</span><span class=
=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">.</span><span class=
=3D"ProfjIdentifier">contains</span><span class=3D"ProfjKeyword">(</span><s=
pan class=3D"ProfjIdentifier">authorName</span><span class=3D"ProfjKeyword"=
>)</span><span class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></spa=
n></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhit=
eSpace">  </span><span class=3D"ProfjKeyword">}</span><span class=3D"RktMet=
a"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"P=
rofjKeyword">}</span><span class=3D"RktMeta"></span></td></tr></tbody></tab=
le></blockquote></div><p>Getting all books published before 2000 changes fr=
om</p><div class=3D"JavaHighlightBlock"><blockquote class=3D"SCodeFlow"><ta=
ble cellspacing=3D"0" cellpadding=3D"0" class=3D"RktBlk"><tbody><tr><td><sp=
an class=3D"RktMeta"></span><span class=3D"ProfjType">IListOfBooks</span><s=
pan class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">lastC=
entury</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKe=
yword">=3D</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Pro=
fjIdentifier">listOfBooks</span><span class=3D"ProfjDefault">.</span><span =
class=3D"ProfjIdentifier">allBefore</span><span class=3D"ProfjKeyword">(</s=
pan><span class=3D"ProfjLiteral">2000</span><span class=3D"ProfjKeyword">)<=
/span><span class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span><=
/td></tr></tbody></table></blockquote></div><p>to</p><div class=3D"JavaHigh=
lightBlock"><blockquote class=3D"SCodeFlow"><table cellspacing=3D"0" cellpa=
dding=3D"0" class=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta"></span>=
<span class=3D"ProfjType">IListOfBooks</span><span class=3D"ProfjWhiteSpace=
"> </span><span class=3D"ProfjIdentifier">lastCentury</span><span class=3D"=
ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">=3D</span><span class=
=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">listOfBooks</s=
pan><span class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">ge=
tList</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeywor=
d">new</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjTy=
pe">BookBefore</span><span class=3D"ProfjKeyword">(</span><span class=3D"Pr=
ofjLiteral">2000</span><span class=3D"ProfjKeyword">)</span><span class=3D"=
ProfjKeyword">)</span><span class=3D"ProfjDefault">;</span><span class=3D"R=
ktMeta"></span></td></tr></tbody></table></blockquote></div><p>and getting =
all books with the name =E2=80=98Rowling=E2=80=99 changes from</p><div clas=
s=3D"JavaHighlightBlock"><blockquote class=3D"SCodeFlow"><table cellspacing=
=3D"0" cellpadding=3D"0" class=3D"RktBlk"><tbody><tr><td><span class=3D"Rkt=
Meta"></span><span class=3D"ProfjType">IListOfBooks</span><span class=3D"Pr=
ofjWhiteSpace"> </span><span class=3D"ProfjIdentifier">allRowling</span><sp=
an class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">=3D</span=
><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">li=
stOfBooks</span><span class=3D"ProfjDefault">.</span><span class=3D"ProfjId=
entifier">allWithAuthor</span><span class=3D"ProfjKeyword">(</span><span cl=
ass=3D"ProfjString">"Rowling"</span><span class=3D"ProfjKeyword">)</span><s=
pan class=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span></td></tr=
></tbody></table></blockquote></div><p>to</p><div class=3D"JavaHighlightBlo=
ck"><blockquote class=3D"SCodeFlow"><table cellspacing=3D"0" cellpadding=3D=
"0" class=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta"></span><span cl=
ass=3D"ProfjType">IListOfBooks</span><span class=3D"ProfjWhiteSpace"> </spa=
n><span class=3D"ProfjIdentifier">allRowling</span><span class=3D"ProfjWhit=
eSpace"> </span><span class=3D"ProfjKeyword">=3D</span><span class=3D"Profj=
WhiteSpace"> </span><span class=3D"ProfjIdentifier">listOfBooks</span><span=
 class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">getList</sp=
an><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjKeyword">new</s=
pan><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">BookW=
ithAuthor</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjSt=
ring">"Rowling"</span><span class=3D"ProfjKeyword">)</span><span class=3D"P=
rofjKeyword">)</span><span class=3D"ProfjDefault">;</span><span class=3D"Rk=
tMeta"></span></td></tr></tbody></table></blockquote></div><p>This design h=
as three distinct advantages:</p><ul><li><p>All "Get a list of books that s=
atisfy this condition" are implemented only once, so long as the condition =
is a predicate that takes a <span class=3D"RktBlk"><span class=3D"JavaHighl=
ight"><span class=3D"RktMeta"></span><span class=3D"ProfjType">Book</span><=
span class=3D"RktMeta"></span></span></span> object as its only argument.</=
p></li><li><p>The <span class=3D"RktBlk"><span class=3D"JavaHighlight"><spa=
n class=3D"RktMeta"></span><span class=3D"ProfjType">Book</span><span class=
=3D"RktMeta"></span></span></span> class need not be cluttered with specifi=
c predicates such as <span class=3D"RktBlk"><span class=3D"JavaHighlight"><=
span class=3D"RktMeta"></span><span class=3D"ProfjIdentifier">allBefore</sp=
an><span class=3D"RktMeta"></span></span></span> and <span class=3D"RktBlk"=
><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=
=3D"ProfjIdentifier">containsAuthor</span><span class=3D"RktMeta"></span></=
span></span>. So long as there is a way to get an attribute, it is possible=
 to write any predicate that uses it. This is both good and bad: we will re=
turn to this issue later.</p></li><li><p>Since a predicate is a boolean con=
dition, we can create <span class=3D"emph">compound</span> predicates using=
 logical operators. For example, we can combine the two conditions above to=
 "get a list that contains books published before 2000 AND whose author is =
Rowling." Such a predicate can be implemented simply as a class that implem=
ents the <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=
=3D"RktMeta"></span><span class=3D"ProfjType">BookPredicate</span><span cla=
ss=3D"RktMeta"></span></span></span> interface, takes two other <span class=
=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><s=
pan class=3D"ProfjType">BookPredicate</span><span class=3D"RktMeta"></span>=
</span></span> objects as input to its constructor, and returns their AND r=
esult in its <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span cla=
ss=3D"RktMeta"></span><span class=3D"ProfjIdentifier">test</span><span clas=
s=3D"RktMeta"></span></span></span> method.</p></li></ul><p>We can standard=
ize this code even more! It turns out that Java has an interface that repre=
sents a predicate, so we need not define our own. This is the <a href=3D"ht=
tps://docs.oracle.com/javase/8/docs/api/java/util/function/Predicate.html">=
<span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta=
"></span><span class=3D"ProfjType">Predicate</span><span class=3D"ProfjKeyw=
ord">&lt;</span><span class=3D"ProfjType">T</span><span class=3D"ProfjKeywo=
rd">&gt;</span><span class=3D"RktMeta"></span></span></span> interface</a>.=
 Since our predicates operate on books, we use its <span class=3D"RktBlk"><=
span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D"=
ProfjType">Predicate</span><span class=3D"ProfjKeyword">&lt;</span><span cl=
ass=3D"ProfjType">Book</span><span class=3D"ProfjKeyword">&gt;</span><span =
class=3D"RktMeta"></span></span></span> form.</p><div class=3D"JavaHighligh=
tBlock"><blockquote class=3D"SCodeFlow"><table cellspacing=3D"0" cellpaddin=
g=3D"0" class=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta"></span><spa=
n class=3D"ProfjComment">//In IListOfBooks
</span><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></sp=
an></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjTyp=
e">IListOfBooks</span><span class=3D"ProfjWhiteSpace"> </span><span class=
=3D"ProfjIdentifier">getList</span><span class=3D"ProfjKeyword">(</span><sp=
an class=3D"ProfjType">Predicate</span><span class=3D"ProfjKeyword">&lt;</s=
pan><span class=3D"ProfjType">Book</span><span class=3D"ProfjKeyword">&gt;<=
/span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifie=
r">predicate</span><span class=3D"ProfjKeyword">)</span><span class=3D"Prof=
jDefault">;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span cl=
ass=3D"RktMeta"></span><span class=3D"ProfjError">&nbsp;</span><span class=
=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span =
class=3D"ProfjComment">//In EmptyNode
</span><span class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></sp=
an></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjCom=
ment">//base case
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjType">IListOfBooks</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjIdentifier">getList</span><span=
 class=3D"ProfjKeyword">(</span><span class=3D"ProfjType">Predicate</span><=
span class=3D"ProfjKeyword">&lt;</span><span class=3D"ProfjType">Book</span=
><span class=3D"ProfjKeyword">&gt;</span><span class=3D"ProfjWhiteSpace"> <=
/span><span class=3D"ProfjIdentifier">predicate</span><span class=3D"ProfjK=
eyword">)</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Prof=
jKeyword">{</span><span class=3D"RktMeta"></span></td></tr><tr><td><span cl=
ass=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=
=3D"ProfjDefault">.</span><span class=3D"ProfjDefault">.</span><span class=
=3D"ProfjDefault">.</span><span class=3D"RktMeta"></span></td></tr><tr><td>=
<span class=3D"RktMeta"></span><span class=3D"ProfjKeyword">}</span><span c=
lass=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><s=
pan class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></span></td><=
/tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjComment">//I=
n ElementNode
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjType">IListOfBooks</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjIdentifier">getList</span><span=
 class=3D"ProfjKeyword">(</span><span class=3D"ProfjType">Predicate</span><=
span class=3D"ProfjKeyword">&lt;</span><span class=3D"ProfjType">Book</span=
><span class=3D"ProfjKeyword">&gt;</span><span class=3D"ProfjWhiteSpace"> <=
/span><span class=3D"ProfjIdentifier">predicate</span><span class=3D"ProfjK=
eyword">)</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Prof=
jKeyword">{</span><span class=3D"RktMeta"></span></td></tr><tr><td><span cl=
ass=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=
=3D"ProfjDefault">.</span><span class=3D"ProfjDefault">.</span><span class=
=3D"ProfjDefault">.</span><span class=3D"RktMeta"></span></td></tr><tr><td>=
<span class=3D"RktMeta"></span><span class=3D"ProfjKeyword">}</span><span c=
lass=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><s=
pan class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></span></td><=
/tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjError">&nbsp=
;</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"Rkt=
Meta"></span><span class=3D"ProfjKeyword">public</span><span class=3D"Profj=
WhiteSpace"> </span><span class=3D"ProfjKeyword">class</span><span class=3D=
"ProfjWhiteSpace"> </span><span class=3D"ProfjType">BookBefore</span><span =
class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">implements</=
span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">Pred=
icate</span><span class=3D"ProfjKeyword">&lt;</span><span class=3D"ProfjTyp=
e">Book</span><span class=3D"ProfjKeyword">&gt;</span><span class=3D"ProfjK=
eyword">{</span><span class=3D"RktMeta"></span></td></tr><tr><td><span clas=
s=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=
=3D"ProfjDefault">.</span><span class=3D"ProfjDefault">.</span><span class=
=3D"ProfjDefault">.</span><span class=3D"RktMeta"></span></td></tr><tr><td>=
<span class=3D"RktMeta"></span><span class=3D"ProfjKeyword">}</span><span c=
lass=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><s=
pan class=3D"ProfjError">&nbsp;</span><span class=3D"RktMeta"></span></td><=
/tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjKeyword">pub=
lic</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeywo=
rd">class</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Prof=
jType">BookWithAuthor</span><span class=3D"ProfjWhiteSpace"> </span><span c=
lass=3D"ProfjKeyword">implements</span><span class=3D"ProfjWhiteSpace"> </s=
pan><span class=3D"ProfjType">Predicate</span><span class=3D"ProfjKeyword">=
&lt;</span><span class=3D"ProfjType">Book</span><span class=3D"ProfjKeyword=
">&gt;</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKe=
yword">{</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=
=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">  </span><span class=3D=
"ProfjDefault">.</span><span class=3D"ProfjDefault">.</span><span class=3D"=
ProfjDefault">.</span><span class=3D"RktMeta"></span></td></tr><tr><td><spa=
n class=3D"RktMeta"></span><span class=3D"ProfjKeyword">}</span><span class=
=3D"RktMeta"></span></td></tr></tbody></table></blockquote></div><h5>4.6.1.=
1<tt>&nbsp;</tt><a name=3D"(part._.Java_syntactic_sugar)"></a>Java syntacti=
c sugar</h5><p>The classes <span class=3D"RktBlk"><span class=3D"JavaHighli=
ght"><span class=3D"RktMeta"></span><span class=3D"ProfjType">BookBefore</s=
pan><span class=3D"RktMeta"></span></span></span> and <span class=3D"RktBlk=
"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=
=3D"ProfjType">BookWithAuthor</span><span class=3D"RktMeta"></span></span><=
/span> seem somewhat excessive, because they have only one method in them (=
and the constructor to input the year and name of author). If they are inst=
antiated only at one place, we can replace them with <span class=3D"emph">n=
ameless, anonymous</span> classes:</p><div class=3D"JavaHighlightBlock"><bl=
ockquote class=3D"SCodeFlow"><table cellspacing=3D"0" cellpadding=3D"0" cla=
ss=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta"></span><span class=3D"=
ProfjPrimType">int</span><span class=3D"ProfjWhiteSpace"> </span><span clas=
s=3D"ProfjIdentifier">year</span><span class=3D"ProfjWhiteSpace"> </span><s=
pan class=3D"ProfjKeyword">=3D</span><span class=3D"ProfjWhiteSpace"> </spa=
n><span class=3D"ProfjLiteral">2000</span><span class=3D"ProfjDefault">;</s=
pan><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjComment">//=
the year we want to filter by
</span><span class=3D"ProfjType">IListOfBooks</span><span class=3D"ProfjWhi=
teSpace"> </span><span class=3D"ProfjIdentifier">lastCentury</span><span cl=
ass=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjKeyword">=3D</span><spa=
n class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">listOfB=
ooks</span><span class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentif=
ier">getList</span><span class=3D"ProfjKeyword">(</span><span class=3D"RktM=
eta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D=
"ProfjWhiteSpace">          </span><span class=3D"ProfjKeyword">new</span><=
span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjType">Predicate<=
/span><span class=3D"ProfjKeyword">&lt;</span><span class=3D"ProfjType">Boo=
k</span><span class=3D"ProfjKeyword">&gt;</span><span class=3D"ProfjKeyword=
">(</span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpa=
ce"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"RktMeta"></=
span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjW=
hiteSpace">            </span><span class=3D"ProfjKeyword">public</span><sp=
an class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjPrimType">boolean<=
/span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifie=
r">test</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjType=
">Book</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjId=
entifier">b</span><span class=3D"ProfjKeyword">)</span><span class=3D"Profj=
WhiteSpace"> </span><span class=3D"ProfjKeyword">{</span><span class=3D"Rkt=
Meta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=
=3D"ProfjWhiteSpace">              </span><span class=3D"ProfjKeyword">retu=
rn</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdenti=
fier">b</span><span class=3D"ProfjDefault">.</span><span class=3D"ProfjIden=
tifier">getYear</span><span class=3D"ProfjKeyword">(</span><span class=3D"P=
rofjKeyword">)</span><span class=3D"ProfjKeyword">&lt;</span><span class=3D=
"ProfjIdentifier">year</span><span class=3D"ProfjDefault">;</span><span cla=
ss=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><spa=
n class=3D"ProfjWhiteSpace">            </span><span class=3D"ProfjKeyword"=
>}</span><span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"Rk=
tMeta"></span><span class=3D"ProfjWhiteSpace">          </span><span class=
=3D"ProfjKeyword">}</span><span class=3D"RktMeta"></span></td></tr><tr><td>=
<span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">          </=
span><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjDefault">;</s=
pan><span class=3D"RktMeta"></span></td></tr></tbody></table></blockquote><=
/div><p>Since there is only one place where the class was used, we can writ=
e its entire implementation at its place of usage. We need not name the cla=
ss as <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"R=
ktMeta"></span><span class=3D"ProfjType">BookBefore</span><span class=3D"Rk=
tMeta"></span></span></span>: it suffices to say that we are implementing a=
 class that implements the <span class=3D"RktBlk"><span class=3D"JavaHighli=
ght"><span class=3D"RktMeta"></span><span class=3D"ProfjType">Predicate</sp=
an><span class=3D"ProfjKeyword">&lt;</span><span class=3D"ProfjType">Book</=
span><span class=3D"ProfjKeyword">&gt;</span><span class=3D"RktMeta"></span=
></span></span> interface. Since the class is being defined here, it can ac=
cess the variable <span class=3D"RktBlk"><span class=3D"JavaHighlight"><spa=
n class=3D"RktMeta"></span><span class=3D"ProfjIdentifier">year</span><span=
 class=3D"RktMeta"></span></span></span> defined right outside it. Thus we =
can summarize this usage as <span class=3D"emph">Define data needed in the =
predicate, then define the predicate as an anonymous class</span>.</p><p>An=
onymous classes have the potential to clutter code, if they are verbose. Th=
erefore they should be used only when both of the following conditions are =
fulfilled:</p><ul><li><p>The class is short (i.e. it has 1-2 methods, and a=
ll of them are short).</p></li><li><p>The class will be instantiated only o=
nce (because it needs to be defined at the place of instantiation).</p></li=
></ul><p>In our specific situation, this can be simplified even more. Simil=
ar to the name of the class (<span class=3D"RktBlk"><span class=3D"JavaHigh=
light"><span class=3D"RktMeta"></span><span class=3D"ProfjType">BookBefore<=
/span><span class=3D"RktMeta"></span></span></span>), the name of the metho=
d inside it (<span class=3D"RktBlk"><span class=3D"JavaHighlight"><span cla=
ss=3D"RktMeta"></span><span class=3D"ProfjIdentifier">test</span><span clas=
s=3D"RktMeta"></span></span></span>) is also redundant. This is because it =
is the only method required to be in that class (since it implements <span =
class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></sp=
an><span class=3D"ProfjType">Predicate</span><span class=3D"ProfjKeyword">&=
lt;</span><span class=3D"ProfjType">Book</span><span class=3D"ProfjKeyword"=
>&gt;</span><span class=3D"RktMeta"></span></span></span>). In other words,=
 instead of saying <span class=3D"emph">Call the test method of this object=
</span> we can get away with saying <span class=3D"emph">Call the only meth=
od inside this object, that takes a Book object and returns a boolean</span=
>. Such nameless methods are <span class=3D"emph">lambda</span> functions. =
A lambda (nameless) function is useful only when <span class=3D"emph">it is=
 the only one around</span>. Starting with Java 8, lambda functions are sup=
ported in Java.</p><div class=3D"JavaHighlightBlock"><blockquote class=3D"S=
CodeFlow"><table cellspacing=3D"0" cellpadding=3D"0" class=3D"RktBlk"><tbod=
y><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjPrimType">int<=
/span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifie=
r">year</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjK=
eyword">=3D</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Pr=
ofjLiteral">2000</span><span class=3D"ProfjDefault">;</span><span class=3D"=
RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span clas=
s=3D"ProfjType">IListOfBooks</span><span class=3D"ProfjWhiteSpace"> </span>=
<span class=3D"ProfjIdentifier">lastCentury</span><span class=3D"ProfjWhite=
Space"> </span><span class=3D"ProfjKeyword">=3D</span><span class=3D"ProfjW=
hiteSpace"> </span><span class=3D"ProfjIdentifier">listOfBooks</span><span =
class=3D"ProfjDefault">.</span><span class=3D"ProfjIdentifier">getList</spa=
n><span class=3D"ProfjKeyword">(</span><span class=3D"RktMeta"></span></td>=
</tr><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace"=
>          </span><span class=3D"ProfjKeyword">(</span><span class=3D"Profj=
Type">Book</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Pro=
fjIdentifier">b</span><span class=3D"ProfjKeyword">)</span><span class=3D"P=
rofjWhiteSpace"> </span><span class=3D"ProfjKeyword">-</span><span class=3D=
"ProfjKeyword">&gt;</span><span class=3D"ProfjWhiteSpace"> </span><span cla=
ss=3D"ProfjIdentifier">b</span><span class=3D"ProfjDefault">.</span><span c=
lass=3D"ProfjIdentifier">getYear</span><span class=3D"ProfjKeyword">(</span=
><span class=3D"ProfjKeyword">)</span><span class=3D"ProfjWhiteSpace"> </sp=
an><span class=3D"ProfjKeyword">&lt;</span><span class=3D"ProfjWhiteSpace">=
 </span><span class=3D"ProfjIdentifier">year</span><span class=3D"RktMeta">=
</span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=3D"Prof=
jWhiteSpace">          </span><span class=3D"ProfjKeyword">)</span><span cl=
ass=3D"ProfjDefault">;</span><span class=3D"RktMeta"></span></td></tr></tbo=
dy></table></blockquote></div><p>The part <span class=3D"RktBlk"><span clas=
s=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D"ProfjKeyw=
ord">(</span><span class=3D"ProfjType">Book</span><span class=3D"ProfjWhite=
Space"> </span><span class=3D"ProfjIdentifier">b</span><span class=3D"Profj=
Keyword">)</span><span class=3D"RktMeta"></span></span></span> is the signa=
ture of the (nameless) lambda function. The <span class=3D"RktBlk"><span cl=
ass=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D"ProfjKe=
yword">-</span><span class=3D"ProfjKeyword">&gt;</span><span class=3D"RktMe=
ta"></span></span></span> points to its implementation, which follows it. S=
ince the implementation is only one line, we type it directly (otherwise us=
e curly braces).</p><p>Let us summarize explicitly how this latest code wor=
ks:</p><ul><li><p>The <span class=3D"RktBlk"><span class=3D"JavaHighlight">=
<span class=3D"RktMeta"></span><span class=3D"ProfjIdentifier">getList</spa=
n><span class=3D"RktMeta"></span></span></span> method expects a <span clas=
s=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><=
span class=3D"ProfjType">Predicate</span><span class=3D"ProfjKeyword">&lt;<=
/span><span class=3D"ProfjType">Book</span><span class=3D"ProfjKeyword">&gt=
;</span><span class=3D"RktMeta"></span></span></span> object. What it reall=
y cares about is a method that has a single argument of type <span class=3D=
"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span=
 class=3D"ProfjType">Book</span><span class=3D"RktMeta"></span></span></spa=
n>, and returns a <span class=3D"RktBlk"><span class=3D"JavaHighlight"><spa=
n class=3D"RktMeta"></span><span class=3D"ProfjPrimType">boolean</span><spa=
n class=3D"RktMeta"></span></span></span>.</p></li><li><p>Our lambda functi=
on notation provides it with such a function, using the minimum notation (i=
.e. no enclosing class, no method because they are redundant)</p></li><li><=
p>The <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"R=
ktMeta"></span><span class=3D"ProfjIdentifier">getList</span><span class=3D=
"RktMeta"></span></span></span> method traverses the list, and at every non=
-empty node it passes the <span class=3D"RktBlk"><span class=3D"JavaHighlig=
ht"><span class=3D"RktMeta"></span><span class=3D"ProfjType">Book</span><sp=
an class=3D"RktMeta"></span></span></span> object to this lambda function a=
nd acts according to its result.</p></li></ul><p>Use of lambda functions st=
ates our original purpose more succinctly and clearly: write a method that =
takes a (predicate) function as an argument and uses it. In Java, functions=
 cannot be passed as arguments directly, because Java treats <span class=3D=
"emph">data</span> and <span class=3D"emph">methods</span> as two different=
 things. Therefore we enclose the function inside a (<span class=3D"RktBlk"=
><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=
=3D"ProfjType">Predicate</span><span class=3D"RktMeta"></span></span></span=
>) object, and then pass it around. Syntactic support for lambda functions =
just brings the Java code closer to its original intent.</p><p>Most functio=
nal programming languages do not distinguish between data and functions. Th=
erefore this implementation would look more concise in such languages.</p><=
h5>4.6.2<tt>&nbsp;</tt><a name=3D"(part._sort-by-anything)"></a>Sort by ...=
</h5><p>Our <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span clas=
s=3D"RktMeta"></span><span class=3D"ProfjIdentifier">sort</span><span class=
=3D"RktMeta"></span></span></span> method arranged books in the list in non=
-descending order of price. However we could also sort the same list in non=
-ascending order of price, or based on the author name or even year of publ=
ication. If we examine our implementation of sorting, we can observe that t=
he ordering of books in the final list is decided by the <span class=3D"Rkt=
Blk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span cla=
ss=3D"ProfjIdentifier">cheaperThan</span><span class=3D"RktMeta"></span></s=
pan></span> method in the <span class=3D"RktBlk"><span class=3D"JavaHighlig=
ht"><span class=3D"RktMeta"></span><span class=3D"ProfjType">Book</span><sp=
an class=3D"RktMeta"></span></span></span> class. Therefore, in order to ch=
ange our sorting method, we must provide a different way of comparing two b=
ooks...and here is the opportunity for abstraction!</p><p>We need a standar=
d way to compare two books. As before we can use the <span class=3D"RktBlk"=
><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=
=3D"ProfjType">Comparable</span><span class=3D"RktMeta"></span></span></spa=
n> interface. The <span class=3D"RktBlk"><span class=3D"JavaHighlight"><spa=
n class=3D"RktMeta"></span><span class=3D"ProfjType">Book</span><span class=
=3D"RktMeta"></span></span></span> class could implement this interface in =
the form of a <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span cl=
ass=3D"RktMeta"></span><span class=3D"ProfjKeyword">public</span><span clas=
s=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjPrimType">int</span><span=
 class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">compareT=
o</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjType">Book=
</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifi=
er">b</span><span class=3D"ProfjKeyword">)</span><span class=3D"RktMeta"></=
span></span></span> method. However this implementation will contain (fixed=
) comparison between two books (e.g. based on price). We <span class=3D"emp=
h">cannot change</span> the criteria to compare books without editing the <=
span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"=
></span><span class=3D"ProfjType">Book</span><span class=3D"RktMeta"></span=
></span></span> class. Moreover multiple criteria cannot simultaneously exi=
st, because the <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span =
class=3D"RktMeta"></span><span class=3D"ProfjType">Book</span><span class=
=3D"RktMeta"></span></span></span> class can implement the <span class=3D"R=
ktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span c=
lass=3D"ProfjIdentifier">compareTo</span><span class=3D"RktMeta"></span></s=
pan></span> method only once.</p><p>Java provides us with another way for p=
recisely this use-case: the <span class=3D"RktBlk"><span class=3D"JavaHighl=
ight"><span class=3D"RktMeta"></span><span class=3D"ProfjType">Comparator</=
span><span class=3D"ProfjKeyword">&lt;</span><span class=3D"ProfjType">T</s=
pan><span class=3D"ProfjKeyword">&gt;</span><span class=3D"RktMeta"></span>=
</span></span> interface. This interface has one method:</p><div class=3D"J=
avaHighlightBlock"><blockquote class=3D"SCodeFlow"><table cellspacing=3D"0"=
 cellpadding=3D"0" class=3D"RktBlk"><tbody><tr><td><span class=3D"RktMeta">=
</span><span class=3D"ProfjKeyword">public</span><span class=3D"ProfjWhiteS=
pace"> </span><span class=3D"ProfjPrimType">int</span><span class=3D"ProfjW=
hiteSpace"> </span><span class=3D"ProfjIdentifier">compare</span><span clas=
s=3D"ProfjKeyword">(</span><span class=3D"ProfjType">T</span><span class=3D=
"ProfjWhiteSpace"> </span><span class=3D"ProfjIdentifier">a</span><span cla=
ss=3D"ProfjDefault">,</span><span class=3D"ProfjWhiteSpace"> </span><span c=
lass=3D"ProfjType">T</span><span class=3D"ProfjWhiteSpace"> </span><span cl=
ass=3D"ProfjIdentifier">b</span><span class=3D"ProfjKeyword">)</span><span =
class=3D"RktMeta"></span></td></tr></tbody></table></blockquote></div><p>th=
at returns the result as an integer using the same convention as <span clas=
s=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><=
span class=3D"ProfjType">Comparable</span><span class=3D"RktMeta"></span></=
span></span>. We can implement a class (separate from <span class=3D"RktBlk=
"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=
=3D"ProfjType">Book</span><span class=3D"RktMeta"></span></span></span>) th=
at implements the <span class=3D"RktBlk"><span class=3D"JavaHighlight"><spa=
n class=3D"RktMeta"></span><span class=3D"ProfjType">Comparator</span><span=
 class=3D"ProfjKeyword">&lt;</span><span class=3D"ProfjType">Book</span><sp=
an class=3D"ProfjKeyword">&gt;</span><span class=3D"RktMeta"></span></span>=
</span> interface and provides this method. More importantly, we can write =
<span class=3D"emph">several</span> such classes, each providing a differen=
t way to compare two books, without editing the <span class=3D"RktBlk"><spa=
n class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D"Pro=
fjType">Book</span><span class=3D"RktMeta"></span></span></span> class!</p>=
<blockquote class=3D"IncerciseBody"><p></p><div class=3D"SIntrapara"><p cla=
ss=3D"Incercise">Do Now!</p></div><div class=3D"SIntrapara">Re-implement th=
e <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMe=
ta"></span><span class=3D"ProfjIdentifier">sort</span><span class=3D"RktMet=
a"></span></span></span> method so that it uses the <span class=3D"RktBlk">=
<span class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D=
"ProfjType">Comparator</span><span class=3D"RktMeta"></span></span></span> =
interface somehow. Can you use Java 8 constructs to abbreviate the syntax?<=
/div><p></p></blockquote><h5>4.7<tt>&nbsp;</tt><a name=3D"(part._higher-ord=
er-functions)"></a>Stating abstractions more formally</h5><p>The abstracted=
 forms of <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span class=
=3D"RktMeta"></span><span class=3D"ProfjIdentifier">getList</span><span cla=
ss=3D"RktMeta"></span></span></span> are examples of <span class=3D"emph">h=
igher-order functions</span>. A higher-order function is a function that ta=
kes another function as an argument, and possibly returns a function as a v=
alue. Designing an operation as a higher-order function offers a powerful m=
eans of abstraction. Higher-order functions are supported to some degree in=
 many programming languages, often supported best by languages that support=
 functional programming.</p><h5>4.7.1<tt>&nbsp;</tt><a name=3D"(part._list-=
filter)"></a>Filter</h5><p>At a high level the <span class=3D"RktBlk"><span=
 class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D"Prof=
jIdentifier">getList</span><span class=3D"RktMeta"></span></span></span> me=
thod above is a special case of the following generic operation: <span clas=
s=3D"emph">Given a list, create a sublist of things in the original list th=
at satisfy a given condition</span>. This <span class=3D"emph">List =3D&gt;=
 List</span> operation is called a <span style=3D"font-weight: bold">filter=
</span>. One may think of a filter as a generic operation on a list, and re=
turns a sublist of the same type. It takes the general form</p><p><span cla=
ss=3D"RktBlk"><span class=3D"JavaHighlight"><span class=3D"RktMeta"></span>=
<span class=3D"ProfjType">List</span><span class=3D"ProfjWhiteSpace"> </spa=
n><span class=3D"ProfjIdentifier">filter</span><span class=3D"ProfjKeyword"=
>(</span><span class=3D"ProfjType">List</span><span class=3D"ProfjWhiteSpac=
e"> </span><span class=3D"ProfjIdentifier">input</span><span class=3D"Profj=
Default">,</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Pro=
fjType">Predicate</span><span class=3D"ProfjWhiteSpace"> </span><span class=
=3D"ProfjIdentifier">p</span><span class=3D"ProfjKeyword">)</span><span cla=
ss=3D"RktMeta"></span></span></span></p><h5>4.7.2<tt>&nbsp;</tt><a name=3D"=
(part._list-fold)"></a>Fold/Reduce</h5><p>The <span class=3D"RktBlk"><span =
class=3D"JavaHighlight"><span class=3D"RktMeta"></span><span class=3D"Profj=
Identifier">count</span><span class=3D"RktMeta"></span></span></span> metho=
d above starts from an entire list and computes a single value. It can be c=
haracterized as a <span class=3D"emph">fold</span> higher-order function (a=
nother name for it is <span class=3D"emph">reduce</span>).</p><p>A <span cl=
ass=3D"emph">fold</span> operation is of the form <span class=3D"emph">List=
 =3D&gt; value</span>. A <span class=3D"emph">fold</span> operation starts =
with an initial value, an algorithm to combine this initial value with elem=
ents in the list and return the combination. Examples of fold include count=
ing the number of books in the list, calculating the total price of all boo=
ks, determining if the list contains a book by Rowling, etc.</p><p><a href=
=3D"https://course.ccs.neu.edu/cs5004/lecturelists_and_hof.html#%28part._co=
unt-list%29" data-pltdoc=3D"x">The two approaches to counting the books</a>=
 in the list described above are both <span class=3D"emph">fold</span> oper=
ations. The accumulator approach builds the total as we traverse the list f=
rom left to right. This is called a <span class=3D"emph">fold-l</span> oper=
ation. In contrast the non-accumulator approach builds the total right-to-l=
eft as the recursion unravels. This is called a <span class=3D"emph">fold-r=
</span> operation. Both approaches use an initial value of 0 (the initial v=
alue of the accumulator in <span class=3D"emph">fold-l</span> and the retur=
n value in the <span class=3D"RktBlk"><span class=3D"JavaHighlight"><span c=
lass=3D"RktMeta"></span><span class=3D"ProfjType">EmptyNode</span><span cla=
ss=3D"RktMeta"></span></span></span> for <span class=3D"emph">fold-r</span>=
). Both approaches do not explicitly take a function as an argument, but ca=
n be thought of as using the operation "add 1" on every element of the list=
.</p><p>It may be added that <span class=3D"emph">fold</span> need not work=
 only on lists: it works on most recursive data structures.</p><h5>4.7.3<tt=
>&nbsp;</tt><a name=3D"(part._list-map)"></a>Map</h5><p>Consider a new oper=
ation on the above list of books: return a list of all titles in the same o=
rder as the list of books. This is an example of a <span class=3D"emph">map=
</span> higher-order function. In general a <span class=3D"emph">map</span>=
 operation takes in a list and returns a list of the same size, but possibl=
y of a different type. The function that a <span class=3D"emph">map</span> =
applies to each element of the list can be thought of as mapping the elemen=
t to another element.</p><p>Higher-order functions have given rise to the p=
opular "Map Reduce" programming model, which is used to process large data =
using parallel algorithms and architectures. It is based on the observation=
 that a lot of operations on large data can be termed as a =E2=80=9Cmap=E2=
=80=9D (a combination of the map and filter operations above), followed by =
a =E2=80=9Creduce=E2=80=9D (to summarize the result). As a simple example, =
given a list of user profiles on Facebook, finding the average number of po=
sts by female users would amount to summarizing users as a list of (gender,=
 number of posts) using a <span class=3D"emph">map</span>, selecting only f=
emales using a <span class=3D"emph">filter</span>, and then averaging the n=
umber of posts on the result using a <span class=3D"emph">reduce/fold</span=
>. In a language that supports higher-order functions, this can be as simpl=
e as (in pseudo-code)</p><div class=3D"JavaHighlightBlock"><blockquote clas=
s=3D"SCodeFlow"><table cellspacing=3D"0" cellpadding=3D"0" class=3D"RktBlk"=
><tbody><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjIdentifi=
er">average</span><span class=3D"ProfjWhiteSpace"> </span><span class=3D"Pr=
ofjKeyword">=3D</span><span class=3D"ProfjWhiteSpace"> </span><span class=
=3D"ProfjIdentifier">fold</span><span class=3D"ProfjKeyword">(</span><span =
class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><=
span class=3D"ProfjWhiteSpace">            </span><span class=3D"ProfjIdent=
ifier">filter</span><span class=3D"ProfjKeyword">(</span><span class=3D"Rkt=
Meta"></span></td></tr><tr><td><span class=3D"RktMeta"></span><span class=
=3D"ProfjWhiteSpace">                </span><span class=3D"ProfjIdentifier"=
>map</span><span class=3D"ProfjKeyword">(</span><span class=3D"ProfjIdentif=
ier">listOfUsers</span><span class=3D"ProfjDefault">,</span><span class=3D"=
ProfjString">"findGenderPosts"</span><span class=3D"ProfjKeyword">)</span><=
span class=3D"RktMeta"></span></td></tr><tr><td><span class=3D"RktMeta"></s=
pan><span class=3D"ProfjWhiteSpace">                </span><span class=3D"P=
rofjDefault">,</span><span class=3D"ProfjString">"gender=3Dfemale"</span><s=
pan class=3D"ProfjKeyword">)</span><span class=3D"RktMeta"></span></td></tr=
><tr><td><span class=3D"RktMeta"></span><span class=3D"ProfjWhiteSpace">   =
         </span><span class=3D"ProfjDefault">,</span><span class=3D"ProfjWh=
iteSpace"> </span><span class=3D"ProfjString">"build-average"</span><span c=
lass=3D"ProfjKeyword">)</span><span class=3D"RktMeta"></span></td></tr></tb=
ody></table></blockquote></div><div class=3D"navsetbottom"><span class=3D"n=
avleft"><div class=3D"nosearchform"></div>&nbsp;&nbsp;</span><span class=3D=
"navright">&nbsp;&nbsp;<a href=3D"https://course.ccs.neu.edu/cs5004/lecture=
enums_unions.html" title=3D"backward to &quot;Lecture 3: Representing more =
complex forms of data&quot;" data-pltdoc=3D"x">=E2=86=90 prev</a>&nbsp;&nbs=
p;<a href=3D"https://course.ccs.neu.edu/cs5004/Lectures.html" title=3D"up t=
o &quot;Lectures&quot;" data-pltdoc=3D"x">up</a>&nbsp;&nbsp;<a href=3D"http=
s://course.ccs.neu.edu/cs5004/lecturelists_adt_java.html" title=3D"forward =
to &quot;Lecture 5: Lists continued&quot;" data-pltdoc=3D"x">next =E2=86=92=
</a></span>&nbsp;</div></div></div><div id=3D"contextindicator">&nbsp;</div=
><tbdiv id=3D"picinpicBtn"></tbdiv><tbdiv id=3D"playerControlBtn"></tbdiv><=
tbdiv id=3D"leftFullStackButton"></tbdiv><tbdiv id=3D"rightFullStackButton"=
></tbdiv><div id=3D"buffer-extension-hover-container" style=3D"font-family:=
 Roboto, sans-serif; display: none; position: absolute; z-index: 8675309; c=
ursor: pointer; width: 67px;"><div id=3D"buffer-extension-button-hover-cont=
ainer" style=3D"position: relative; z-index: 8675309; width: 67px; height: =
24px;"><span id=3D"buffer-extension-hover-button" style=3D"width: 67px; hei=
ght: 24px; background-image: url(&quot;chrome-extension://noojglkidnpfjbinc=
gijbaiedldjfbhh/buffer-hover-button.svg&quot;); background-size: 67px 24px;=
 cursor: pointer; opacity: 0.9; display: block; position: relative; z-index=
: 8675309;"></span><div id=3D"buffer-extension-button-menu" style=3D"positi=
on: relative; z-index: 8675308; width: 140px; height: 122px; display: none;=
 bottom: 122px; right: 75px;"><div style=3D"font-size: 14px; width: 140px; =
display: block; cursor: pointer; padding: 0px 4px; color: rgb(61, 61, 61); =
line-height: 28px; background-color: rgba(255, 255, 255, 0.8); border-top-l=
eft-radius: 4px; border-top-right-radius: 4px; height: 4px;"></div><div id=
=3D"buffer-extension-create" class=3D"buffer-extension-hover-button" style=
=3D"font-size: 14px; width: 140px; height: 28px; display: block; cursor: po=
inter; padding: 0px 4px; color: rgb(61, 61, 61); line-height: 28px;"><span>=
Create Post</span></div><div id=3D"buffer-extension-save" class=3D"buffer-e=
xtension-hover-button" style=3D"font-size: 14px; width: 140px; height: 28px=
; display: block; cursor: pointer; padding: 0px 4px; color: rgb(61, 61, 61)=
; line-height: 28px;"><span>Save For Later</span></div><div class=3D"buffer=
-extension-hover-button" id=3D"buffer-extension-pablo" style=3D"font-size: =
14px; width: 140px; height: 28px; display: block; cursor: pointer; padding:=
 0px 4px; color: rgb(61, 61, 61); line-height: 28px;"><span>Open With Pablo=
</span></div><div style=3D"font-size: 14px; width: 140px; display: block; c=
ursor: pointer; padding: 0px 4px; color: rgb(61, 61, 61); line-height: 28px=
; background-color: rgba(255, 255, 255, 0.8); border-bottom-right-radius: 4=
px; border-bottom-left-radius: 4px; height: 4px;"></div></div></div></div><=
/body></html>
------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-0963ee1c-62df-448e-801d-29271a4cd7c9@mhtml.blink

@charset "utf-8";

#htmlToothbrush #bodyToothbrush .parentToothbrush .bilibili-player-video { =
margin: 0px !important; }

#htmlToothbrush, #bodyToothbrush { overflow: hidden !important; zoom: 100% =
!important; }

#htmlToothbrush #bodyToothbrush .parentToothbrush { overflow: visible !impo=
rtant; z-index: auto !important; transform: none !important; transform-styl=
e: flat !important; transition: none 0s ease 0s !important; contain: none !=
important; }

#htmlToothbrush #bodyToothbrush .absoluteToothbrush { position: absolute !i=
mportant; }

#htmlToothbrush #bodyToothbrush .playerToothbrush { position: fixed !import=
ant; top: 0px !important; left: 0px !important; width: 100vw !important; he=
ight: 100vh !important; max-width: none !important; max-height: none !impor=
tant; min-width: 0px !important; min-height: 0px !important; margin: 0px !i=
mportant; padding: 0px !important; z-index: 2147483646 !important; border: =
none !important; background-color: rgb(0, 0, 0) !important; transform: none=
 !important; }

#htmlToothbrush #bodyToothbrush .parentToothbrush video { object-fit: conta=
in !important; }

#htmlToothbrush #bodyToothbrush .parentToothbrush .videoToothbrush { width:=
 100vw !important; height: 100vh !important; }

#playerControlBtn { text-shadow: none; visibility: hidden; opacity: 0; disp=
lay: none; transition: all 0.5s ease 0s; cursor: pointer; font: 12px / 20px=
 =E5=BE=AE=E8=BD=AF=E9=9B=85=E9=BB=91; margin: 0px; width: 64px; height: 20=
px; border: none; text-align: center; position: fixed; z-index: 2147483647;=
 background-color: rgb(39, 169, 216); color: rgb(255, 255, 255); }

#playerControlBtn:hover { visibility: visible; opacity: 1; background-color=
: rgb(39, 116, 216); }

#picinpicBtn { text-shadow: none; visibility: hidden; opacity: 0; display: =
none; transition: all 0.5s ease 0s; cursor: pointer; font: 12px / 20px =E5=
=BE=AE=E8=BD=AF=E9=9B=85=E9=BB=91; margin: 0px; width: 53px; height: 20px; =
border: none; text-align: center; position: fixed; z-index: 2147483647; bac=
kground-color: rgb(39, 169, 216); color: rgb(255, 255, 255); }

#picinpicBtn:hover { visibility: visible; opacity: 1; background-color: rgb=
(39, 116, 216); }

#leftFullStackButton { display: none; position: fixed; width: 1px; height: =
100vh; top: 0px; left: 0px; z-index: 2147483647; background: rgb(0, 0, 0); =
}

#rightFullStackButton { display: none; position: fixed; width: 1px; height:=
 100vh; top: 0px; right: 0px; z-index: 2147483647; background: rgb(0, 0, 0)=
; }
------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-9ed4eb94-d9a5-4a31-aa4a-cfcebc3a3f8b@mhtml.blink

@charset "utf-8";

.MathJax_Hover_Frame { border-radius: 0.25em; box-shadow: rgb(136, 51, 170)=
 0px 0px 15px; display: inline-block; position: absolute; border: 1px solid=
 rgb(170, 102, 221) !important; }

.MathJax_Menu_Button .MathJax_Hover_Arrow { position: absolute; cursor: poi=
nter; display: inline-block; border: 2px solid rgb(170, 170, 170); border-r=
adius: 4px; font-family: "Courier New", Courier; font-size: 9px; color: rgb=
(240, 240, 240); }

.MathJax_Menu_Button .MathJax_Hover_Arrow span { display: block; background=
-color: rgb(170, 170, 170); border: 1px solid; border-radius: 3px; line-hei=
ght: 0; padding: 4px; }

.MathJax_Hover_Arrow:hover { color: white !important; border: 2px solid rgb=
(204, 204, 204) !important; }

.MathJax_Hover_Arrow:hover span { background-color: rgb(204, 204, 204) !imp=
ortant; }
------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-bb52830e-c3c5-4472-b0aa-1a5aa556b82d@mhtml.blink

@charset "utf-8";

#MathJax_About { position: fixed; left: 50%; width: auto; text-align: cente=
r; border: 3px outset; padding: 1em 2em; background-color: rgb(221, 221, 22=
1); color: black; cursor: default; font-family: message-box; font-size: 120=
%; font-style: normal; text-indent: 0px; text-transform: none; line-height:=
 normal; letter-spacing: normal; word-spacing: normal; overflow-wrap: norma=
l; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; box=
-shadow: rgb(128, 128, 128) 0px 10px 20px; }

#MathJax_About.MathJax_MousePost { outline: none; }

.MathJax_Menu { position: absolute; background-color: white; color: black; =
width: auto; padding: 5px 0px; border: 1px solid rgb(204, 204, 204); margin=
: 0px; cursor: default; font-style: ; font-variant: normal; font-weight: ; =
font-stretch: ; font-size: ; font-family: ; font-optical-sizing: ; font-ker=
ning: ; font-feature-settings: ; font-variation-settings: ; text-align: lef=
t; text-indent: 0px; text-transform: none; line-height: normal; letter-spac=
ing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowr=
ap; float: none; z-index: 201; border-radius: 5px; box-shadow: rgb(128, 128=
, 128) 0px 10px 20px; }

.MathJax_MenuItem { padding: 1px 2em; background: transparent; }

.MathJax_MenuArrow { position: absolute; right: 0.5em; padding-top: 0.25em;=
 color: rgb(102, 102, 102); font-size: 0.75em; }

.MathJax_MenuActive .MathJax_MenuArrow { color: white; }

.MathJax_MenuArrow.RTL { left: 0.5em; right: auto; }

.MathJax_MenuCheck { position: absolute; left: 0.7em; }

.MathJax_MenuCheck.RTL { right: 0.7em; left: auto; }

.MathJax_MenuRadioCheck { position: absolute; left: 0.7em; }

.MathJax_MenuRadioCheck.RTL { right: 0.7em; left: auto; }

.MathJax_MenuLabel { padding: 1px 2em 3px 1.33em; font-style: italic; }

.MathJax_MenuRule { border-top: 1px solid rgb(221, 221, 221); margin: 4px 3=
px; }

.MathJax_MenuDisabled { color: graytext; }

.MathJax_MenuActive { background-color: rgb(96, 104, 114); color: white; }

.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus { background-color: r=
gb(232, 232, 232); }

.MathJax_ContextMenu:focus { outline: none; }

.MathJax_ContextMenu .MathJax_MenuItem:focus { outline: none; }

#MathJax_AboutClose { top: 0.2em; right: 0.2em; }

.MathJax_Menu .MathJax_MenuClose { top: -10px; left: -10px; }

.MathJax_MenuClose { position: absolute; cursor: pointer; display: inline-b=
lock; border: 2px solid rgb(170, 170, 170); border-radius: 18px; font-famil=
y: "Courier New", Courier; font-size: 24px; color: rgb(240, 240, 240); }

.MathJax_MenuClose span { display: block; background-color: rgb(170, 170, 1=
70); border: 1.5px solid; border-radius: 18px; line-height: 0; padding: 8px=
 0px 6px; }

.MathJax_MenuClose:hover { color: white !important; border: 2px solid rgb(2=
04, 204, 204) !important; }

.MathJax_MenuClose:hover span { background-color: rgb(204, 204, 204) !impor=
tant; }

.MathJax_MenuClose:hover:focus { outline: none; }
------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-87b9fe58-7b55-4849-a0a7-a68b34e15798@mhtml.blink

@charset "utf-8";

.MathJax_Preview .MJXf-math { color: inherit !important; }
------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-f406a906-7f1b-4db9-88ea-b9a5e5500a96@mhtml.blink

@charset "utf-8";

.MJX_Assistive_MathML { top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px)=
; user-select: none; position: absolute !important; padding: 1px 0px 0px !i=
mportant; border: 0px !important; height: 1px !important; width: 1px !impor=
tant; overflow: hidden !important; display: block !important; }

.MJX_Assistive_MathML.MJX_Assistive_MathML_Block { width: 100% !important; }
------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-efae5c0c-72ce-477b-b2b1-f6c357ed3f83@mhtml.blink

@charset "utf-8";

#MathJax_Zoom { position: absolute; background-color: rgb(240, 240, 240); o=
verflow: auto; display: block; z-index: 301; padding: 0.5em; border: 1px so=
lid black; margin: 0px; font-weight: normal; font-style: normal; text-align=
: left; text-indent: 0px; text-transform: none; line-height: normal; letter=
-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space:=
 nowrap; float: none; box-sizing: content-box; box-shadow: rgb(170, 170, 17=
0) 5px 5px 15px; }

#MathJax_ZoomOverlay { position: absolute; left: 0px; top: 0px; z-index: 30=
0; display: inline-block; width: 100%; height: 100%; border: 0px; padding: =
0px; margin: 0px; background-color: white; opacity: 0; }

#MathJax_ZoomFrame { position: relative; display: inline-block; height: 0px=
; width: 0px; }

#MathJax_ZoomEventTrap { position: absolute; left: 0px; top: 0px; z-index: =
302; display: inline-block; border: 0px; padding: 0px; margin: 0px; backgro=
und-color: white; opacity: 0; }
------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-6a04ac47-7b43-4134-b33f-12a195ba94da@mhtml.blink

@charset "utf-8";

.MathJax_Preview { color: rgb(136, 136, 136); }

#MathJax_Message { position: fixed; left: 1em; bottom: 1.5em; background-co=
lor: rgb(230, 230, 230); border: 1px solid rgb(149, 149, 149); margin: 0px;=
 padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto;=
 white-space: nowrap; }

#MathJax_MSIE_Frame { position: absolute; top: 0px; left: 0px; width: 0px; =
z-index: 101; border: 0px; margin: 0px; padding: 0px; }

.MathJax_Error { color: rgb(204, 0, 0); font-style: italic; }
------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-734fb081-4323-4942-b4eb-e88a6f00c2df@mhtml.blink

@charset "utf-8";

.MJXp-script { font-size: 0.8em; }

.MJXp-right { transform-origin: right center; }

.MJXp-bold { font-weight: bold; }

.MJXp-italic { font-style: italic; }

.MJXp-scr { font-family: MathJax_Script, "Times New Roman", Times, STIXGene=
ral, serif; }

.MJXp-frak { font-family: MathJax_Fraktur, "Times New Roman", Times, STIXGe=
neral, serif; }

.MJXp-sf { font-family: MathJax_SansSerif, "Times New Roman", Times, STIXGe=
neral, serif; }

.MJXp-cal { font-family: MathJax_Caligraphic, "Times New Roman", Times, STI=
XGeneral, serif; }

.MJXp-mono { font-family: MathJax_Typewriter, "Times New Roman", Times, STI=
XGeneral, serif; }

.MJXp-largeop { font-size: 150%; }

.MJXp-largeop.MJXp-int { vertical-align: -0.2em; }

.MJXp-math { display: inline-block; line-height: 1.2; text-indent: 0px; fon=
t-family: "Times New Roman", Times, STIXGeneral, serif; white-space: nowrap=
; border-collapse: collapse; }

.MJXp-display { display: block; text-align: center; margin: 1em 0px; }

.MJXp-math span { display: inline-block; }

.MJXp-box { text-align: center; display: block !important; }

.MJXp-box::after { content: " "; }

.MJXp-rule { margin-top: 0.1em; display: block !important; }

.MJXp-char { display: block !important; }

.MJXp-mo { margin: 0px 0.15em; }

.MJXp-mfrac { margin: 0px 0.125em; vertical-align: 0.25em; }

.MJXp-denom { width: 100%; display: inline-table !important; }

.MJXp-denom > * { display: table-row !important; }

.MJXp-surd { vertical-align: top; }

.MJXp-surd > * { display: block !important; }

.MJXp-script-box > * { height: 50%; display: table !important; }

.MJXp-script-box > * > * { vertical-align: top; display: table-cell !import=
ant; }

.MJXp-script-box > :last-child > * { vertical-align: bottom; }

.MJXp-script-box > * > * > * { display: block !important; }

.MJXp-mphantom { visibility: hidden; }

.MJXp-munderover { display: inline-table !important; }

.MJXp-over { text-align: center; display: inline-block !important; }

.MJXp-over > * { display: block !important; }

.MJXp-munderover > * { display: table-row !important; }

.MJXp-mtable { vertical-align: 0.25em; margin: 0px 0.125em; }

.MJXp-mtable > * { vertical-align: middle; display: inline-table !important=
; }

.MJXp-mtr { display: table-row !important; }

.MJXp-mtd { text-align: center; padding: 0.5em 0px 0px 0.5em; display: tabl=
e-cell !important; }

.MJXp-mtr > .MJXp-mtd:first-child { padding-left: 0px; }

.MJXp-mtr:first-child > .MJXp-mtd { padding-top: 0px; }

.MJXp-mlabeledtr { display: table-row !important; }

.MJXp-mlabeledtr > .MJXp-mtd:first-child { padding-left: 0px; }

.MJXp-mlabeledtr:first-child > .MJXp-mtd { padding-top: 0px; }

.MJXp-merror { background-color: rgb(255, 255, 136); color: rgb(204, 0, 0);=
 border: 1px solid rgb(204, 0, 0); padding: 1px 3px; font-style: normal; fo=
nt-size: 90%; }

.MJXp-scale0 { transform: scaleX(0); }

.MJXp-scale1 { transform: scaleX(0.1); }

.MJXp-scale2 { transform: scaleX(0.2); }

.MJXp-scale3 { transform: scaleX(0.3); }

.MJXp-scale4 { transform: scaleX(0.4); }

.MJXp-scale5 { transform: scaleX(0.5); }

.MJXp-scale6 { transform: scaleX(0.6); }

.MJXp-scale7 { transform: scaleX(0.7); }

.MJXp-scale8 { transform: scaleX(0.8); }

.MJXp-scale9 { transform: scaleX(0.9); }

.MathJax_PHTML .noError { font-size: 90%; text-align: left; color: black; p=
adding: 1px 3px; border: 1px solid; }
------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-ef02318d-c88d-43f0-a259-e253e2224043@mhtml.blink

@charset "utf-8";

.buffer-extension-hover-button { background-color: rgba(255, 255, 255, 0.8)=
; }

.buffer-extension-hover-button span { display: block; padding: 0px 4px; bor=
der-radius: 4px; }

.buffer-extension-hover-button:hover span { background-color: rgb(245, 245,=
 245); }
------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://course.ccs.neu.edu/cs5004/scribble.css

@charset "utf-8";

.maincolumn, .refpara, .refelem, .tocset, .stt, .hspace, .refparaleft, .ref=
elemleft { font-family: monospace; }

.main, .refcontent, .tocview, .tocsub, .sroman, i { font-family: serif; }

.version, .versionNoNav, .ssansserif { font-family: sans-serif; }

.ssansserif { font-size: 80%; font-weight: bold; }

.emph { font-style: italic; }

.emph .emph { font-style: normal; }

.emph .emph .emph { font-style: italic; }

.emph .emph .emph .emph { font-style: normal; }

.emph .emph .emph .emph .emph { font-style: italic; }

.emph .emph .emph .emph .emph .emph { font-style: normal; }

p, .SIntrapara { display: block; margin: 1em 0px; }

h2 { margin-top: 0px; }

h3, h4, h5, h6, h7, h8 { margin-top: 1.75em; margin-bottom: 0.5em; }

.SSubSubSubSection { font-weight: bold; font-size: 0.83em; }

table p { margin-top: 0px; margin-bottom: 0px; }

body { color: black; background-color: rgb(255, 255, 255); }

table td { padding-left: 0px; padding-right: 0px; }

.maincolumn { width: 43em; margin-right: -40em; margin-left: 15em; }

.main { text-align: left; }

.navsettop, .navsetbottom { background-color: rgb(240, 240, 224); padding: =
0.25em 0px; }

.navsettop { margin-bottom: 1.5em; border-bottom: 2px solid rgb(224, 224, 1=
92); }

.navsetbottom { margin-top: 2em; border-top: 2px solid rgb(224, 224, 192); =
}

.navleft { margin-left: 1ex; position: relative; float: left; white-space: =
nowrap; }

.navright { margin-right: 1ex; position: relative; float: right; white-spac=
e: nowrap; }

.nonavigation { color: rgb(224, 224, 224); }

.searchform { display: inline; margin: 0px; padding: 0px; }

.nosearchform { display: none; }

.searchbox { width: 16em; margin: 0px; padding: 0px; background-color: rgb(=
238, 238, 238); border: 1px solid rgb(221, 221, 221); text-align: center; v=
ertical-align: middle; }

#contextindicator { position: fixed; background-color: rgb(204, 102, 255); =
color: rgb(0, 0, 0); font-family: monospace; font-weight: bold; padding: 2p=
x 10px; display: none; right: 0px; bottom: 0px; }

.versionbox { position: relative; float: right; left: 2em; height: 0em; wid=
th: 13em; margin: 0em -13em 0em 0em; }

.version { font-size: small; }

.versionNoNav { font-size: xx-small; }

.version::before, .versionNoNav::before { content: "Version "; }

.refpara, .refelem { position: relative; float: right; left: 2em; height: 0=
em; width: 13em; margin: 0em -13em 0em 0em; }

.refpara, .refparaleft { top: -1em; }

.refcolumn { background-color: rgb(245, 245, 220); display: block; position=
: relative; width: 13em; font-size: 85%; border: 0.5em solid rgb(245, 245, =
220); margin: 0px; white-space: normal; }

.refcontent { margin: 0px; }

.refcontent p { margin-top: 0px; margin-bottom: 0px; }

.refparaleft, .refelemleft { position: relative; float: left; right: 2em; h=
eight: 0em; width: 13em; margin: 0em 0em 0em -13em; }

.refcolumnleft { background-color: rgb(245, 245, 220); display: block; posi=
tion: relative; width: 13em; font-size: 85%; border: 0.5em solid rgb(245, 2=
45, 220); margin: 0px; }

.toclink { text-decoration: none; color: blue; font-size: 85%; }

.toptoclink { text-decoration: none; color: blue; font-weight: bold; }

.tocset { position: relative; float: left; width: 12.5em; margin-right: 2em=
; }

.tocset td { vertical-align: text-top; }

.tocview { text-align: left; background-color: rgb(240, 240, 224); }

.tocsub { text-align: left; margin-top: 0.5em; background-color: rgb(240, 2=
40, 224); }

.tocviewlist, .tocsublist { margin-left: 0.2em; margin-right: 0.2em; paddin=
g-top: 0.2em; padding-bottom: 0.2em; }

.tocviewlist table { font-size: 82%; }

.tocviewlisttopspace { margin-bottom: 1em; }

.tocviewsublist, .tocviewsublistonly, .tocviewsublisttop, .tocviewsublistbo=
ttom { margin-left: 0.4em; border-left: 1px solid rgb(187, 187, 255); paddi=
ng-left: 0.8em; }

.tocviewsublist { margin-bottom: 1em; }

.tocviewsublist table, .tocviewsublistonly table, .tocviewsublisttop table,=
 .tocviewsublistbottom table { font-size: 75%; }

.tocviewtitle * { font-weight: bold; }

.tocviewlink { text-decoration: none; color: blue; }

.tocviewselflink { text-decoration: underline; color: blue; }

.tocviewtoggle { text-decoration: none; color: blue; font-size: 75%; }

.tocsublist td { padding-left: 1em; text-indent: -1em; }

.tocsublinknumber { font-size: 82%; }

.tocsublink { font-size: 82%; text-decoration: none; }

.tocsubseclink { font-size: 82%; text-decoration: none; }

.tocsubnonseclink { font-size: 82%; text-decoration: none; padding-left: 0.=
5em; }

.tocsubtitle { font-size: 82%; font-style: italic; margin: 0.2em; }

.indexlink { text-decoration: none; }

.nobreak { white-space: nowrap; }

pre { margin-left: 2em; }

blockquote { margin-left: 2em; }

ol { list-style-type: decimal; }

ol ol { list-style-type: lower-alpha; }

ol ol ol { list-style-type: lower-roman; }

ol ol ol ol { list-style-type: upper-alpha; }

.SCodeFlow { display: block; margin: 0em 1em; white-space: nowrap; }

.SVInsetFlow { display: block; margin: 0em; }

.SubFlow { display: block; margin: 0em; }

.boxed { width: 100%; background-color: rgb(232, 232, 255); }

.hspace { }

.slant { font-style: oblique; }

.badlink { text-decoration: underline; color: red; }

.plainlink { text-decoration: none; color: blue; }

.techoutside { text-decoration: underline; color: rgb(176, 176, 176); }

.techoutside:hover { text-decoration: underline; color: blue; }

.techinside { color: black; }

.techinside:hover { color: blue; }

.techoutside:hover > .techinside { color: inherit; }

.SCentered { text-align: center; }

.imageleft { float: left; margin-right: 0.3em; }

.Smaller { font-size: 82%; }

.Larger { font-size: 122%; }

.mywbr { display: inline-block; height: 0px; width: 0px; font-size: 1px; }

.compact li p { margin: 0em; padding: 0em; }

.noborder img { border: 0px; }

.SVerbatim { white-space: nowrap; }

.SAuthorListBox { position: relative; float: right; left: 2em; top: -2.5em;=
 height: 0em; width: 13em; margin: 0em -13em 0em 0em; }

.SAuthorList { font-size: 82%; }

.SAuthorList::before { content: "by "; }

.author { display: inline; white-space: nowrap; }

@media print {
  .tocset, .navsettop, .navsetbottom { display: none; }
  .maincolumn { width: auto; margin-right: 13em; margin-left: 0px; }
}
------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://course.ccs.neu.edu/cs5004/racket.css

@charset "utf-8";

.RktIn, .RktRdr, .RktPn, .RktMeta, .RktMod, .RktKw, .RktVar, .RktSym, .RktR=
es, .RktOut, .RktCmt, .RktVal, .RktBlk { font-family: monospace; white-spac=
e: inherit; }

.inheritedlbl { font-family: serif; }

.RBackgroundLabelInner { font-family: sans-serif; }

.inherited { width: 100%; margin-top: 0.5em; text-align: left; background-c=
olor: rgb(236, 245, 245); }

.inherited td { font-size: 82%; padding-left: 1em; text-indent: -0.8em; pad=
ding-right: 0.2em; }

.inheritedlbl { font-style: italic; }

.RktIn { color: rgb(204, 102, 51); background-color: rgb(238, 238, 238); }

.RktInBG { background-color: rgb(238, 238, 238); }

.RktRdr { }

.RktPn { color: rgb(132, 60, 36); }

.RktMeta { color: black; }

.RktMod { color: black; }

.RktOpt { color: black; }

.RktKw { color: black; }

.RktErr { color: red; font-style: italic; }

.RktVar { color: rgb(38, 38, 128); font-style: italic; }

.RktSym { color: rgb(38, 38, 128); }

.RktSymDef { }

.RktValLink { text-decoration: none; color: blue; }

.RktValDef { }

.RktModLink { text-decoration: none; color: blue; }

.RktStxLink { text-decoration: none; color: black; }

.RktStxDef { }

.RktRes { color: rgb(0, 0, 175); }

.RktOut { color: rgb(150, 0, 150); }

.RktCmt { color: rgb(194, 116, 31); }

.RktVal { color: rgb(34, 139, 34); }

.together { width: 100%; }

.prototype, .argcontract, .RBoxed { white-space: nowrap; }

.prototype td { vertical-align: text-top; }

.RktBlk { white-space: inherit; text-align: left; }

.RktBlk tr { white-space: inherit; }

.RktBlk td { vertical-align: baseline; white-space: inherit; }

.argcontract td { vertical-align: text-top; }

.highlighted { background-color: rgb(221, 221, 255); }

.defmodule { width: 100%; background-color: rgb(245, 245, 220); }

.specgrammar { float: right; }

.RBibliography td { vertical-align: text-top; }

.leftindent { margin-left: 1em; margin-right: 0em; }

.insetpara { margin-left: 1em; margin-right: 1em; }

.Rfilebox { }

.Rfiletitle { text-align: right; margin: 0em; }

.Rfilename { border-top: 1px solid rgb(108, 133, 133); border-right: 1px so=
lid rgb(108, 133, 133); padding-left: 0.5em; padding-right: 0.5em; backgrou=
nd-color: rgb(236, 245, 245); }

.Rfilecontent { margin: 0em; }

.RpackageSpec { padding-right: 0.5em; }

.RBackgroundLabel { float: right; width: 0px; height: 0px; }

.RBackgroundLabelInner { position: relative; width: 25em; left: -25.5em; to=
p: 0px; text-align: right; color: white; z-index: 0; font-weight: bold; }

.RForeground { position: relative; left: 0px; top: 0px; z-index: 1; }

.SHistory { font-size: 82%; }
------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://course.ccs.neu.edu/cs5004/manual-style.css

@charset "utf-8";

@import url("manual-fonts.css");

* { margin: 0px; padding: 0px; }

@media all {
  html { font-size: 15px; }
}

@media (max-width: 940px) {
  html { font-size: 14px; }
}

@media (max-width: 850px) {
  html { font-size: 13px; }
}

@media (max-width: 830px) {
  html { font-size: 12px; }
}

@media (max-width: 740px) {
  html { font-size: 11px; }
}

.maincolumn, .refpara, .refelem, .tocset, .stt, .hspace, .refparaleft, .ref=
elemleft { font-family: Fira-Mono, monospace; white-space: inherit; font-si=
ze: 1rem; }

h2[x-source-module=3D"(lib \"scribblings/main/start.scrbl\")"] ~ table a[hr=
ef=3D"guide/index.html"], h2[x-source-module=3D"(lib \"scribblings/main/sta=
rt.scrbl\")"] ~ table a[href=3D"reference/index.html"] { font-weight: bold;=
 }

h2 .stt { font-size: 2.3rem; font-weight: 400; }

.toptoclink .stt { font-size: inherit; }

.toclink .stt { font-size: 90%; }

.RpackageSpec .stt { font-weight: 300; font-family: Fira-Mono, monospace; f=
ont-size: 0.9rem; }

h3 .stt, h4 .stt, h5 .stt { color: rgb(51, 51, 51); font-size: 1.65rem; fon=
t-weight: 400; }

.main, .refcontent, .tocview, .tocsub, .sroman, i { font-family: Charter-Ra=
cket, serif; font-size: 1.18rem; }

.version, .versionNoNav, .ssansserif { font-family: Fira, sans-serif; }

.ssansserif { font-family: Fira, sans-serif; font-size: 0.9em; }

.tocset .ssansserif { font-size: 100%; }

p, .SIntrapara { display: block; margin: 0px 0px 1em; line-height: 1.4; }

.compact { padding: 0px 0px 1em; }

li { list-style-position: outside; margin-left: 1.2em; }

h1, h2, h3, h4, h5, h6, h7, h8 { font-family: Fira, sans-serif; font-weight=
: 300; font-size: 1.6rem; color: rgb(51, 51, 51); margin-top: inherit; marg=
in-bottom: 1rem; line-height: 1.25; }

h3, h4, h5, h6, h7, h8 { border-top: 1px solid black; }

h2 { font-family: Cooper-Hewitt; margin-top: 4rem; font-size: 2.3rem; font-=
weight: bold; line-height: 1.2; width: 90%; position: relative; top: 6px; }

h3, h4, h5, h6, h7, h8 { margin-top: 2em; padding-top: 0.1em; margin-bottom=
: 0.75em; }

body { color: black; background-color: white; }

.maincolumn { width: auto; margin: 4rem 2rem 10rem 17rem; max-width: 700px;=
 min-width: 370px; }

a { text-decoration: inherit; }

a, .toclink, .toptoclink, .tocviewlink, .tocviewselflink, .tocviewtoggle, .=
plainlink, .techinside, .techoutside:hover, .techinside:hover { color: rgb(=
0, 119, 170); }

a:hover { text-decoration: underline; }

.navsettop, .navsetbottom { left: 0px; width: 15rem; height: 6rem; font-fam=
ily: Fira, sans-serif; font-size: 0.9rem; border-bottom: 0px solid rgb(167,=
 176, 190); background-color: inherit; padding: 0px; }

.navsettop { position: absolute; top: 0px; left: 0px; margin-bottom: 0px; b=
order-bottom: 0px; }

.navsettop a, .navsetbottom a { color: black; }

.navsettop a:hover, .navsetbottom a:hover { background: rgb(232, 240, 252);=
 text-decoration: none; }

.navleft, .navright { position: static; float: none; margin: 0px; white-spa=
ce: normal; }

.navleft a { display: inline-block; }

.navright a { display: inline-block; text-align: center; }

.navleft a, .navright a, .navright span { display: inline-block; padding: 0=
.5rem; min-width: 1rem; }

.navright { height: 2rem; white-space: nowrap; }

.navsetbottom { display: none; }

.nonavigation { color: rgb(136, 136, 153); }

.searchform { display: block; margin: 0px; padding: 0px; border-bottom: 1px=
 solid rgb(238, 238, 238); height: 4rem; }

.nosearchform { margin: 0px; padding: 0px; height: 4rem; }

.searchbox { font-size: 0.9rem; width: 12rem; margin: 1rem; padding: 0.25re=
m 0.4rem; vertical-align: middle; background-color: white; font-family: Fir=
a-Mono, monospace; }

#search_box { font-family: Fira-Mono, monospace; font-size: 1rem; padding: =
0.25rem 0.3rem; }

.plt_global_only { display: none; }

.plt_local_only { display: block; }

.versionbox { position: absolute; float: none; top: 0.25rem; left: 17rem; z=
-index: 11000; height: 2em; font-size: 70%; font-weight: lighter; width: in=
herit; margin: 0px; }

.version, .versionNoNav { font-size: inherit; }

.version::before, .versionNoNav::before { content: "v."; }

.refpara, .refelem { position: static; float: none; height: auto; width: au=
to; margin: 0px; }

.refcolumn { position: static; display: block; width: auto; font-size: inhe=
rit; margin: 2rem; padding: 0.5em 1em 0.5em 0.75em; background: rgb(244, 24=
4, 235); border-width: 1px 1px 1px 0.4rem; border-style: solid; border-colo=
r: rgb(204, 204, 187); border-image: initial; }

@media (max-width: 1340px) {
  span.refcolumn { float: right; width: 50%; margin-left: 1rem; margin-bott=
om: 0.8rem; margin-top: 1.2rem; }
}

.refcontent, .refcontent p { line-height: 1.5; margin: 0px; }

.refcontent p + p { margin-top: 1em; }

.refcontent a { font-weight: 400; }

.refpara, .refparaleft { top: -1em; }

@media (max-width: 600px) {
  .refcolumn { margin-left: 0px; margin-right: 0px; }
}

@media (min-width: 1340px) {
  .refcolumn { margin: 0px -22.5rem 1rem 0px; float: right; clear: right; w=
idth: 18rem; }
}

.refcontent { font-family: Fira, sans-serif; font-size: 1rem; line-height: =
1.6; margin: 0px; }

.refparaleft, .refelemleft { position: relative; float: left; right: 2em; h=
eight: 0em; width: 13em; margin: 0em 0em 0em -13em; }

.refcolumnleft { background-color: rgb(244, 244, 235); display: block; posi=
tion: relative; width: 13em; font-size: 85%; border: 0.5em solid rgb(244, 2=
44, 235); margin: 0px; }

.tocset { position: absolute; float: none; left: 0px; top: 0rem; width: 14r=
em; padding: 7rem 0.5rem 0.5rem; background-color: rgb(167, 176, 190); marg=
in: 0px; }

.tocset td { vertical-align: text-top; padding-bottom: 0.4rem; padding-left=
: 0.2rem; line-height: 1.1; font-family: Fira, sans-serif; }

.tocset td a { color: black; font-weight: 400; }

.tocview { text-align: left; background-color: inherit; }

.tocview td, .tocsub td { line-height: 1.3; }

.tocview table, .tocsub table { width: 90%; }

.tocset td a.tocviewselflink { font-weight: lighter; font-size: 110%; color=
: white; }

.tocviewselflink { text-decoration: none; }

.tocsub { text-align: left; margin-top: 0.5em; background-color: inherit; }

.tocviewlist, .tocsublist { margin-left: 0.2em; margin-right: 0.2em; paddin=
g-top: 0.2em; padding-bottom: 0.2em; }

.tocviewlist table { font-size: 82%; }

.tocviewlisttopspace { margin-bottom: 1em; }

.tocviewsublist, .tocviewsublistonly, .tocviewsublisttop, .tocviewsublistbo=
ttom { margin-left: 0.4em; border-left: 1px solid rgb(153, 153, 170); paddi=
ng-left: 0.8em; }

.tocviewsublist { margin-bottom: 1em; }

.tocviewsublist table, .tocviewsublistonly table, .tocviewsublisttop table,=
 .tocviewsublistbottom table, table.tocsublist { font-size: 1rem; }

.tocviewsublist td, .tocviewsublistbottom td, .tocviewsublisttop td, .tocsu=
b td, .tocviewsublistonly td { font-size: 90%; }

.tocviewsublist td .stt, .tocviewsublistbottom td .stt, .tocviewsublisttop =
td .stt, .tocsub td .stt, .tocviewsublistonly td .stt { font-size: 95%; }

.tocviewtoggle { font-size: 75%; }

.tocsublist td { padding-left: 0.5rem; padding-top: 0.25rem; text-indent: 0=
px; }

.tocsublinknumber { font-size: 100%; }

.tocsublink { font-size: 82%; text-decoration: none; }

.tocsubseclink { font-size: 100%; text-decoration: none; }

.tocsubnonseclink { font-size: 82%; text-decoration: none; margin-left: 1re=
m; padding-left: 0px; display: inline-block; }

.tocsubtitle { display: block; font-size: 62%; font-family: Fira, sans-seri=
f; font-weight: bolder; font-style: normal; letter-spacing: 2px; text-trans=
form: uppercase; margin: 0.5em; }

.toptoclink { font-weight: bold; font-size: 110%; margin-bottom: 0.5rem; ma=
rgin-top: 1.5rem; display: inline-block; }

.toclink { font-size: inherit; }

.indexlink { text-decoration: none; }

pre { margin-left: 2em; }

blockquote { margin-left: 2em; margin-right: 2em; margin-bottom: 1em; }

.SCodeFlow { border-left: 1px dotted black; padding-left: 1em; padding-righ=
t: 1em; margin: 1em 2em 1em 0em; white-space: nowrap; line-height: 1.5; }

.SCodeFlow img { margin-top: 0.5em; margin-bottom: 0.5em; }

.SCodeFlow td { padding-bottom: 1px; }

.boxed { margin: 2em 0px 0px; padding: 0.3em 0.25em 0.4em; box-sizing: bord=
er-box; border-top: 1px solid rgb(153, 153, 187); background: linear-gradie=
nt(to left bottom, rgb(252, 252, 252) 0%, rgb(234, 241, 250) 100%); }

blockquote > blockquote.SVInsetFlow { margin-top: 0em; }

.leftindent .SVInsetFlow { margin-top: 1em; margin-bottom: 1em; }

.SVInsetFlow a, .SCodeFlow a { color: rgb(0, 119, 170); }

.SubFlow { display: block; margin: 0em; }

.boxed { width: 100%; background-color: inherit; }

.techoutside { text-decoration: none; }

.SAuthorListBox { position: static; float: none; font-family: Fira, sans-se=
rif; font-weight: 300; font-size: 110%; margin-top: 1rem; margin-bottom: 2r=
em; width: 30rem; height: auto; }

.author > a { font-weight: inherit; color: inherit; }

.SAuthorList { font-size: 82%; }

.SAuthorList::before { content: "by "; }

.author { display: inline; white-space: nowrap; }

@media (max-width: 720px) {
  @media (max-width: 720px) {
  @media all {
  html { font-size: 15px; }
}
  @media (max-width: 700px) {
  html { font-size: 14px; }
}
  @media (max-width: 630px) {
  html { font-size: 13px; }
}
  @media (max-width: 610px) {
  html { font-size: 12px; }
}
  @media (max-width: 550px) {
  html { font-size: 11px; }
}
  @media (max-width: 520px) {
  html { font-size: 10px; }
}
  .navsettop, .navsetbottom { display: block; position: absolute; width: 10=
0%; height: 4rem; border: 0px; background-color: rgb(167, 176, 190); }
  .searchform { display: inline; border: 0px; }
  .navright { position: absolute; right: 1.5rem; margin-top: 1rem; border: =
0px solid red; }
  .navsetbottom { display: block; margin-top: 8rem; }
  .tocset { display: none; }
  .tocset table, .tocset tbody, .tocset tr, .tocset td { display: inline; }
  .tocview { display: none; }
  .tocsub .tocsubtitle { display: none; }
  .versionbox { top: 4.5rem; left: 1rem; z-index: 11000; height: 2em; font-=
size: 70%; font-weight: lighter; }
  .maincolumn { margin-left: 1em; margin-top: 7rem; margin-bottom: 0rem; }
}
}

@media print {
  .tocset, .navsettop, .navsetbottom { display: none; }
  .maincolumn { width: auto; margin-right: 13em; margin-left: 0px; }
}
------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://course.ccs.neu.edu/cs5004/manual-fonts.css

@charset "utf-8";

@font-face { font-family: Miso; font-style: normal; font-weight: bold; font=
-stretch: normal; src: url("data:application/font-woff;charset=3Dutf-8;base=
64,d09GRgABAAAAAHdYABIAAAAA6+QAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABlAAA=
ABsAAAAcWKVOlUdERUYAAAGwAAAAMgAAADgCOwEYR1BPUwAAAeQAAAI9AAAD2oWehkVHU1VCAAA=
EJAAAACAAAAAgbJF0j09TLzIAAAREAAAATwAAAGBUxfv3Y21hcAAABJQAAAF6AAAByvcaQbFjdn=
QgAAAGEAAAABQAAAAUBFcDjmZwZ20AAAYkAAABsQAAAmUPtC+nZ2FzcAAAB9gAAAAMAAAADAADA=
AdnbHlmAAAH5AAAaEkAANdUo5qVqmhlYWQAAHAwAAAANQAAADb072YQaGhlYQAAcGgAAAAjAAAA=
JAasBCdobXR4AABwjAAAAf0AAAOQU8wbimxvY2EAAHKMAAABvgAAAcrEFY2qbWF4cAAAdEwAAAA=
gAAAAIAIBAj5uYW1lAAB0bAAAAPcAAAGwIvo+0HBvc3QAAHVkAAABtAAAApckNFmrcHJlcAAAdx=
gAAABAAAAAQF7Lu3l42mNgYGBkAIJjV/RmgugTL/r/Qul/AFaVCNwAeNpjYGRgYOADYgMGEGBiY=
GVgZGAHYg4gZGLgZKgFsusYGoDsRobHQDYLWBUDAD8RA1QAAHjabZMxaFNBHMa/u5fWNsVqJZOg=
CEbEQcWqpAlxizFKkdjSaGsKijgpoah0cnJ0cHASySAO6dqxPBxEguMbzbODSOaHkzj2+bvrM7Y=
ij+/u3b3v++67/92TkZTXCVVkHt9/1tGEcswoTWXpjOyDtadrmn708ElHBT8j3/JF45r2Y6PDGf=
sSyGtMB/hi6Yu6wvwLvdFRvdU7XdAnnjn1ecoyQcGvdlJNreu5XumDPuu7dkzBVExN6+al+Wh+2=
Dlbt03alr1H27Qd27Xvbd9+sz/tjnuCXJAPcppUKY1UTmNVQJX35fSXVkAbDNJQ28CoyCjn2zKo=
gGqaaEqH0teaAUXUNWYbzM7TL9Av0ffABtgCFnYCO6EKsxnX8e741RI4CVUopewTVEAVtHEepD1=
ybLrqwC3B202R+BST/6RIcHYJ3OoJqyfZ6qUs9Qz8TfibOob/cVBk3y5RjbkG+533yUJ2EJIupB=
4hOUL8hvhF+A11EJcuLl1chrgM/eq7LhEuEQ4R6jhTxV7lKtZD1UMVo4ozVYIqRhWjir2qDfvIH=
nYEO8qSOnbok97I0jbZxS3gUi/St3zyPqcZ6S4I9p2r9SP3ZrLxgJu6DYJR7VzNpkaVcmdbz77c=
hrcM2mDv+RrvP4EmRBNm9+HPSfzljcPow+jvY7TA2H+1dvRmfG53G0Nmr5GrhYvhbyjqlE7rjM7=
qnM5rVhd1WSX+mjJ/aVU1XVVdDV3XTS1oUUtqsYMVdrCqnja0pS9U4Otv7MiEyAAAAAABAAAACg=
AcAB4AAWxhdG4ACAAEAAAAAP//AAAAAAAAeNpjYGJ0YNrDwMrIwrSHqYuBgaEHQjPeZTBi+MWAB=
BoYGNYDKS4Y39/XMYhBkUFBUYlp4X91BiPmMoY7QGFGkBzjTaYJQEqBgQkAurkOAQB42mNgYGBm=
gGAZBkYGEDgC5DGC+SwMK4C0GoMCkMXGUMfwnzGYsYLpGNMdBS4FQQURBSkFOQUlBTUFfQUrhXi=
FNYpK//8D1SswLGAMgqpjUBBQEFaQUJCBqrOEqfv/+P+h/wX/ff7+//vqwfEHhx4cfLDvwd4Hux=
5sf7D+wbIHTQ/M7h+EuocIwMjGAFfMyAQkmNAVAL3IwsrGzsHJxc3Dy8cvICgkLCIqJi4hKSUtI=
ysnr6CopKyiqqauoamlraOrp29gaGRsYmpmbmFpZW1ja2fv4Ojk7OLq5u7h6eXt4+vnHxAYFBwS=
GhYeERkVHRMbF5+QyNDW3tk9eca8xYuWLFu6fOXqVWvWrl+3YePmrVu27di+Z/fefQxFKamZdyo=
WFmQ/Lsti6JjFUMzAkF4Odl1ODcOKXY3JeSB2bu3dpKbW6YcOX7l689a16zsZDh5heHT/AVCm8s=
Zthpae5t6u/gkT+6ZOY5gyZ+5shqPHCoFSVUAMAFWlgaEAAP8n//MB2QKQAqEAYABgAFoAVQBRe=
NpdUbtOW0EQ3Q0PA4HE2CA52hSzmZAC74U2SCCuLsLIdmM5QtqNXORiXMAHUCBRg/ZrBmgoU6RN=
g5ALJD6BT4iUmTWJojQ7O7NzzpkzS8qRqndpveepcxZI4W6DZpt+J6TaRYAH0vWNRkbawSMtNjN=
65bp9v4/BZjTlThpAec9bykNG006gFu25fzI/g+E+/8s8B4OWZpqeWmchPYTAfDNuafA1o1l3/U=
FfsTpcDQaGFNNU3PXHVMr/luZcbRm2NjOad3AhIj+YBmhqrY1A0586pHo+jmIJcvlsrA0mpqw/y=
URwYTJd1VQtM752cJ/sLDrYpEpz4AEOsFWegofjowmF9C2JMktDhIPYKjFCxCSHQk45d7I/KVA+=
koQxb5LSzrhhrYFx5DUwqM3THL7MZlPbW4cwfhFH8N0vxpIOPrKhNkaE2I5YCmACkZBRVb6hxnM=
viwG51P4zECVgefrtXycCrTs2ES9lbZ1jjBWCnt823/llxd2qXOdFobt3VTVU6ZTmQy9n3+MRT4=
+F4aCx4M3nfX+jQO0NixsNmgPBkN6N3v/RWnXEVd4LH9lvNbOxFgAAAAAAAAIABAAC//8AA3jaz=
L0LlBxXdSh6TnV3VX+qqquq/5/p7unu6Z7pnpme6Z5fj+YnaUaSJUuWsWRLsvFHFhBC4jiBGwTk=
Bnwxn4C4sROvPB4kYFYSFi/h5VV1j0mewg0TrhcoCeRyCQwQnFzIJQ8cjFES7kockPT2Pqequ3p=
mZOOb3LWu7KnPOdXdp/bZZ//P3kQgtRvPkQ8Jv0AkEiGHSYdSUt/0+UjJW6dmtGF6tjclEe/sU1=
eVPP66FRGfNSMNSxWftWK0bqkR3ehSr4+UE20yNR0vVmbmmvGoB48xPSoWK7O/MFUsThV/Mjuah=
f+jRbwTVqLZbPT6w3gkhAhkin6OTgmPkRBJkCXSCXtI3SStzZiPhLx1U2yyFvuWmsmGmdi2DBiJ=
oVkBGIUXRpOidRiA0YwPUfzZZToj4SD43exz7Nef5IMQHstGL+BvX4hG+ckZh/fG8/SzwvvIPrJ=
K3kk6UYCJGWrBD1pSuNWyhnzPWnSl2TQLDYssQcMINEzMNpudkUKw3l0bqQXq5nSTmmsNM75t5S=
rNpqXD2MaX4ZG4jo/EM/BIsWnqmqXCyCeX4JEAPEJm4JGAio8EfPDIQtPaz96IxloAULFOY/y1S=
s4ZQb2Pzjpn/rIt58w+I8Ra9MG5SCYTmctU0hvwNx9JpyPz/JiuZDbgj/U/vrFBfxLvfg/vfo8f=
7c98EJ/+ID/iZwglszeepq8T/oAcI39IzGBjM+8jMkzURmNzil1R89aGObpt3QJzdItmjcObtuB=
SLmzrlgQXLc0qheqWAJfzTes4rZtz6ctfeeufv57E6kHVrGjmyJZ1zPeCSbZIl4xUjk3CP9q7Mt=
fS1LplVDesRKbdNsd1M9s2JaMTzE+14b6lmwfapmCY+9vEygfhMVGB5g29k5hfxgemDHO8DaCNJ=
6KSKNkArVQrszPzc/NzrWYijv+1mvNzs5UGrcxWoNkGLLTH8ENiqVit4H+loiTGognaWBTaiSJg=
10peFHx6SBalSFAfEsWkkRQS/x56oyXo3TfkF3wG6w0pOVGM67E4bU0fvXU6KlcRD6vROd4rUlH=
PeqkWzQ/rr5k4dst0hD8waszKsijyB1I+GjYy+QjxkeSN7wqLwuPETzSSIsNkH5VJx4cYPNHaDP=
rIorfeWcSFlWxtDrPbTZVOLCpw4ndDUXY3xO6ouYQ4vJkR8c7MaFae1jcNfgfLToI7jd9pmiXDn=
YfdWct8Mtu/+a0JPpmzmjm3ZY3BZI7CZI6Ozc7xyXSu2GRm4rrRiSZbODt53Zxom4ZhRVLttqVJ=
MH8+Au2ybi62TY/Rod4KPEesoA+6PPAZU9VNqW1SwxTa1lBUN0yjbQ7rZrxtLhqWDk9PTZdxRQA=
lmIk352YqRTEq8Nu5phjlTSN8bmlvcgEdKMMH+osPnTjx0ImfHc1kRjMXTuDNqzN4Q/cbosd3/T=
v+iN8fCuI1TbLrH8JDxxfm7ae+zm7sz9/JH772SUMSfPxaWIdrQjykcOO79P+DOVwlt5H76EdIx=
wvzZ93re7aTgJmzbvE9S837G2Zw2zoDS0fH5XQcLs5o1kFYYjmgIw9w8Dc/8NX/ysEva+b+LetO=
AH9h6/Lnz331m7w5rJkrW9Zt0NzcgpuuEl6J1K3wih8+0FXk/ZH65c/f89W/hodD2K1it3mb1h2=
+rQnP3db0m3fCzZ0FfI5/aQi7i9jdncYjfmzV+dha72Pw9Wu7vv4OfK57ih1P90YCv3Aaf6ED31=
p4T+E9JVGHeZ1ud2A0eHVH2zzVNlfbZM2QFTVcGC5ON1dW1/bfdsep03dO7vpHf7zHGD4ePA746=
E3ci/iY080SYNu9XsArQMBb9G5QHz0MDG9qesSFK6sUSYVNQVo5isgUpnnaJyl4j8cY+1QJSIsH=
KMwMfLxoU5HIHH4Lu2QEiJ4p3RKNTNWXQp7SLcueZCQ6MlzxeGsbulZor8tGKCL6FFn3CVLlcFD=
QFM3ricpTvzYmi8qwIKR1yb80pKdLM4th6s3o0cDyPsOXqx0Oq3OT957wjtSrxZGYIUxUisMTY7=
ecVfOGj/rhO0UltPpKVfMIUTno0VbpfbNhLSRnhUxIU5TrD4mZ2sT60UhCEoeiMvBNivybPMb4d=
4N0AsirPYxXu6+pKTdM37ZFkNvBn8LYW8Rm1igvPMbZM/2RiylTMnrjg9QvfINUgKZRs9owtW2r=
JD7bKWnALElJAGY51LRG2be5oYuzwmZjvsnAH+V0G0F7LeTR+OttlIrF0oYc9XgAeJ7QviH4F4c=
rb0QBeN594cFnHrxwd9gTVCJeeOLomXNnzp49Q9g7e2/8NvmW8Hf9cUW3LQrjilIcV1SFcaWdcR=
nsp6Uiw5UZjiRs4gFhZjnCIMv5Vqm0LkcFNrjgvtzQUG5fkA0MZnW9RM0vvPYn7tIEezC33glDO=
XfnrfZoPeG7foKNq0BF+jaQYTbId2BchxqmtG2Wmghys9a0DnP6kP/hlcc4IYhqZn3L8ksvmPNb=
l7/hc5rjmrmxZRWhub3lhbsuiW/AUvZrXck/D6vXfjKEXTHssuIbfviybixaj9S9ZlHrlopt+AQ=
01bCp/wnoWsAuq9j24xcu4BeSNZVI/mgsXizV6vML7Y2dazfIOnd04VpFJLJZuItww0Kqujh63h=
GQ+mtREnE1utj5dZB1VmTZJxoBoMzayooG6ypgiKIcWgG5ZxnY8s4unyzTtxxGYelwSaKM68Mj5=
TL/FD5UOoxyE/TCxwZ7dR+VGH6Ti/QivUIy5BXEVGGJtKyI71mTNDtqBMVBNRiodyJMMowkA7CM=
sg1T3jajTSZJpZsdScY+yQOPyRJeynqgbg1x6XFQdhyQFekRXGJHYMX1LuhJ9x2/wDEO3/gI+RB=
5JYxxiZhGY9Nvr2gYSnLb9DU3FZGkQISQ2QloPBPthAYbheU3gHL6gFwm5paRRMIQuGA+MF/eQj=
pSiGSGM8GA36/7vV5JpD6vXED4TeWmQ16PZAQCAb/OYHYVYHaS6QsmaVg+kMN9yBzlhk1X5vmr4=
uuXzuB7XGUHTmHYOqmA/vMBcj/oP7OkI1FOp0DRcV9T098w6famj2tC/IQqB/zCHNN0AK5MpVGZ=
loPfW73xn+mbhP8XZLAVWH/phpXhS26p8nfDfG1FNDO6ZUnAe0WQiEDWi3KJyLmysdqWNT1uMEW=
4PHI24vd5rwI8gv5AJOD1wGUw6Bee4i3Xfgrb+LXwBFwz3Wb0xnP0ItBoBWZxkXQIShYxkCwklC=
xUBF4WtT5Hr0qCQBECMg0zaCVhAi0JZDAksSA06TMwCKbfeYoinIBTzUFj5QuHzp8/tPHggxu5W=
i03VK9Hzx+ip7Dt+scPnRfWa7nrH8ceeipX4zR0DcaUFH6FxEiJdDQYETXjDTOybclASCOI1yTi=
BWROcF4BwAY2y1awrVzqkvgr6mhWvRjWg8EcTG1KpJ9Rs6PQ4AsNX/skTjr9QkrCt71xlf40yFa=
z5BLpDOHbx+Htg/j24/j2cw2zsm1p8PappjXP52zhg39Txjkz45OqaWxZJZiz8hbSvEjcAFklis=
cOHLl4oqJUEmmTTSMSLZU54XoKruP2DZ9ZaxyFXa0y00a5NLJD7wAhQRAlW+cr2pPOeQUKCZxWr=
QPLF0sHEvFadTkiRdbnqsrj+KrfSIcl31/4PYGUrgdDaT0YkUSZ/ksIT6F9ETFWOJhKjo488qpb=
MgCrREgJyfQxTQ+FhpSAR0rDt/J5GQI59F7AlRPk1aTTRlgdB1gdb+OEHN8AQjPm4dizKUvtMaV=
uyQjB2xB/zHDTmgEgTjY7nhmkRh6gX9ZJwKIZD5CBaZCkZIldmDG9kxoqMSjMr1AQAiqMQAEy4b=
X7fd2kPJGjQDukXQTErbj9SSJXyyFA4JQIBlUlLnMYINyys4VCPL6w0WptLCQS+fxstqewheS4G=
g6ckCqppVwNIFTLjSarokcMxPCD/CuaMUVU726PHp6ePrzUvluVlHjT1tjga2IBEeCXArz+FcC1=
Gvkc6VQBfp0QCkIkWg0pdTPbsghQ+GKzEyUIoWgKyXq9YY5tm7GmVQboZZqd8hj2lQuBejdcHvP=
XGbmXGlYYloYUZiQfl8a4TV2uPfd+xFSvKQGqiluW7nvBB2Tm8tKPnvs/GNsFRmxEdUBXOPbRFe=
mPbtj0Rzd69McKj8GaT1ZB/i3rVqrC1v580UWEuDwLqDpgcnBYzdGUGhAuiUYw5PcPC9PLwTsBn=
AWckgJcXIwqYclP/yAS8Alykaof+MPyPdh3D/TxC46Hc4CHbxQukYPkTaSTQTxsAB42MoiHjSpI=
WIsNS4OWRZQF1xYPQIvSsERExvWGKWybw000VXVUAT+BnNRUNWsGkDEOpG0DDVgCrMVqfQUF/Rn=
dHAf0XGwAeq60TU03VbZAkd7tczhpDwNvinw2Lrvx9+5yNvoFfK8nh7Lx2PzGxnwiXsjPuGwBck=
IJBwKJHENXOSH7w/6ARLXACEU8Hs1eCiLSPbR4ThXleNM2AHB8A+E/9ZCNpqroRVo/Dfj3CKzfO=
pknD9i0vgVwQnEcrVibIxMkAMt2BCG1wMj+lIgYaU5p1iyAZQzA04bz7JRudAMpMgLqjjmmm2GA=
z8gEwKfUNod0Kx3DxWuzBLdoNWAfUQFcyDAQaEJRhFOcLfGvbTy4sRCPFwqwAqlom0yUhKwGgsn=
ccBUYx+hSrbZUY2wEVpqoxAZXmkesJs9o5w9dOHSenqrlLiBzuZCDtx0BvPl5wJs8eSvpRNAGkm=
1Yflhzfm2T2haqAntt0Jk7OQ9iT06G1TTMV9PK1NW/YXQ/C4sptQXs8QUzvGWmtG46lYUlBEf3E=
lLDqTRbQpt4lXWLpgbXbgB9Bpg5qotz86VY9LWjKJYkwkF6CWmQJI4Ic1OJt9NnstGT0ayhaKJ4=
bSsakoRQ2eP/6y/dUYiincDh5QkyQlrkNfYMT8EMyzjDRZjhzBiRYYYzOMMzjDD7m9YETHKyaU5=
oVgteNNe0YtAABBunfALJs4jWM0tGc0sMrSjEyiAdMER7nuFd5tkL8enkVNjDBABOv8VYhJ1wkl=
Eq+MLGg63WgxuHzjeb5/9jfYgLBo8x6QBuYGaXkA6PopAweqjZPLQEU/klfGoUD9e/g8clPDAZJ=
g/z+jPw3jWygJwJJQarDG9dZrpgOQuciYkzdQAAaWoSAIAgANpsrhvwsg0NVTJztsmEm0V47wa8=
txXPwhuP6l1JKzBTttUkAI2xNhMk7fdFkeMma54teRSG7NdGWHwWBaFD52GpMx4jMR4jAYbLCVU=
1EoDgHAa1ZxgCo5AEq5txE2XH6j6judC7BnBgsit9BmTXMGkP2O7NQGNTsWVXjU17sGlb8E3Vub=
J0Jk851nrBPl9kMiz/nxvq6Tl2YrBnOgD8ZgZktVuIWWJWX/Y7ZdQCrHC22UQjIOoB/GQWmqZHY=
zgWa1gjAOtYEqAaaZse3cqVOEtp7sHIuZbQEmwJ++EBrcBARaHGxvXKHZqB31YY6IQtjTN9mFTp=
w0KKZMlHQR4fYuJlji/z0Rf+/Ms9LTi2ZXlhmQtbl78iOc26ZmrQLPixC9nq5TH5z/8W2WnX4xV=
Aqd3+gX3r84pAF6CxTxc60CaqbbIWEDxen6jp0ZhLn92j0ZH7QQLMU05Gi6Vig9pCL5oI6MPGsY=
sXjxkhJeoRdOWqrl9VdMETVUL0O/Hw6oULq+G4roaF0BV1Ur0SEsIql/3Jk6AvPcn0pTQxxYYVA=
mJoNKwEro5kw/ae2DyOCWHzrmuuKV4dPFCSdTtVuB0IYP02gHWO/CnAOt+wCjsBLWimdwt+9gUz=
7ga0HzRGrx+6VMuAvsjW5dHn/vzPmNwiaF2P4AVYfyVqt/i1rs8PLV2RHSU8duAZF+ihzSWS+9p=
A2MhaCEAu+Y1IPOETB2wLN+mw52N+ZlWY7Bn3mmhMiKPkw41MU/qtF/VTkVt1mBK03OCUMNuSEj=
qDM6IcCe89JzLQ8OMgI04BLfsw6czgGl7gGqjhcSQdg0k6wygfAg0rMX7VLZXm1Ppmky/qnGaNo=
YoGfGwsiU+PIR9b5HCf2P/FT/VcKtUt4AYvmGnQOdOZSpXLfM4Vk/lyJeD2rZn5BUYCGwtAGGVG=
+SN7yeHMpAZw6DncAEsdRcXAJli+v1bQgrC6meAtlY4b+tzksm+qFQOEmW7FqJCOJqX93CfY8Ge=
4kM3Mj4anOH2LJG5MtRLZk4huJw+2WrG0z1uIhq/byrZAGjf2CZ8X3kcOgabyO6STFwBuBuq0yB=
huBRQfaZorDWsOFZXDUp4rKuZkwzpk6yv7t60mQK65HyWA5iLIh03NCgI8jwLROqox15TStEbgb=
oQD2gNsA7WZo0EQHOOpDRQcj+ud2OQcXo0Y5jwTlA4BAG9FPSfQtuTDcA62TUO3YvE2czwhzPji=
QnMMFxWLPdgiT0GBGvlI1eamiTiKoDH+MWTDcwXgN1FonRVed/700pWl06eX5ouhUNQIF3RFzdf=
C6nwtkZpPFA4fefWrHjty+NUPoSnlofc+ff5BGn0iUSgk5oXa+fdchg9ePD1bDHu1cFiJGGou4A=
nppdLEtULi8qsPH3nsVZuvPnI4Y0TST7938z3nH7w+WZgsPEQYDvsBhz8G/HiUTNMF0kmjpCW2O=
hVUdozpdAWUnbEWzoipN6nZbJiFbZS8QYFGlxEaiZggApi63Hn+hxxTi5pZ2rKigKkTW5c/fYI3=
W9EJP4gtqqluWaPMLwh33fCEGqn7ujqeuH4zARfQMYYtlz/9iuefZ8S5jrfdcda4/Hu8EZ+fxOe=
7DTz6utN46sCNi3BMtjvwKVdDvY0i8JpM1HC0WBqtj09MNgbtlBp0gR4FnWOsd3ov/wKxjDQurg=
Riw4hbYp4BOlMtoZ16wOyzAnOfiFQaAmpc9KOCiJq9AqsKtATf74SCfhAuFBSfReFJb6qY8sqgJ=
hhGXBbH+HP4CZodTusj1SzFx/gHhHUtEtGuvy45fmL//hPjSZAtZ25cpY+C7BwFKj4K66oTwMWU=
hjlMNQD2z5pVpnNRcwztkFYaprPaNNMaY6rFpuUT0Xhp1WB+fTkdXXLEGk2xC+RtUg/3HbUq5pm=
p1NHNPTdb5aIT3NFHUWy8iCv/4saD99dyR47kakdQAjpCt5jqfuh8NiosRbMgOD2Xq12p5b5Ry5=
VztU3uM/gufS3Q1mWMJljC8cPAO6NLSB9HpwL1niJEgTygaFgCTFxFW+XQKCzrMOo1KPBO0pdQb=
ND4xT3F87se+6099by4ogaDqOcFAmHVMUsYPsE/NJMvxFX13CLXdXZqeajrXP94qiIJPWuEKMpy=
My7DOnTmLExSZJJ0/LZtz4w2rDC+ZLphhra5IKYhr2cRExluVOOCrTMhrQSCX8fJeAaFUjYDWxz=
8wiWA9aYD94/latfLTC6n7Pfvgd8fIvs5FWAmbIOLGcGG5cFB5Brm0DYLIAk2O5EhZtxLBDC8o7=
sWCQPTyvMBuZTt1uAZ/bXZ6BUc0vsfxeOj78cjNAj3MC15E/6uoDwSJQPjSqLFE6VkM84gYqoNS=
8IxpdjsJ2BMarOTQD2QJEIB4AWJCAwo7YjJAxaAnqHj4mh2cDQah4w9kH+OEo6LXFebJ+e5ndma=
AFzUPFx12WzOSxrwpaatiQe3rRp6ajRrik9TZ8qLo5qahfGgRj5VQ+NhQUJu40UXN7HK80BLhrO=
Ms3BxuvSSGrlttbV9AkzCQ9NtTx/vhTAogLCoj6OqMsPkvgvZ6JOIGjfXybmZ92GUCnEOngPcfA=
z0hlXS0XEO/C3mzjaF1mZa0RMKoy7M/AyiucoMsGimCQE9AUIiciM0iqf9qCInDgbfkhmfaJmLo=
bYP8THhfhwrNwD/iDkUhXU8fsfGi+fIE8xfOczxgqmNzEMJ6BCEXwz2PJRx51fgly/yICbny+Dr=
OZ4hHxyC78vBLLOYC2ZZj/lw5mI60Jss+/o8U5QITGqSGf6SgGooIsOvjOylW2IACv9pOjRRrTQ=
mR3SRIukHgUob1fCVn5g4kYjH+8bNYDBSp59zfKczQAf/TxjXGPlV0jHwPZE0dJII/VyLmjXmtV=
SZwdGqc048k/3Lr3JLYmZSNbNbXrR+qObo1uXPvOZbac6jFc2UeUwH2bIU2Q/T1VXUUWCmY3gkv=
09kRc1kR8d6fPEpaOnd24L1AOPzSAMTOug1p094BYnZEo3A2yt8iv9vOeLzqoruocFfmw6iI8QP=
MqZB9Zkr/en+yj9qHhoIRT3esPoXbprwGNHIuG03CdpeEGrqzvx3gswmFFRhggzuWu6jASMApQt=
soTMChOt+jSHE1T7Ofwn4zyQ5YtOdbKvjR6hHAeqNhundtsYZITTHNaYkGU0rBSiHi74wDss5FM=
YIFz+Fy3ABVzZHQwcovbCCHO15QlTu/0RVhWHqiCRlAehKtnRMyYbToqSj2N3waoKSyyuC5p1ki=
Fz10+zQ4tDiLU8OLWapN63bXpOffjBQ8GWzvkLgweu/2qOn36Ufh/cqkCdIR6ZsDXci+F5peK/h=
hhnetvzIZZqo0SXsmJQiR6zPPPCtCkcs/6SZmMQnYohZCc0SAZOYaxmUaGBR3XgsAbIYHAdUOgz=
/IE+Jkj8WT9ho1RGleB+hfAyVGtRjg2SGu34jzvIV6btEWCFhafUXswgfMR1mV7EI9frDb6fe6/=
+Ro07VL2Tffv1H9Of4KtfTLv8Z6tDLfFaRy3GDk8L1aMQe9CBpGouODPK4RCumYZSkKNlRkl4XR=
RG4A435z2j80vnzl86/p2/0tH1n9G9crjPC+P1zjN8bJEtmuB0MXZ9J4GwJm9sONUxj21JgMIkm=
rFcrC+OAqUEprc9kuSjGF16kJ4UBj72Iv4w+4Ks2678H+QPIXN9huHGFCVzE9iv+Kn0TwCUL0uI=
5TmWsAsDFYCGRBpC4TgpBVLFlxti2NQSjGtIQL1hYgo9Li8Uh5GwpAzkb0S0hhCugYNiS40hUcj=
OyBnWYHFrmPDYEKwBNenFyFHkRk56Co3Gd2+Gu1hhYnzgwvcEZG8pkG74+lB3PpPNeiOvvABgXS=
I38HOnEGYxbQCLQvAqU08riC9UZSUehZrhpRjRm5cJ3EpuOZ+Zp+dkPMluyDuRU24LZecH0bpGO=
x6sxDRzOek8DJyPwunKbWYHEHS/c53hMapZajrBMH52q3eX1+SMBfzCo+185xyQgmMKrtsD88am=
Tsb8LBAJBQ/J4/ZEX2CQixTp/6G213AJ6YynJwPu+Gtb2LeQD3BphHYFZPII+PHJkDWYRY3CtEr=
700YYZ2EYfgTmmWQIKJUAxhSl8UgAd2jrG3/yL039xG+cXkoYuqTq8+TjzeNfHHY83v2LvPhZg7=
24KOiN55pRhxfKIA6UjQAUzk8xPODc/MzvjCrTaU7wRpWgs6pjQbuKl+XbKF3tyiopLjTnNOF5y=
xWzmJSkZzdDoh5tUXJloG5Hbyn35XS/6pfQ9esXrzcV/a+qg5D8+XvQYq30RKCvRcLTg9WSjv9V=
al/y3Tpe9xn5Z8YlRpnTlQAKkzPbzMOBWhIDWHETM6gV+sOBr0KskdPPtGdkRc9vqbEpnS3GMCb=
0Cpv8VbIYvwdU1ZqwTNG6ig98eh9/+BVivKZRVmAXdY8cXmoEWUxUiTEYxCdBlmFuFqwqWiBZxj=
dlsHYe/TVVLPXp2CQ378Eu44FA4YWuKSSPXZ5jIaEsmOA4NxmHBOIbJJ0knz2QTh0EWG1aJo5Cj=
/6swGnN4y5IBhdStnrXAklWUPdi6GoKu7NblT9/2/AtMv2dxjEzj/8PvZ1kLCClhVQPGAu0uxgJ=
tLmfOWgBll7CWHRp2W2t3NzqxRy7MytPMgOAieRD5DJDKolzLqx47WmWUSYoGJOFJuViShTv6Cv=
ovX/8Hqv5yXzu/9slSicEqeuM54bdhbU7Tx0lnDPFluNURcD3K8VYLLSuOHeWP/+TqjzjAxllgF=
+OsW5dXGle/zgAm+jHmSjWDW1YVuka2Lv/xf7W7qiN+cwS6StzfpcGn5vmXWarmB57GQiDy0JXr=
fSpkisC2RT+AeWXh7wXHPAuECFp6zziA7z+jaV1dM/CZK3bLiNYtj5TwmYb9qarWrVRHYLrg+13=
TBd/tuoMnds1hB74IT/AL7omNgOQQCMIs6kYuXyqPVKqc+OwKE/0xH3QQwDX1KG3sgQINGuKymY=
chS1uUZFnz5VdX8v5qxY9n7vuLBiXhkr9S9edXVvN4viT4g8IvC1Io+sj1G5Q+MjLCz+gQZCgiX=
vsktFF6/Qb0CesYV2Yw+vJd+gHAl3nyI9KZw7U1jgeNh3+joom6JIvTXvnvD3B8ETUzvgV66Atm=
EUT9TzvNfs2c4ua48haX0aYiIElM+fnMx2HG7IdDPPyvDN3RMuuO7eou9bqbcNMsurvhy6d7Xw7=
d09hN1mCx8LjA8tR0c3CibtplT03Ctp55Btbo4PREBnisfaWLHt97H/F5RB11jkjggQdAuwDmih=
Hej7wX2jHcCtpf9zpsD4V5L01QgT+PisinP40B3qw/eP369Wf5J6BH/8pXdAz3tvnAO2GeyuQrt=
h6q4BQlYIpGmJJQBC5QRAPAWjEPXMBbxEuvBFygYgvVn//vx7hQ7QXxwrcFLOQFU9+63G457UVo=
B8qpR/zYp5qxrT7Ida1r6BGYBBsNQiDCdKORGEaJ6BHXioK2ARrp9elGJBobLvZn4xN20+AUMLV=
lAP7CKh2YAD36V6PZd/VhOry2NtyH9rtAR6HDVOnD9cDb3nbABdl/vP7fuJ0lCXrdTwBPzZG3c5=
8/s/VnG5YXmWrfF7XP8+1Ft28/iIEy8pbTzhhHSAb6dRN3fwc6mdc/GLK9/k8FQ7Lj9u/5/Xs+/=
zD1uKO5VqkxXyoms9GrqbDfe+7NH2MONbw++9Pqx6LCEVBHVEWWtq//Vda+/DIFBLH1ryfJPwvP=
kBhpsrhHtykrzvZsRUS2ZSrYxDgh+84On0sM2rFcaiwPtp5h5p37QVh4hqm21x7tyQw3i2n8z3/=
pxDRyi0DK2bIjKyl7y459tafK7xbK6L9zJFhDuurxBvAyYEhefsIG4QmGFOya2VyeJJ9jsFghpr=
+BKpipNdDwwmAR2gadetPLweHVmJEDhCyvthnibaGGE1bYt4AidGxZ6td3wEV4BjTBMgOM8AuOv=
3OcvoVeYbrPpwhTBDczPuKHLw83UQNz/MxTqS9f4WDyarhG0f0Jy/C/fJs3W4mYH7Re1YxsWX7o=
CmyhDhyN4cKcOvTlHzKsTIBWnMCFCUf3woxFdixMfwBWoaMgc+FldyN3QkgZEKxRz+JiDCzMpi0=
1M2rInA1wuazLH1ImlQ/JuqoLQkQdP358XI0Igk7frSYMZVPTNhUjoSqUhltnzrTCQMgIvfGFG/=
cL5RtbPEaXe5zxzxWj62MIOMxF1x8wKVHG45rtUabk1+nz9IzwJMzxHcQMNza9duxOvGFFaX0z0=
ENvhPKXp77wEIeyoQEJBFHnBVPaGghws696nNv25rpc7bMzH5MNSjXlghpiF/KFsPC4QkPnlIim=
2GemH4Zv/COdpn8J8usYeS3oveh79IEknUXSU/U9uzlczBpK3RrGd641zPy240Yc5YZNdNmOMpf=
tqAIEvY7uh2oWhOxc2xouwjnfNn06KAEB1IgNw1RwnhxvIc7QzIARyHbWx2yv4FeG5RAMOWIoqp=
qvqWomMzaVjlxANyHz/dHYbFnx6YqiltW83xPSD49f346kT188fc528AlkHt7xrPARZmdwYoaja=
PPwAqoHIwQDbIK2tcGzbUXh/QJN4PMsejjcszYkXIZa20Dt0Z2QoQuRdLqSnmfuy3kcmZKOCKfQ=
Vfnh00tbS6fpu69/sZDYShRYDO/zdApgPk5Okk5AsGN44wEEYtwABlnHEeZxRBNsRBmAcYaZ9TO=
VAC5LaxLBnK8DeCttM653hksjjq8H43z6nIlBGCHNnK/o4kGCyYnXo2NTU2PZrKrW82rWgGURDc=
nFohyKwqWRVfN1Vc2K+pGJKxNH9JDHX1ANPavqvnD5Sjns09UsgzjAtw7wPb4DvmmM4kL4ShEWw=
SX14Yt+ioTGiK+/OQhfHmQ221PJ7FgkIGefZJAFEMPks4lXGFg/jBC+9vFImr6bQZdOsvE8T4/T=
rzk4LQlc4+8UbGPXplop4JyrNk7DmMKI07hBFyWTMO5uDWtW1TZ+1RENeFyZFazCWQJ1PlKAiwx=
u2rMSaRfo++YoB9wJB94Gvk1rduYdtSnAz3TkgwBrIJh6RFWU4ZqiZpuAsQzg+LKAUfPlsFdTVa=
WiAKDpY/DW8wmAbujG92kK4D1MbiedHMpbQYA0stFNH8kFFeD5LVzEZqSJWqhZ2EZDTgYj4pudD=
DNoZdBlJTc7BQxCXSuAbo66KlKT3uYKzljZkAeU9AUEeen0Ep4SBWcTbpq+BQ77lk7DsZDYB8fr=
H8Eueh+3Q9VvVGBOvkyKHOt1wj2XnSHcT0yGUoD1DG9qMOySLQtw5K+ia1ZjMY31JgupH2YGhWF=
4BbYOXJgzGN42w4CPk7BMd2ASALeP+rrBUX/ehVjpyHWNo31eLXOs39fHMQo05fuMpmScyDVTb9=
kEJUV7BIXvRUhzgpLWkNwzhB8a9MkwEDsWcOa5jL6xYtMTBs95HajJGZuaXP8qA+xoogAgRthO3=
Pg++aDwJrYH/jaArYCR2jgk2sB4usmBvfCTfC88nLp+thcejatKg1lV0drrVwb2whvOXvi+WyP2=
lskC0NZgmg1RCBXw9trfs0E9hkcY042v36iS32RjSgHX60RxTH7CbczucaXZTjggCR0tgbOqhQK=
4F7c7qXlUZ6DMcJPQ9h6XHWvft+O8nY3ugxw9YYCn7RH+6EcMlPQH2HNdXjrNZB+cx4dgHqvoW8=
oJtm8JJzPpRV/KqNu3NMZZdOOPvvzADt+SBCpJZevyZ3/4TcUtSValQd9SJVLvVvHo+JZ42FLft=
+Tc7yFoglrn8i3FdGdLIPMsvYYZW0K4M+u1OT4x71MilOpKWH59MxSSRMMvUp++NfxL+Pocl67/=
wYdUKitRXXnElsu/Tz4BsEiSEdJJMH8igwF3L2OkaRq30yAlZHNgBxZw3HWbMF8/VMRIG0PzCiJ=
uEwuF9MVhIcJo9fcioaDO95VRDn9hGOhCCb0RbJ9wJN9qgVZgpltc0Crj3j/ck2hSbmzPwmVWs+=
JwqcGYRjjd6lvwWsNugx5bTfz6cRwUIOn4vjvxCpYVnuhbbEp1CcSGwcXVo1/2eodxpskE53Bmu=
IVeCkaoMgxASQxL1tDRhlQKXRWD6srOMaHIgJKMMxZ97zE49PP7jKehHLpu8zRYSj0Hzov4bTQM=
DaZiG5hXrL8DKu5sWAWy6A5n/+eLGEj1ZraIdDsg68oS3VdIXEHyeCVBbJmqyuDh8t0wxw1t9KD=
Cub3OfTc6993IPW7vikdwGGakF7TxxkraFvLmH2Jcr/A1Lk7ZTF/wAGxAnnJgU2W8xR6LI3+AqI=
1JPnZLHjos40zTNZYd/APvdvMLJMcDDALFDiDIfa7g4EkVxpLB/XiML6TYEDopNH2TVNTe+8jZQ=
ifNpLq02tvq2AfLoE/A4QmRC5Wi7qMiX0OKOm9jTSRo+HBRwYqTGFvAmGGQg2ogZ26Q3yIdBTEG=
pPjOsII/OYwcdwohtQ5t68zrsb6EgzvE3CK2kI9uEXTxRpodYZx5RuZgqPb2269/4M/u4dTOx+J=
hkdphdgSvrzrKVRXninlGRgJMdDIFHXQDc9ywhmroFxleZ/GF6BVBImfvLL6ZT4R5RPgu6L09Ip=
8yBBq5d8Y3Pjoly2sFUfDadDEY93nDSjjyyjnfRLUlKwexz97NGkx5ffqd4WRK3l9ZE8X2aEkIz=
fOP4UMRD5XlSDK8v3pAFPeNlUHZ7HfGPHSnTDZkrwYml4FMNoQyWYTLZIpbJsNYJpDCYkwmwxAL=
3AlbiN1UJhvYoRS3JTTAVi6TpZ3MKIUEnkDpQJmMicgfhosfcna49EPEjQbI7LcDPUniXnekJsj=
y2MpR+hFFQXTu8xQvMU79B0MI2ProCetbjrDCpHRYJXSUcZmvwuK4j129AakZ+gG+T++F3y6SL5=
GOX2DuEiacUxT9BKZXbqZFInnrZrZplW0nSvd7v865LgGuW9yyZIl7UY477WgKG9qyNOkF7lHZu=
vzpT3zv8R1ulKN2y8t0o7hNhKyp18JwOy0AZfVHGWWNvJidUKWAtnFB9BuSCIzQl5qZSfn0YEiU=
gEELF73JcF6mH4Y+3HftCxinPv7xU0bAh/uu4ZnrD6tGga3tBPBNAdb2LeQqh6GVqrVanUNIceZ=
a6Nx0/Jd//OzVN/ecT7dwsOlbl1cSTvOwBqKL1ZIwicblP/7m1Q86EFNlHeQVDY+XV8JXz7L2Ya=
1bHEY5psSOZTx24ElXeKnW7sAjroZS2ywDMBUiq5o+XK40W7cUSzvcFS/Syc08/kNsQ9sgfHkUy=
Qpaw1dwZbjud4G9wskLBphI/D7Fd8YjrP1BrxILgJLthynQkt7+vU8L4loPSsIFb1ILY5emBgIp=
Lz6K9/QjQIqDuE0+aJRL4bk7h38mVCqHI5Fw/w4/zqZQvP4w71lrDxdeF+bP8fmkr4A1MU8jwE0=
F5uFgPg9znHs6vBTtoZsVviwKTcf1sRD95uiA60Niro/PPuc0264P6UVcH/bDN3N9uLv3cH30uv=
+tXR+WNsdCzh0XCCZDuJkLhOck2ekCaaBH8sL9KBwHUQYOrG/Y8ii033/Bdpf7jMAtR3i73xClU=
OgTv+eQd5/27/89zKwtxf7eJ/qS9KOPAhvmsqEP5A+kZ1Xy/3Dty8wALSXckoYqhKM4LB/73hO9=
UILEllXmc/Xpzvee5M0BzfRvWTEJ95VYAb8fngMtLQHrLI5H5wtCZhmAXwboduA4QK8kfyAWTxS=
drdrccrq70XEtMS1qbpUOGLEz1Anfx6WDkGyi+DPkK76BQUIKhjTx1uMAu6CCQHpTRamOfQ2ofl=
x/A307ApDTrhsAG4d2SYD4j0xmh3iMxj/SZZCRcuQj9n7YKDBGb4PL+/mGRQBcUnMzyXE93HScH=
gs3/uZbzOmBXiJhy9IlvjvYbu/vsultE+5G2GbhwW010IZUCeC1KYBsHLHJuuDxou9n97YZO+EE=
17VcbpCM98CrfhEZ25WUIvkOLEy81chkjCtpRSwo0iOfQYCEZL/yyEN3wWWM55ghN36dEuEbZJS=
8hjC1m8c3p3CXRwMjjlh0kbaNjI/HoHd8bFugL8RSrnU0H1OT0fjBgtM1Ozg96gcO5NXabTOlQ4=
M5YlhkiNnEebC6S1oY2KHes/PEzGzWUNFyPXuMn1Xj2Cw/0/fXKpXaM6qRHc0em+VnQ70ye4yd8=
b2Wb5TJb3h+iuknLAIVZEgMz/b2IlANl4njLDONe34qG/1REn/B853oTtgUGrivF6VnRA7uGWGw=
Gd02vU0WfKU1O0OjCI0hgEZnlMVij5YCzG+EsMEoeAab1IjOoWFGGWz8HFI4u/NueLjhJNoRyNy=
6cDKbjSh7wUaJ/PNksTh5xQbNFRs0z/RAg/hOPkXfSY+QKXIM7f8YedUJMx9oOA4DL7Jt8MUGMz=
qaQUyHVcV3nW5YTTTzhjH3myLD6Ku66W2bRQO4aS+xBqdztFJyZRmY6SeMcUX1058Ne6k/v09Rx=
kZAhJGiwZDh8yqy5pUKi7I8UQZ9wueLBqDVp9AlGTtDUyFPNhCgHk2Dz/Lnp0JCxmli+lftxq1s=
TyXanzaI6Wvg7mQnA6O0jfsoS3w7JWZglD2Sv87UQr3BdDDUVWV90LrDc5LMxF04cyvbLlXhyZW=
eYbutftFJv0gfQ/w5CvhzShgnLfLTBHeQNng+v0pjM2V7XGaYtakOv13nkdkxFpmNiQpAGoNZED=
ERU55vJRZDAPdSE3WURgBdTDgFFb1LC8M4TDPFI7umpstxVwK+KjcDr9J+qr2oyBQ4xwgPlGR+j=
i5k1SQmEQjUpqdrAUwrkMSMH2qcylKhIMk0rqqvhYZUcJTly/PoxyauTBzTPfw2mMKEIWGvUrpS=
UrxhlcvVV+kl4XGyTi6SjujodgUMsJnxPbuZigJdqptrLUZtFkEP2cDoSszvdABg0G52DuBGvbU=
DHtw6cGAFUNM44EQ/WocAIgcwjHEd4LEuwkWYLSetbc2kADqVcbYLyHGG2ZwadxT38/W86N76nl=
4jUZY84fp39IyHigE9nuYZF5ano5GhzGSqH8bm1wNBSdLjPMWPgml/ErrXJ4fCon8k8S64fbR1m=
+ILRcb7m1DCklfwZXX0Cr+rkmH4GyHvpe8TfGSMTNNNYtKGNY2WlWl8d4ppLCtNc6LBnTQTLP2l=
AY0pvhdMZjuyO3KDRbZJzD2D+7PRaVCAjkKdaXPlALM52PFNE3d+8S96HD/JoymHti5/8XecZlU=
DTZpFQYB8YO9/DJkerSt4hoC9BbRuMJAEgeCLn7K7nNB1HvqAYpn9GyF8OIEP48dz+HHnd1icxD=
A+jB9nMe8d+FrkjYl2B34Jr3IYNuGSMczhdgd+Ca/GQODQBE8gqKiRaCI5lBsu9mPlXXvJXuoRp=
kE1ZMyQqMMSq8MSi8XZEisYVhqTdljTGEIulaF3Qu/K+UIIe+OGpWUQ6+aKVYmlQVyllZl5NPwD=
5ZtrJubRQhymcR50K7JNyJg0Md78l1OVDC6gTDSawWWXqexs8LNI2yfxLhJVs5U9PpBVoxFo+Xk=
WkgvrL3LjOcCjx8kBGiSdtd4WhWJrk4prSVh6sy2LwtLb19wM+1lDq8WCHyYAlQ42zAPbIPVYy7=
AWZ5qdZbb0lmu4FpfbgD1TsD6X2fr0wl2oaa3bsTN2kJMZ5pG5OR5B6IRE+cwJaB/fsrI5P/apm=
EGxFzqT1bpD2Zw7dCandfM5TFcI7S6ZCdpccuYnQCPO5QvjfREzbLdM7Np3vCPFa/Xm2nGYtnZu=
TsJZfZLtgVhnx8prMfSIh9G4QmxAuXrtJPbfeis7YnIW+EMX/BdvFnPzRfuBe3p5cxdAhnm/LcM=
MEWZRDbBcNl6eX2IgQW+PL7mvTzHuZCcAjLq4k/AGN6uC31q98V36AODKSXIv+ahtP0UfpZ0PEH=
NAzCHhPgptR+ew7egBtM7d1zCb22a8aZ2AMZ3QzHtQXEAL3XjDuoc1OW5Lc6lpnsZeHPb90HZPE=
9ZQbQrW0AndPAPShPFUoTQ2d/gkrqXTunXodugKAhsmB/xs6/TRkm5s+sembj/D0kT2BA5MTxjd=
I6ER97VVe4HNIIi8iCEPFDiWP7BBeT5DOp5n6ZsSjeq0oqwO95KpRCM+n6xoQvjhWeymU2NTMvb=
3Yp1D8EBICXuURclDtUN4oJeS5XhCVatDpapHWB0dFkILvYS0RY8QUiMR5WxtKaxVhwq1/bWiu1=
83BCGkRGOhb0qK1xtV5vmJ4cjrhRB9hPm1wmQfSvCm2NoMMGeWKTTtK5a0IryNMTrYHtIsSlnet=
cle1gri5F2zJR0aYU6qJ5ndXaiz00OsCXVMD0neeF74feF9ZJ4cJLdh7q8lm7/b9mVzrsFyiMyV=
EVfmpoBEHG1YB1COPNkw17ZtfEGDN27+7nhy+JwnAs/VWH6Lw9DRBky5Hc6HQSvqLh1YP8rQQEL=
23l4F5JjTnwoohw4fP4EYUzashTW2W68fW7BruneGI/SxoFQsa/xag15Pc86OCInG6X3pNGjf/q=
CjqUuxaiKp67VWq6bryUQ1xrOQ+EQjCPo6fcX5B9/7ngfPP/3eS5fYBvFXHT7yGP1tf+pSWhKMf=
vbDES3gDR2sX6ofDHkD2oiTBxF0vuL1vzv/4IPnafzpa5987E+PHD585E8fY3tCQCoJCpfICJkg=
d2N01uYEyyoMGj1mJ2H5hScxRmuzznMIg1CJAY0qi9jCNMINAGYdxch4nsmOZgzgOeFnVg1LQfU=
khBoaz8S0cyf9jhUWAQoK0Gl9ojKZMg5NHjw4mYl6vao/oEtiMKj5qBgpx2LZTEjTQsK7gkvVLx=
qpg/cczMR8FORE1Md9AM7hcOD6t+e0uIZ5aMgb6UX6J6CHL9MpgpuIcfcwU7QD34y597E3+D72z=
177ZoA35zVzGZon/Nilmq0t10fizLZhZyHpfySiYeB1LwuJHz6S++aiKwvJZ//smxfYrejFSGyn=
F4Sp7mRjwv3AdKMFDAoaXQwK2kS1vSN3CXwTy11igG4vstQY+WIJt7O3lvfMrPvjPObKbxJ3kJr=
bnFiGE47rPtd1bOeTVfoGMZoPJkNBMcmT6axL0hrfEJm83ulf73iKvl8OldvRmhELyVlVFET9La=
Gk/AYdrtSP9a6yOx8i/fycJ4lG5ogpNTaJjwQBY4mGRpdNid2xnYNcb+8E2H7dQH/nIO3npO9vt=
gU2t8WY2sls9KKTcNP+vX9tbktvj+blSRV0ulXyCdKZRKq3CuSu0GDhI4UhJl3HgIy12b5+lrW+=
uc2kqGUewYWpIAtNzAY50tuqhS8+h4sTKN5+jvNX3vmNBMdUTTPDW5YgvWB6tghI3GGNe7OcK+7=
NAl2oOzrZXmU0srCqG58goeH69OwyEschvVtrzi1xvhndYwtUqe/+lHC72kylVG3GexTR6JPDFv=
1+u4UWR2Z7DOwPpqNoczo5c/TJohqLqcFLT9sE8KpD/S7Qt62PnGEUDndhaD97DpO7ojvmqL4Ry=
0a/+/SeFI/FOwqfFMqe7IvEO9KbxDt6sr2pA9qSpI/QovBelsf9fmJ6Gpsyp50ay7u6aGObb3sz=
yGkn9zOBpMwIJzrReWJ0qd22qIrqtx8VARmjDyhLa+dDQ45JAMJkZxJ0WnSlNxeW3YnL2V6/qyx=
XbQjw6gFbU8Yt/umGqbcw7g59cuk8YlYaDTT5NF7mywEeD5LcRvM7bparNDuRJEtp68GcfM1Oku=
W6TQYCzHE1xvdEu1IQRV4ykW0/M9FAStuTtkxJ9spsy9YbVagAvKpB3sRqGXhtGE+hIALj3fSLb=
MGPN0GXYvg+5/+rzoAx1f8CEGjTq3FyPEhJcRnY8aebzE7aV9z8YR1ngW3HDAuDQeJzIADsnXQH=
FsRVOV+aMVIp4+0pxSddFD0eI+lFXg3czCuIiUZYzWfGgh76VzQyPZ8qp+JyUA7+p1AAEDvY52h=
jskdLT4QV7herUj8lgHf7yc8RDI7OwmyWG5tjHPkajc0VGzAH0Ae7KXLkW2t2CiKjJJg8R2vCRR=
UoH6ajFwu60fGMr7Bc/WUMbI1jahxrvwc4esMwZ9rmim4tMkkootJeRs+d78vD0HqmRnR27+DxG=
Cj491QUkpOVcLhWjsCaZ64nPeBXQf7UQgirsF+S/DkX0y88WgjTbwoBITcarS4FfYHwcCjkgw+J=
gjesUl8sGtIAdqqiqC4xYGEhtcbg9Rvu2GSlsSn0Y5MjsBz9A7HJtS84sckxDeOaQoAyQQyUD4Z=
idqC8feUwSTvhV6yfaQrLEWiyRqkhy+ELsiZQIySHhSdCVFH0iHzOPvNYCowxwTjOk6STEFg1FR=
7YJrEqJkBAmC99IN9C3s4LUoJzXmUSFmaYCMDsDaEkFlBwpogTjlPFv4G4Kmcbcwq92DElX8pke=
UAVSOP0a+nI9YcjaRCxPuqKo/oSxoXQ8Qjakm58iH5D+CWSYZEAuK3BVwAtPwO8SmWxlirajgI8=
CCDZ20QcpczsiGGoYZ5VaHDnpB0JsGO7pH2eZOGaQPsSsyLtIKlPZirpafg7+MoH1o+ODg0Jv5S=
uZK59CLuE8/xMXy/cf3D9gXcv1oUn7Hy5FXqUfID+Eeg2ky4rbs+Y699tzLWTSDvm2iPMREv/yE=
m3B9/5mzdeS8fJrSQOEgHaZD0+EsAvS7DaMiK8ZFxkcc8avGSSCwZ2VNIg1Zj9HOrrLKkg2/SsZ=
ZH6LR8dQWVABgISCQYN/psyDZA/BFoYg19luygC25sC5yv2XolemA+gJUags8x0H0nDOgmISllW=
lDOqFhDeHRq6/iVcdE9DqyKXlbNcB+R6wXsZj7yVSVNcGzAjDGaLdnUf+NU4Jy9xzQrDYrKVAoz=
JigfsSCzLG7ajs3bU/eHRWBXmh3jdPQdBkn91XAO5XXjvwclLKP1fmvyyFrqE0v6lkB0HBfL8oy=
DPD5F99DDB2idOHZMFjyOFgzxf3rLmQDifBeH8nxyZvapZxbIfulRrmlXTcH2EJ7uL890e/Y9I/=
WR3ug9Zx+X5F77xT4PJ7q6Uv/E0a5G0rihhS+8Zllq/7H6G7ZQso0+zWB7YG+m+G/TkwXe6vZ9M=
fpd0g3mUK9XpJq/NsqeY/1KPufx/Fdugwb3OLGsex00JmdzNuv+bGC/6k1ExBXKbFA2sSdJ6ICp=
JoVDqg6mbdH1MDlVXlPFySB5SUHJ/g5wMvQWFekVRhm7SRzy4T1I4KDwO+L5KzlKBdI4hjcy3Om=
dwL09p/tgZBXCwtVniWJppduZLSFjmWbzXuYZJtjfDHFPDLMTSXGhuDvGGlWZniLmqWIh2kYnbx=
VFYq3fvrJBzh2ae2rIOAyoc2rq879R3CLc+zoN0MbNl1YBV1LfMea07Nz8DcwxH18z9fq0+M3fo=
8B2nXE5rbJp3t9kZnXED97G2WWQ2rCHDaq4jZz4zD2w6ZEzybOTuZd3Lsu7bIXw5+Wvnmk4hBSc=
JtOemNXRe5aIPAaQXtIsEIgBXdyYUv/espPl1f8ajSbU4tL0CzY29wjpwbRfWof/coyheh8j8Bj=
w/ghcjkZDsDzyjS17o8/srkZ/QsVmnP3iRmjuIAwcYDmyQ+8gfks7tiAOFwra+meZVk+5luWHud=
822U2anP4dnNfPclnUc5vDWrZ6A6DPTMIfJLavqx/g+M611U+kkzCEc3XOYTFVHbz1+9pxrDpOp=
9GCbaw5vh1lL4yaKu9rmvXo3ZMRXmLp0k8l7ebLly5nBP/sx5dBHX8Zk/syPJ7LS373plMKcRmF=
O0Ua8n7yOvIOQyL9CrsS0OvHYv8UK+J4jnQpelE59xl7SaQ94KJ2GBZEm6S3/U+vkzS9PpE0xOf=
if/hUriemuN+ZB7kR/9gJ5PzHnG9wyP88s8/UAHtHgIDV69TXazA9oy3I6T2TaLelU7VXb2JXKV=
GVGBieVqRpOZ7gE7VyxhTKETrFAEMSEpK4bT3lESSjN2y5y24DssUOj5nrR3LB+YrhN8iYJ/d7J=
pLMTSz463YqCTDXVinnS0YQk5Y1gLwFX6YShzdH3MHnu2j9MHfVLB6Z7OUzXm61YTvAUDUyb2i8=
psGp4uK2a5dP0/CTb03qY3kdYnDHmjlpCfjR6eGoJ+NFqi6dhBEn4SMOc45mkxnmEP0DPumVnRs=
0FzWwDHwGAHdzavUtSwl2S/USbtYN+86CmoqyzwrL0wl135GAZU2RW8WTWtO5o7SBcQMcqtvQTb=
e7H2+4B1thLtAnPr+Pz3Q08+rqH8dSBG5drdL3dgU+5Gva3zRF0kqK0ES+P1BbaK/sPHFzf2C2T=
RO1HqqP40Cp76vDkzfI1WKNTgBjFCcbs9tz/SV9uOs5HlQgVNOWCJisRAS/CdPJlJOj0nFMF+Vw=
4qil4VqP6j555eSk7d+HNa/9X4M0uDVZCDfZ/W7xBdfol8MZ+5MfCG6uISdkizJA2gEF7aukvF4=
OeU0CZjyiydsG5oLmXg0H3yoKqaNHwOft8beRlYlAfh+4gVXISZOFXkM4BxKHJVucE4tDi2QMnA=
Idub1mLPox4YdLvkW1rBXBohZfUqAEO3b0Th45q5rEtawkw4rQLWZZO+83TgCxzW9ZJVhgS7rrz=
p+dwmtt4Mpe07uLSabiAjtuxpY8sd+Bt9xRr7CELPH8nPt+9C4++7lk8deDGhRt3tjvwKVfDHW1=
zHrP5js7NLx09dhLrAd61IwIDutqL2Hk76z27J3KsHOEVMWb0TiQt4G7tGjAfCZFl8QAgy8yqgy=
y9LRh2LbhJyqOq+8gz9/LR54+CWhgohxAI6R6PKisBMSeKWSmgyGHBY4QCVFDpgZeDT0cDgUMhw=
yOEZfjSgN8X9/lioj8QENSQ6oVv/Ffg1waZIHeS++hbSecI4tdMq3MK8WvtviOnAL/uallrgF+r=
rMSuF3ciNc0MiOJmpWUF7OqXJ7atdcC6dY2Vb5jqF73sY91Jzbx9yzoAqHW3C+sO3O037wasW+L=
1MCe34K67fPcS4ssqnswDWnftwN1wAR13YUsf687ibfcca+xhHTx/Dz7ffSUefd378NSBGxeS3d=
PuwKdcDWfb5jJi3eTS8oGTt9959tzd97xyB9ZB1+oadt7Feu/bE+vWT+hYx9Zc1LvecKaCzpMpg=
/lJ1zBh2uIGCD8FzPCQw/jNgG7FxjFnLG7GZrzPjnLcQ9ABnJMGROGXjZLn0vVgcDjtB2QTgobX=
q4QwgjIxEQwWsn5R8om8UfVSesfLwcx4RRJiotfjC3uoBN/hk0MjfmyhUq/lWu5lYqfXxs11Fpu=
wQPbTS6RTY9mCWyyWZLO4vzYH2Nlusdx/w02MXiAsegFT8HubzCg+tW1VQHgNV6b8dQxgwK4K37=
xnQLtkZP2O9Q+9OnYpjoM7cbepma0tqwwIuuzC3fKy31wG3M1tWQssORfcdfPLOcS6YTxhYHuxv=
AwX0NHGlj7u7sPb7hJr7OEuPL+Cz3dX8ejr7sdTB25cqLrS7sCnXA372mYecVfL5cvN1sK+peWV=
1R24C13DRexss979e+JuBV0f1bYZ0i0/1mb2GNbsHJyzukV8SDeLNUDcbJVZnO0Ny72Aj5edL32=
NSeP/wG2sZ14GvglfYCL/K9jxmvQ/iVc/T0K2ZPbWl5DMEC/CPpIGDIk2EL3SqCMNSGsirWO1RX=
xEYVtmNwm/Iz+uJPe/qcgm30xcA5x6KTGN4ZSB++8Dnn1LzK/ck9KsKNqJRcICbrj7mEWsiyyLI=
ar/kZeNUPsWx0YX22O19kXFH1CUgH/75RCx6Oi+faNj7XbBUBRDvkZeLjMFZfvGd4VTwiUySabJ=
5+38r0OMQ2KlnWke9o8Bk8R27TeRPJmRJtsN7m926BQL0VUCmBqCx+oCZmLbVClQd4JtF1/7t1/=
hGwSneK6sCksZ6MPMWLHUFMz84k/9LSvi3I3jbTeBR193Gk8duHHNcrxNnoonUiOVKWczYIzdTu=
8IDtmd832ZlsI77FXUCX/w6B56aTAV/IfKfh/1G066UyrIhb/Hrn9+vTDezw9/5nYjJLB0qPBkM=
CisoZP4+scxkx7L2f4a+nPCY+Q41g9gtQJYTpkTbG8n1ucrs9IgGCvROb7MqiIeBrDdhk3H0fCQ=
b7u2+fcM3O5QBgzk6hcQwHq1A/GcGBW/w43z5NyBjXmenj3Yr5cWlBOKEk0ODSUDgWxCDtqWCMw=
TXlzdz70+iEuaop1d6KVst0tR4dfsLi7QTzKuL0bi3E9kl67SnNy4V+k9oG8OkRZ5ix2DGRjAuo=
RddyyybQX4ZpxAhMXFKGyrbnctACiHmwUGMzflGPMbBd1ybIt0c6NjLW7bca7YQg9EgHkUmN98j=
woBvRRnpaq7Yk9P6H5iEF3sw1Nh2Vbjw7LM1Hg3tthZ/Z8H7dzR0vH8vwIWfT27pSG3H7O3hr8Y=
LKZfGhaePTXVvWFxO2ihQgSdzLY6Gt4DFrSJyqYeVc/Z5z4s7gBYrJNjdlaKDIsPcRWEYLsnpO1=
eWh22vT9DWRwIz6/DtkxkJFhIhSJbSOWd7zNQG8LDqmgzq3e+F2rL9atKw6EcpQq9x/2SvQISPw=
C15pwc1oKgQdEAV3uUgKRG8yHQoFSPR59xvTaDg/BGrlkd4nqSF9QipieFtEQA1SSm73BYrAMsM=
Ary4s0wA3P1lFsYZlFiu1NZYOSLYgrGA1bRPVHnsmSAue43S1yexMDJQBVANzbefmm0qDjBtPZ5=
b4Q4weSfT/M6TbtR4TOuunGcPnhvPEeeZvaoYcyrk8KI/jzzohQbZobVAHIy/PbXPk8SrUvoEX2=
xrG19U51rcbuz7PyByyDHL6Z4EJDwtNvUBudrx/qlAtzjDvFxY+WbjscZd4h53Z1x99epxuyoWR=
h3Bsat6ZksH7dz5Yy7X71i1sMNzzuW5AwfZdllB+IX7mIWwsfclh44Y86gv4Zx/x2suwppkhrpj=
OK4J9m4Ww2ztm1Nw7jRRDNdQxHJn89yS3hv4eyyS8C66dslDFeIR5Ktlhw3N/TXSt/c8A4O6c8O=
rJCeJSGk2ZaEa63BIhqeG38J7/C8rYNlMOM6wxpWXKAXK15iseIsDQjHom4ongGtKsxXQrhh611=
dypptDwKWsM6gEBiQMSQuBDAwIskUwMDyxTE+Tmq7/QKOnpFwTdibGXY/yVD8nI1MXJ94A18b/Q=
nC+fgBrP3HQT5LkDFyl12PB/dkwouUeD2soSamJk3YedRCTDbDzCHZZmeE7acbGQaRLDSClyENF=
r1dfszLs6oNpq10B8TxAj6uRT83+6xdyIeVUi/wcj4z0XQ6OjNQ1OdfMpX0t1ldn99PVzJ/6s6D=
/3HPBimQE+TbPFt5R8ADVqkzMy3zOJc4l5rmEbTUjLSw3hqrrqawFWOKLJoU957mefG0wWoQ4qS=
ZxJrFGkZKeDERkNf3gtPPEkz7RNyZHNe6iTh6T+HorrIoelldCK9PjCeSTl0IH0t2yVikCHoBFu=
5K6t2R6aUjaCfJG+YB0BGOo53k6DEWn2/VD8B52jBbbV5IwlVGoifB9SpJeHZ5T1/MlELf1S81o=
bkqUPyDbRrxUAntJYWM214CjX17SUTIuspT6GkvK1jRr1BRFf7etn/AR3fYSKDFtpGQXu1YoHFY=
B34aJRYP5QXgeS30mK0uiNtYkAQkfeaVI/1KbX2CPamZE1tWEQhfCQgfxn1zwudcMeincMPjVNv=
U9W7QU6gj9ImBCh+reeOu4cArOJR4QQzP3r6Zi7y+/KHzH7NLzM87Ppee+PYEr03EijpccEo6YH=
kHj+oS3fBM9oDHRTsLUsyp7KHa8ADBH8OhDR4ZHerDo88ICixF/biE8RqkWxh2qhw4V1xL9bAMn=
4CNLIrJDGGZ2X5yGDudnYdDgadnc/yUO9jFFzgkzh+y68j+rEtgu8BEOHcNkfPCuquISO0Jt+jG=
uEgfFncwWBwkt9q4oTu4kbQLa4s8bFDlafmIU0obZ3oRt7ZuBj216f18qq1cob3HZPfejZUMfkm=
jOA9p6E//VaeU8H9SPT0+tNvsfU5Ww7IbIVxVPmjWLbrtNHED4+rBY4PB45Y91wpWIM/Baaxpzi=
L1W2v1SmTsXkHH4IzrwVo71MYV8VTQk6vwsHcA1FiDOQxmoX9hHvpLWEXSzKGq81Jr5ce35M7P0=
YscazYe/JiNOFlGZXxSwNOzykq2/VaUJG+IbwxG++1N15bwTzvNsowI+QTJZaglbG8Ch+k6g2mJ=
1Mmv7AXVegM3f1Y5x88Bxx/vwXMERd8xzvD7sGX1IbBniPcMNTaHOfefQKBjGoNKvc3ij6u1NoY=
/dYNqzIOg13kxYnPYsPLF9ksRJmOHxLwbnDMuafnmAPvooNBMyRK5RC/QTdCEQhjvaXpam4aPpf=
GIM4mH7boPNzEeExuTTZRrBiMjZFbFWGKREc4GZx4wYSeGJ1u4X1lUfRGEt58HF6Z37YZ2ulnup=
5i7m+2RJtAdIaw7uqs70+uGL8/gl2O5TJ8oybiROcZDNFx5bG7W1cvjyHYf4yZllsWGbVC2dyfT=
O3E/8YEDuLsYjv3rv97Vwq+ZnPmPNz5Df1/4BGBek7TJ/yAdBbGvhXEqiH3juHoXWbrmKUCrKc2=
aR40KVu8+OyK08c1zHK5Zlv5JA3ovbnUlTYzUu2E88r3BmONpBI/e7hSenA+GutOsFXN1zuPj/Y=
4FvO3AR112s2m0jnbge/FmoY0ZdDH5D+4aHqlMTc8vDMIz6HRNL+wwj86jQbSkMASnNh9xQrndF=
GKV2pif4OREwkDa+YoHo2qlOP0wWioXvA9uHBjPBVjOH95w/tC+Fm/4VK72jnh1qP7OuGDyJ16t=
RZEDjc3rPCEQNoVjuCxY0ztruf/yP4rXs+zEZE5WowZ4cgI05zfbtbYUmyObRovpyP0sa2EMC4Y=
JauwUUGqaObZl5WCC8mhByY/VbAuKfcXgEvRwN1pY71KSrfLt8ebwzkJdcVem1JsIJ+lLWPSmtl=
SD4492BYVEnfI312cGyuJ45B3xHzve/402fQzD+wecCjmTuAEIc4DAIuyxl8ZOgYRvQUxKuAWRd=
JO2XEZ7V+z9ZR+zpiEZ9AhtJp3VbSK45+tXe2zZJZJI9BfOu97+k7sCGp7ol/9xv//9OyIXeu9+=
B0mR/eQo6WXW43MfaTFXW3/uNUxwC++OG07YTGZxh1OXlGb24UwmDGu01m7vTL43kPbW05cwXtQ=
9/6WNB+HVkMTD6fynmXzxop73m834eeHrPSFjbz87ymIcDusAB8zG/aHdkDBLDbPQY5LZppORO7=
iDSfahZCY0M489Gd6TaWzmOZPEnBsjPFG3GdQ7UqmCUQxjhlWswjmjWwrKqpphZYfhnNc7kaECP=
pEwzOiLQ1fgfLImcIY5CMQpxv8eZkzwptDyiH1WaddNfyesjTJZJDd4RdHOEC8nSs19LOmwIj7b=
UaKoOitB0KKjmLdzLYqGxaWdVVOik1gRBWS2F0B2dy2dBsv9NgJLZ9FdTEWBx+Uta7jkx4+owFD=
7GSFYfr+SOyNESeuWS8AOO9DuLk9UIu7Ye4XICpZSKZVHGlOLO6KUQkTeq6u3S2iwkoq4u9rK/E=
3Wa43ncsBKN5juZbAAyx1MfQAllOkRBqLzv9tRcyW7R12W9+0yCbtqFcZIHqsDs6qR/gbbLJhr8=
DqpOZbE08CY+kLDVJnx04rmmk20bTrliocdq4e7aKGdBDzSqxv9DOoHR7iF5ggKZEcE9fyhpUPn=
X+3UvMtGT1z/Ui23lKt9rpd39hHhN8k8+VlOac1yiyUXG2pgpV5WlbfKKvEAPUUhjBVwDbECriE=
xgKU7zZBmpjBhBNrZsEhvqohVpIcmYIlY0yFYVrNYzBPXVxF3uHaGp2dZuP1IP1EWj0SepNwR5O=
xkj+0wQdhZJOgjD6yjMSc/Pp7Xk2I4bOQ9NK2GFXUoXUmPlUql0ep+6kltPLH+ADSM55/Mj0cLW=
dGvDHu9KSPoV4vXZZYq+Qdj6xEjVT8R8ozlm6eQ7rC6FsKTjOqsYl6+pMB3eXIChJUtfEWSVOwc=
fWuM5rgqW4hNLPrZGWVpEkaxjPL+nXx5VsONDav+F8wa8KXazOwq50vOFd8mjOCab5ujurnM1KA=
mwLBKWGIyy4f1MTwYP9BRwqxiZNIwI207L18/E8DuKhmlql0fIzLIve2k4E+y1Ml7l85gOYzrYT=
k0WCBEOX3x9J6lNK5gJgr6VjmiK64CIrth/Lv/djDuE7BVDYBrzQKMZ14CxsttK4cJFf6N4bu3x=
+kl4QtiAO5wDOEOR3ahvgR8v4b7HrWIcs4+O/CdF97N4HuCLrxUdZbbXqw6y9roEVbxwTFcVo99=
/i3u2Ma1wAvmvq3LX32KN1tr+/zmPh7beCKAGA533YV9GLPYZsdFPF6u/ofPf5QxiTWtu7S2D9q=
X2XEFjx04unSAJYwY68CnXW2LqA0A86jNLexbWTt67ER7cWl5Z2bYm3fyYOjd5WaYjfzlF5uJDL=
rddllw0MeQ+MpwKBR1TXs2MzpQkeakgg44TfCAvCihJJUTJVheHkELBbRzoWyIlazxajcrWQNLL=
ezxyChMyaIIwlRcFOWAAHJZRDnk9/fw4s0ML+4if/zi6w61wI3W5p0+0gBZaRXlptv59STIWmde=
bE2ujR5jjME6a8tV1sYtbSRl3aUDt59CwTRndCYXT7Ot0bvXnIVLjq84a3URWMny0kFcg3fquH/=
rdqMzfscpXrTmx6d2ds0DW7x1mYaKuxIfzjftVbrndLGpigU1ry8UVL1iqhYMFNJ+v+T37dFmr9=
3dc8bX7v8FDwc1H3yqzM1F/p0N3GaE87ZPeBObt2nQ2n/3xVc0er2mWpvzPLnQeNNR6HG2mJVOb=
m22eYahgQXfnRytq/XNBk83tA/nbhagH2jNIfTbIBc355GlJ4FcdscnpqZZpNG/2SLaISq/1HIJ=
siRHP8cSHr3UyniYPWVnRfLa/OfjzNeG8PwU6RQF2+qNlSKteYDndHO8CPBE346nsRniYWnhBqY=
8YWFpANPGtjULYPPNNvysGhc+MatZCxRTAVijsBwWMM0oWRiC5bCgmQouIsqeY+ANoLFT9KBXbs=
FxxFnz4wDHSRCcmnButM2YbqWybZa9c6jNimhY1AsfkdCl52NxXcQ2yDlZLH58mNPowsmFhZNra=
lRVoxMAceBL0ZtBXHgDPrtwJz6rXrdeFOSE86Hn6b/QvySHyClyD+lyrDWTPJ/92WanjeLmdMs6=
iUlsm5tHDrUBg83TLSy9bOYBb1/ZMPdvW7cC3t6qWac4og7D3ekmqBvWnbymh3UvnG/dbzs4zVN=
6x98+2eYWzfgsoxtWEvW4rNEZq48zonOyDY+PY+cRvVsdq+9n3tBDmIs9gLirW3K87cbe4sDmOT=
vl60C1png/iM6VsQw+tEJbCV6BgD86O9+aZaW6v8rLOJVVRSnUwgDujFFvL9n1nZxaWtiRzWpGB=
osOjQ3nA0JIPzIxP18BiUCLheTiOcz2RXWn5JMRUQowHSFj1KkE1au4BY1GCAsTsZpR2drUOfY7=
mjdcfpxVqCCsxthPsRpjq+Ru0hEE2/ISFhCPwzLqKCCOLfFiZ1GN5TsFutIZmcUH0GuL8XWz6Lg=
lsw0umVnRJUBlQFkkJ2a23asay5mmu87YPqFp7zvcHQG2DKhb4nnB3pHBCkwFhnwMCEW/TGmcwz=
JdWMEMNnoQc9/o1E9rU1P0z7EOGScm+L5XegWykqHEkZF+sQc5kvDyymWAv6weGMipBTJKVshv2=
7UwMAsvC+1JAZWIjngVheWhpuYqS4KEpRnKzU4swLS6AgAkxrJ7sZozazt1gRkW8bXi5xFfY62Z=
FS6nOldMTo3hpn95jmUCs6aXuClCqSMip7zcfBXVrSzLKTvizp+2E0sRsoJdTGx+TwWAlhzkcFc=
aA7C+EhZ1sl8UkF8oKbb09yg8Rs+y8itfd5UN5NI/2QXXD9tVaRCu+V6ltZF8r9Laaq/SWrlXaS=
3NK639/7Vda4wk11W+Vf2q6upHVb+f0z3TO/2Ynume6Zqent6d2Z31rtc7tlc2kdeylyS2ghUkR=
MA/QHYMBCNhHgqC9R+EFNaQIKIgJFTV0+IpwgQhZJAiLASD+IEQf3jEoITHj8jIO5xz7q3q6tew=
IOdPTXVVT+s+z/3uud85X13I1RzN4v+r5PvchXY1l7crarPZwQMUuKljWoUdbNFkBVq0QPpsmfw=
F+mzz8myLIf9bc0050WxbdUD+Kw7s/99U3KT+ArzP2/NnqD3vSEM2Kjjtie4htLZjtm4UoD2Z4H=
FmuDAStKeUISoszGyUScL2LEN7PjML9mHPCoi+BYj+2AP2W8eKdQxg/+apPVTRVwSfTm4d3wQg/=
wRdb+N1AvZb+smTrWN4/hRdn8brCK4eYP/kEEDeCP7b8+z20LqFYL/V3xtevnnr+Oknbj/51CzY=
X/6S+lpCqkseetgu16mDmQ3WIWFFhhYzbIVUQAfzfTs1kWp10dMTp5LLH5qH/2/NdLgzp+5Ax7+=
uxWTZ0BQ5isD+nq6GdZ8X9//OVN97Z9i7NAy+QLhe9ukaIPtbAPCnUD9iHD4mPktjYpvt4+rrc0=
ZFUTjUx+H1oo9LzuEJ44453uaYsd+j0OQqiXfhKNFIaEbLwCip6lYHccyGm6MSBw0nulj7+GaXv=
9ntjvc5lMRAJa0DUFJubyOA3MXohtU1uNuvY5KkXp8W5XiRJ0kKG3YiTavvRbMOmrnvzLy6cyIp=
ziXbC2dcqbXzFWj7Zz0JM6Xbi+Yatjc7p4b+YDqhpnz+n+ffZL9FeY9qyG3Ko/Ibl6C51LVqFMu=
N6eIWcvuUi7h9drkG1fcPl3L8Qi49Ak9nv+RYYvTHyHjzGlcpSxSlD9HiOn4X+PtJSjb0KpfYYz=
IrQB3+GuoQhTo8w60v7QCpDkKxbX3WotZ0K3Zq56EOOYw7z+VrIu5c3E2UITxEjsURoq/wchazZ=
PW0iOPsiMQNRwoQSyv/+lxuJ/n8H6Ds/wy27hLrsc+xURfL3pQE169Nmxzk+k1bL647XFHxZPik=
WCmA7SnjdQRXj50pEo+qUCxXHGk97yfuMmrD0M1xxpxLY5w+N+nIjZDLuk1OnaWncSMfjWn3YrK=
i6T45pumxUigTh40+GYQHThfKkti138Kv8dkdyQR0jbb0D1tezUTf+d9Bm7wvcsty7iC2CoqAw9=
bFUkzcs+CMjHDuYJrU3k4kPa04yWUpaxMXd9TocZzPXOQOpgNib2Jrkoc7GNcF4kbu4Mz889JRn=
/JMt3tC+vFFz6yaEoAUenXyl9ghO2afEjbrOtisK2iznkAZMpIWfLJrHbqBkMdQyn1BMLl5aCTG=
6Xzxio5+hmPjxBdaD+DtfsJuXibdMFj1R+GQORQmBlBPveGFmtcwOmHiEgCc6uWVxPH0mGdb6g9=
EniU8HmzfPQjF9HBF0wIBQwtJ/lgyFtL9CrI/opF0MadFAv5EGF/EdA2Xgnerrg2SVyJpfMP/OR=
L2a/Rfuk9SYlmd3tB/q+nsd7/CpfW4qF616urqoa7oG2wLdls/yUY3sfP3TQDrtIPd7I517rwp9=
og9bfnNcZqeSNYTXevWmX0d2vK6TvvSPWjL2/D3Om6IWBjw5hXjRE83NrEd9xKjbGWVDPZmA216=
awM3W2nDCiMuHSUTed6yLpl2yrcyWOKJ8arouUqHcHuf+0NiPink8bWohtfXUlSCauiTtFV1hcT=
kKvel+DVtmXPlzUW6jRxPfZPwKfK3t9ibfD5RLg/Cpy0EUZ2utUoRjxjk2BY70bkjeEaUlDAYTW=
1puju7vgrNmKtQ5HTboDB73KvmoytDry7YTCBHyFkcoZESHh3Gz8yB9C/fJWnGr/AU0c/NQPIRF=
2qECy55Hq3G2XZ4g40qMq8+kZM506tDXGQRnbc+TUWYLB7cAOvQDnHS+XMyozp31A6bsP5DU2Ot=
7cw63EdzlUkLzDMAkyLjGVqZoCfr2fdN8LS4+RtvC8Dy6MHP8PfhfbcJvC3g1B/Xmm12IGXYqIn=
170H9KZ3sPtb/kCJf++ha4xHZmBn26uwCFNZhANgMFqCqBz6zqgJwKmYVT+2Yik0Dn07K1SIsTy=
t0reB1Ap+ZfrLKqvB8ja41vI7gOiWyYK0NR/DfnmeVoVWmg9awFosXy9UahqjOqagtfUl909+G/=
mh0FOybNvpkm8kt0TdTXu7ZCBTHFb5ksP6I1799b4ED/OWpnvtg4s6+Ne/s/urikez0I9rGIXuc=
/Twb7WA/XoF+HEh8eUEl1jpx7NFGUvYrP7+P90jZcujmekCqxS70MeY9vzqExWZtY3tAlvGGceJ=
Xi1W83U2caDvpPZ7iF4f1SvnScCoMfRQKRodDbyi6xzZmlnqplzXkUaHlcUQ7FjO7OWcx41PG4E=
5N8dpGMJbTDwLafy9sVL9oUwdzNDCzfFIW2tyOdUD0EXbRR6xHWXDBWlQxlbLwheKbqms5MAe4i=
m+i/E20i35VRCLI/q8CEjmRQwnCH1EEI6XyWg0/qGAuTrRYMidyHHkYivjXt6TVfo1W4FO6fnuq=
YV6ceIyrD/9iYRv4YGf1ivQ65XvCNhiwSWYnR5pLpRSPlOoJgJd0hkp8PCwDmkMot+6JgjrK1Jl=
JRvfeLxLtY5voHz/gJvn9KR7K7aeXzzvJk30sfP5nUJ5zzu2TsgI9mU6PbMJNnaDyZYLKA2jvgW=
5vC5VOQfAb3P77r3Gj1aRdS4mn923qJ4GmYPclSwkwP0W84vMWPvfji2185PwCMv0S+AK+MsCvT=
F7s48cR/J/HSu0PrcBwBD8qaH9JZPoFgolksdRsLWD6Oa/mmX5t7hLbNuw85tpNY9J8ZvtMeKy7=
kG9aA5Bv7+eZgFlO+0tyEuD23YOttZxqBGEmYZKylnr3oL2epQdanB68na2+GE3jBWFdromZdvn=
7x7MFGEK5Vtx5Er6VLQyq2c/8UkTaoz+E40hfldbcDnLf1mWeh2EFO7CNC06XgEcT+q6p25vQdw=
Xou+1Z4KHpVvjUTitIel0KPJoAPKzo0NoUoKNAqmfIj1zkGsxMIm6mdVyl+ARyCHbAp4UOM4dj8=
mUHc4hN6R9wTdcZpdeZ+m8jI6WM9W+ZowzW/xJXN7PyZ3QKsMrNxhbUvzcLOMSCq2Du0aX1X81D=
/ZWhvQXWA8fbzGLmsoV83j0tl651duK/ObeFfWYizM1Vwz+Y2cV++CvLFG4n9UfMcU0KcMSBWWJ=
ItaMr2BDXXMC1LXY+12cBR0S3ossBR+nUNlSa1gQ4SgQ4SgQ4Sv9PwFFaBDgiUSNRqtbKCwHH0p=
ccDF6jvpnqk0mUq3ezLfDFgt6hofrjjqstxrfe5GujnbdAGFO9BWNWoIxZ51qEg4x78x0Hy4JP9=
BtfDzfYj/LVEHOpNhxVcYkWw8BkMWxTcCISE3245IX4kpfV7SL0ag0e15Ythjjts7iNZYEkIjIV=
IYYWE2jZWUj2xOp3QeP8NC1wv8oXwOmGuPK8rNHzDn3n6wvrLXMNU5qvh+yMjWoyKc+OLqOKKcX=
3TcRBJiqmeVIp2wshO2fJLuH3//gP/02M5aJuFU7tOny7cWoXCwrmXyjkmzAgG3idiJvu6Sf9PU=
wSC9cpiiFuM/KFYr3R3J1J2Std9NIJXV24+5Cn5E9d9dOeV/4U2W3fS+FIEgxBbiRk47l6OVD7Y=
U4FTxuBO08HjXA4RLKxrzeijfpOsgB7FI/FgL8fvv0IGqmFuuMLaEgvyl8kzuEhG0UQBaAIXVri=
nTJS/eQaIr5h4IzY01qmR+IWOPYMl2+Y9dIM3UPPvOQw9t7mDp0BESboDJG07X0Ua/kFAk3S/Yd=
/TqCJ7yn5ePmsyDX0vljhuuYoxfiRGgZ/yCbCJhzzQe6J1s6ERwoPfQJc7qEzyY45GVkwVto8KG=
Hg1cct62jzMJnAxqldLinwvZNSsQ1DaAOvkyGk6yf7+gCGEFyn9HH1Yqnc2mh7YIi06CE/V9JgO=
qby6zg1pQAd4zPPKb2YnkkxQJbp6LojSTryuNDKfICgqm7th3AgcDnwO3e4GDjmOn192r/2PTQy=
uMZuKKSFF48fyk9+/q/ykXwf0Hyf/QRnXGPAbpcCdjnvWjNx/28ZvXGqyELOyeceuY3FmrTDnSG=
Y3KBEUoilOGrRlXJqm4JJdjZFCnNMd6SSSl+XYbKDOrIaWuhVjAt2j4jEcLMeuGKP7s1aIyjzyC=
QckUZ/9z1k2m/Vo7npNAcYy5+L1uMkuScCAzMoufrCx+Hy6gsoupqZxAimpM3UinNWKaelvyXmz=
SHy0DUcr3HTHkIzbPToJNhqmoiyMXrZRPmbI7OqtsfZjl+LukYQUz4coLgaPzPPBVG9D6N9MWNB=
EiYcGEm7fwC11/xDio+MyiQUYcdX4G/SGFXXauR1M/3oj8WQraxhr+ApijY0ONkmUG8IpV5qtgt=
YCs7JCfP4TaSnSzoSEO4eDNvzRIR2LFYyYVA9/AYNriAxDGB+N+eJBuKs8uE3ZvxJyF1/y3cTsM=
0m25VWptnrqDjSNse7fP+EaTr7Lpt9QmE/6URTSnvc43uoXnfc4RHvdXq8wen8exfT3L+zfHbV5=
bNPLMVvCxq710ikUFWvuwvdV+/AnaHD3QZAIrvBM1c8Crnd3eMK0yK1OEU9EZQ9tHZNURJIa9/g=
CXx5HguH0A4LylJC+x/RPvNjIkhPYq9J35I+R9j0P5gld62siem6Yri7Xe/aCpjlZJAp0AH1/xs=
cLYLFhlfGd9r/FYnqxlL/19KXbuKNRzjz/T3uz1p6rrsEW7oHt9DGclj6MfJV3WNWnpKjhLgnag=
WhoMzvozxRysaZ0+JkRfBYNZpHG7ECO5tRqbiGPqcQ7O4w5lNOjAJ+bejJxflIHqfB3tcezbMUL=
MDKc7EzKVz7iDS+PpLfOH+PfUu+5PyGv4vZaXiaTfc3mKtYtdqTLzmKVdJ/paRdV7OKfsefu7As=
ffEbWBahWz5TnzXpL9k78i+wEuqs+cltpOHEKpN4CguyPOqE9MQdbfpRkrEQItOP49NJhjErm1i=
WVqQHhWQ1VVgtqirYAsXnUwx/LCEz1HPZLvc0vz+UUBRVNRQpEPDnsDyr0tfZA9KjOWBWgrS3NO=
HGyp1ZgR5uSqAg4wgvWUS3ZVjS5C4dGUZlKFWCE70O0YVA/SAEjtwzoav+aiEFSJGKpRohvy8k1=
6WAP0LocXtlB8tlhKHIBtdnWT3/InvAPsHLpHbHxUmZ4mdWjtQT81xjBsvk04mMleZl8qehTCqW=
aTBflIEopvnqVHESWMJPzJRFEUXkWBv6TfoY9Bv6/44ZFkU1x+tUMOyudVHEfWTgIjMCC7bRw1A=
Za1fH0YFSUnke0ezj8TOMS2OuYJCPp0vdHp1/4ny7JvWhX4tJKF21pKq6oUAlvu39kKD38h71c5=
z6n9ctgUPD+P6Zz4rzPaorjAmo689SXV/AUWF1TDEwrEs95269R9X1jhLM1ciHB97h8fxqD+Pz8=
FVLR+I4BkPxql80YgYXvLsGfQUVL64WeS9BHf50/tHsAPNhRdVJp8485n0M4076Lhh3BcDFn2KY=
sipAoigaRaePM04LEBAOn02mKW6odKic3sU7dFJVe+Mmf9XUed7/LoJiZte2MMN2Fa2zOaPXMKl=
zOjvfAM73Hng7uUpj4K74O3kj6jY1jgvJvbnKO5NOhl3ab7B/lz7PVGaw50ndSeNqMHHSgiTNIh=
gIytnY4MIvBh/VPq4UkkRrYAimMrM1V5qPxYU0HwW1iUAwTl8Opt7sPvZYt3PjRo2Ui6TP3yAdo=
5/T8SPgyBXYp6yxl2kPmWXPsVGAMihkTFNoTtnhRK9HT10RqpxHhAotg8oTidb44DTgU5qDRy7U=
7JwdZATCcpz0PJfqu4ShvkzXlz0uek8+gwp7jf0JaaT+LpOsCrIuULEw6m+Pwmlkx4YZ7Ieqs7K=
pH40G6hI1U9WVKfVuYucfOojnQqXS0+VSpBfpjRLHGNrmPdKb+iq0Dcx8JqG02ThF7YPp3Ka1pz=
5KIamLhaBUV+FptoWmHz6KyFN7qY7Tcrkmvs7J5+9Lvwz78JfYfaFcmscznA4OmzwmxjrGVA0vB=
f5l3L/cOY7C6mvafUww2Bs/dkgPwiZKOFNq5pe7lnlmX7nR6yFn2/ZpMDNSJv5UqqG2rWd7sLFS=
cIOe0uGXTYobNo/gzaCHmcWZ/dJjgCWfff7jQ6FUWJ5XW1+Sw9PhT84oufcvyAn6T9kVUjt/lWt=
UrmRFWk8wdSQwEgqX+pVKNjt4vIpfqPKrmxhU5OoMpnhiUHkr2MhtCL32jZkEn5h2tpeJhmL3Lr=
tfcfOD8ty1Ij8o2sGIFJR/ENb5LXadfZoh2eyqiQyAkblPLYYydLVOj+fC3jmzj2DbekTuj6MDa=
MwjTpMUxxaoUhoVYfuJVTSEuOePGujwtvdNCojiaSqyU2pGh25aOooucIKAiRYpexKhOf0ivROK=
XQq2U/GUolSL9YKkwFCOZTNxsPE++FwJxZTYP9YLA7T97yIa2JPfUFOmcqWc8kUqD/8KH70jaT5=
fMJUK+kIKVwDcrMKTwMM3i0lMmlaoFz9IMvY/n3jFMgAAAHjaY2BkYGBgZOo/X/X5Vjy/zVcGee=
YXQBGGEy8mMMLo/xf+q7BIMJcxMDNwMDCBRAGzjA5pAAAAeNpjYGRgYFr4X53BiPnF/wv/L7BIM=
KT8f8eADJ4AAMujCdcAeNptkz1oU2EUht/ztULQiEID1ZbaWNBcjWIC0VRQ7OgPgoKIg4NLQReJ=
tqiDiEqH4iS6VgkURaSDbv4MdhQHyawExUkE6XJH4fqcL7claANP3ptzz7nfOee90bLix07z5dc=
ftdcuqWafNGhtHQxntc1+q8y9mhWV2OYYL0NCbGeuu9GKX8MUVGEMtsMhqMOu/P645+e15TxWs2=
kVwx8dsFcq2JIado+4awsuwwK/36hBfw16Ldgz9KIaoYB+B3/Ow1zb6B2N2m0V7YX22bK2hncq2=
XN+P4K7zKSYW0ELlpKTZh10gdm32JyadpwZ5qAFiTZRU7V5NTl/vzrZV57t141whlzidivmN2NN=
FT3BbF43z0zXVQojGmaOYbumDXaB3nzpHR11pY/Rtd23dRJKMOSQM4keo7eZ8Jm+68y3qPF8ziT=
GvPfDqMf2QMJcqZ6wjya7GYr+pFrUL2bv1VfDefZ9DmY5a5pa3/s6hCv094CaVu5FDr0O9si+wR=
d7m6VrPvzPEXvJffeiH/fCPVuiT9/7OoQx9FTuQx+cmXL+CPoDunH/qz78i/dwXxujF/24F+4Zy=
i6SMEmu95TqZuS9NHCD+Ve1gkddeJxzFV5DPXrYmxUvBn5mHXY+4e+4PvCez2jCZlFHzDSlHbFu=
hf/CCrN0Y30IT1X8C9kOtRIAAAB42mNggAM3hi5GOcYXTKdY1FhCWBawvGE9wibGFsfWwLaG7Qe=
7E3sFBx/HOs4gzndceVz3uKO47/FI8JTwfOPV4j3Al8SvJMAjkCfwTFBNsEhwi5CJUJ3QMqFPwj=
XC60SkRGaI3BNVEZ0gxiG2T+yPuIP4NYl3koekMqRuSYtJJ0gvkjGQCZJZICskGyV7SI5Lrkrui=
ryNfJP8GQUFhWUKDxRNFEsU9ygxKXko9Sm7KM9RvqVSo5qi5qR2Sz1C/Yj6M40gjUMahzTZNNu0=
lLTddNR0YnQtdEv09PTm6U/RP6P/zmCFwRlDKcMWIw6jBUbvjD2MlxlfMOEysTJpM20yazHPs9C=
yOGX5zJrDxsK2zW6T/T2HPkc5xyVOWk4bnPWcu5yfuXi4rHMVcf3j1uLO5T7Jw8bjhGeNl5/XOW=
8f7ws+Mb4mvi1+PH77/PMCqgLDAv8FbQruCREK2ReaFlYQLhNeF34nIi3iTGRGFF/UpGih6G8xC=
2KVYrPifOLOxPskaCQsScxL3JPUlSySvCtlVqpP6j4c8EEaU5pamkfahLRb6SrpszLEMqZk3Ms0=
AMJ9WX5ZftkS2asAar+djAAAAAEAAADkAIYABQAAAAAAAgABAAIAFgAAAQABtAAAAAB42lWQMU7=
DQBBFX0hA0FBwAosKJIgCBdSABFVoQPQ2NkkkC0NsIHSUnIAzcBTEGWi5By/LxghZs//Pn535Ow=
ZWuaFLp7cGzIxf3lGfRb4kf4m8yzqvkffY4C3yZTZ5j3xF/TPyD2754oSKO56ZMmHEmIaELa7ZF=
od8qzcU3kw4F5uQlWRGSm62Y2Wfgd8BffmRlVL8m1eHrBAL8dEz9+bQeq33sVGqPKln7lvp1bTV=
pK1fhe5avQqv2XPGwHPhftj27LY9l/pPgv9ibqJPGpRR2Go+Mw075WqZ/yExG5snnLY9F9zz4KR=
p2GO+3dm/7krs/wBHYkHrAHjabc81bJVhFAbg5yuF4rS4u+vtLcWtSHF3d3cprsE1EBI2CLYAwT=
UQYACCW5AAAxMDHgZg5pL+bJzkzTOd9+RIQsFEYsb533xIJEiSR7K88kmRX4HERiGFFVFUManSF=
FdCSaWUVkZZ5ZRXQUWVVFZFVdVUV0NNtdRWR1311NdAQ4001iRxOV1chqYyNdNcCy210lobbbXT=
XgdZOuqksy6yddVNdz301EtvffTVT38DDDTIYEMMNcxwI4w0ymhjjE38NT4kOWKDja7b56NNdtl=
uv2OOhjy2eWe9vSE55LUz5LPFLe9DigOO++Wn3w476b67Tplgot0meWiyex546pHHnvhkiheeee=
60qX7Y47WXXpnmi2+2mmG6mWabZY6D5ppvngUWyrHIYkt8ttRyy6ywykpXHLLGamut89V3V51x1=
jVvvA35Q4FQMBQKhUORUDQUC6khLRQPJUJJ55x3yWW3XXDRHZudCKXccDOUDmXsSMmZMz0Wy4pF=
ds61YzwyIzIzsuVf47FYLDI9Mh6ZEdk0MjOyWWTzyBaR//qyck2PetOj3nh2rpnZyV1yFsz9Awg=
EiOO4Af+FsAGNAEuwCFBYsQEBjlmxRgYrWCGwEFlLsBRSWCGwgFkdsAYrXFgAsAUgRbADK0QBsA=
YgRbADK0RZsBQr") format("woff"); }

@font-face { font-family: Charter; font-style: normal; font-weight: normal;=
 font-stretch: normal; src: url("data:application/font-woff;charset=3Dutf-8=
;base64,d09GRgABAAAAAG0AABEAAAAAygQAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAA=
BgAAAABwAAAAcaEQHBkdERUYAAAGcAAAAHgAAACABFQAET1MvMgAAAbwAAABRAAAAYIwffPhjbW=
FwAAACEAAAAaoAAAH63UMlG2N2dCAAAAO8AAAAOgAAADoGwAWGZnBnbQAAA/gAAAGxAAACZVO0L=
6dnYXNwAAAFrAAAAAgAAAAIAAAAEGdseWYAAAW0AABeIAAAs9xP2KaRaGVhZAAAY9QAAAA0AAAA=
Nv9DC6JoaGVhAABkCAAAACAAAAAkB98EJGhtdHgAAGQoAAACRAAAA6DwhiesbG9jYQAAZmwAAAH=
SAAAB0q+xgpZtYXhwAABoQAAAACAAAAAgAgcBU25hbWUAAGhgAAACZQAABlmMUhFncG9zdAAAas=
gAAAFtAAAB+tWbg65wcmVwAABsOAAAAMAAAAF2cYil1XdlYmYAAGz4AAAABgAAAAazdVHdAAAAA=
QAAAADMPaLPAAAAAM4DAEQAAAAAzgNj8njaY2BkYGDgA2IJBhBgYmAEwudAzALmMQAADjcBGgAA=
eNpjYGLcxjiBgZWBhWkPUxcDA0MPhGa8y2DL8IGBgYmBlZkNRLEA5RgZkEBBZVExgwODwm8mpl/=
/hRhuMV9heAdTw/iQaT6QUmBgBADr+RASAAAAeNpjYGBgZoBgGQZGBhD4AuQxgvksDDeAtBGDAp=
AlxFDHsIbhP6MhoxNjMGMiYwVjHeMkpuNMdxVEFKQU5BSUFNQUDBSsFFwUlZSEHjD8Zvr/H6hXg=
WEhwzqgHkfGIMYEoJ5aoJ5jTDcUhBUkFGQUFMB6LOF6GP/////4/8H/B/73/2/4X/g/9b//f+//=
Fv9Y/359cODB3gd7Hux+sOPB+gfLH8y7f/DeJYWnrE+hbiYRMLIxwDUyMgEJJnQFwCBhYWVj5+D=
k4ubh5eMXEBQSFhEVE5eQlJKWkZWTV1BUUlZRVVPX0NTS1tHV0zcwNDI2MTUzt7C0sraxtbN3cH=
RydnF1c/fw9PL28fXzDwgMCg4JDQuPiIyKjomNi09IZGhpbe+cOG3OwgWLlixeunzlilWr165Zt=
37j5k1btm3dtXP3ntsFySkZd8vm52U9LslkaJvBUMjAkFYKdl12FcOyHfVJuQynGBhyqu8xNDRP=
PXzk8pUbN69e286w//gjhgcPnz2/U3791v2mrsbujt6+/p7JUxgmzZo988Dpi/lnz52vuHThDAB=
eipnsAAAAAAHhAp8ALgCaACQAKQA1ADkAPgBCAFYAcwAfAFoAdAA2ADsASgBOAFMAWgBeAGIAZQ=
BqAC8ASABRAAB42l1Ru05bQRDdDQ8DgcTYIDnaFLOZkMZ7oQUJxNWNYmQ7heUIaTdykYtxAR9Ag=
UQN2q8ZoKGkSJsGIRdIfEI+IRIza4iiNDs7s3POmTNLypGqd+lrz1PnJJDC3QbNNv1OSLWzAPek=
6+uNjLSDB1psZvTKdfv+Cwab0ZQ7agDlPW8pDxlNO4FatKf+0fwKhvv8H/M7GLQ00/TUOgnpIQT=
mm3FLg+8ZzbrLD/qC1eFiMDCkmKbiLj+mUv63NOdqy7C1kdG8gzMR+ck0QFNrbQSa/tQh1fNxFE=
uQy6axNpiYsv4kE8GFyXRVU7XM+NrBXbKz6GCDKs2BB9jDVnkMHg4PJhTStyTKLA0R9mKrxAgRk=
xwKOeXcyf6kQPlIEsa8SUo744a1BsaR18CgNk+z/zybTW1vHcL4WRzBd78ZSzr4yIbaGBFiO2Ip=
gAlEQkZV+YYaz70sBuRS+89AlIDl8Y9/nQi07thEPJe1dQ4xVgh6ftvc8suKu1a5zotCd2+qaqj=
SKc37Xs6+xwOeHgvDQWPBm8/7/kqB+jwsrjRoDgRDejd6/6K16oirvBc+sifTv7FaAAAAAAEAAf=
//AA942tS9CXwcV5UvfG/1vldV763eW90tdUtqqVutdmu1JMv7bse7YzteYxJngSTOBtkI2QMEm=
BBCQkgCzGNmqGopyZDhGU/YZkIGeDOM5wFvGJY3kIYwAwNDCGDpO+fe6tZi2U6A3+/7PrDUpWpF=
fc+5Zz/n/osI5OqZ18kPhE8TK/GQEqlZCMmrOnu95hBIniregkLPKLaianTVFSd7UX00T1SHTpI=
Vqdrd09fbVyr6vB5jKqnrLXo9Jl1Kl7k66Q8kEgF//IQu3B3WBbrxh6RwxcqVYm76DvrOBIH/Ca=
SDfoLGhJfhs72kiyjmgiKXpgQ9MenziqNIFV9BIWdUvaeu6EXVRvOqy1NX/fDx3T3u3hJ8mIums=
pnK7GVHe06IizHhY7l2mnDFBeHDPT168d/+zWko9tjN8Mo/d+lMXfiU8GXSQmL4uaSguv2lkkp1=
dVUKF4uKvqC6onDDADcsjiKsJF5QE+xzK+VSJQVffhP78qbYV7YCXyMU3lr6ZPcTf7WlsOGxjYX=
193+k5+nJrYWNH95S2Dz2wdKf/ajw/sLP5e/+p/RduDgr/gz+Fd5PiI70zzxG/0v4MUmRdlIgny=
e1JOyCEiupRl1dyRVrSaM1P7k0mbDka8YkXhoFuHTBDqkB+I1ssRZw4e2AB28H8NLlsMD2dRcUy=
xm1FRhI42ckVQjVlVYRKakZ7ZlisTgVD5Fn9fmaM5CDn5S4qHYCl8Oe+qQn3GnOq+5QXe2BO60W=
2G19Ve2Mw6u3SlRjEi5IVQlIk5ZwptDqryouWbXL1SpjUYz6SlKm3NsH195S0e9NFWgm5Y1SkBO=
TN1XOuD3+spO6h2m5N9vfJVtK617Yvz1nHt3f6XJ1dR/be/me3M3Bywqlh3oHrw5+6kpHkBpyD0=
zsd61e4Xt8r1f67/C21SuPiUeO6OnrW2M/sg5N28zLurcniIHEZn6lK4M8W4gEUhUjafIRUpOBn=
7UoinbSUK+5gXE1HXJPNNSnzPaozpFXzXAZTLPLoKFOlQyTPatcV6yi6gQeGODSIKL0qwm4TIhq=
K1y2yHU1C69OqyQ/pzOZBdkLzFBbE/CjOxCMRD3wI1HNsiSrvpZqVRWDkjxpIFYn3Ecx7mPKk8x=
UPKViuTeVdNMSTTfvymKpKKZim+/ZvOm+TcvXb9y4fiP99ND0VhqYvUW/fdlVV1128KqrDv7VX/=
3l2RuFJ88e+LJ2h0rTz9A9BGWsPPMr4dPAlwTIWC/5EKnFkB1pS70WwougsV4zIUuKuvqULMVMj=
rziKamyEVhRZqxIOutKUlRyKEh6dx2VJOfGW2oB6LeAZvbBayEnyc8bTUIs3WZHqbBIShboD4ZA=
XsJVRZKmiCOSzOJbsqy0VZWiNCVY7PpOxo5KbwWlhhFv8vdVChTkx2Q0xSgITRZMDLDJVypWska=
3x+fvK/dmUklj+a7Nxx6/dGLdX3RZ5cpXV4Yr63crnYf27z25Z8vStSPfWJ/p7L6s3NlW/uwNgx=
tXLd+/benAptYXx3rd5rY26/7VuwztgeK2ay6f2Dn4wzKl6Yl8597iQAV4RtE+kXcx+5RA66SZJ=
qrYGnaJfdkXGiRuheJUeLTIrI8J/9bxmWvpHcLXiINUSU2PnNYZ6/CXVCuy2Mn+oskDm0BQfU02=
S17RFVUX2lq9lSkbk5aK1wlK5PN7u+jx9999ZO++Q3d9gEZe+q6Uk08/r56Scq7vErb2GHxepfF=
5Rvw8E3yeo6AS7fN0IN3weTorfp4OzIVi1D7PSODzrPB5ftTPTLbM9TZ2aN/eI3e//wN3HZJOqc=
+flnPSd1869V0X6Fwf3Uw/D5+lB61zEjcJkA5SM1GwYWKJKsGCYj2j2t11NQQCYgdiXtCZBLNL9=
ARQN4AssKRZ/wj1m/Aq5a/EaIFW/C7aN3Gl/vaY/pC14Mxm40677aB+PHHF8q7bhAF5ud2srtxk=
upFmhoZu7TZtWhl6fEJeYma03wJG/kvCVmIja0nNiraUFBQTGHgzqHCxRhmLqQ4tpB0XpwhF1SK=
BSBdrFsYOiwkMqdWCl1ZiyasOvsXlhFSSEt6ElJJuoeZ+app+o586q9Qx/cvq9H9RJ352dmY7+Q=
Y5TlxkiCguYLejrugKUxYb8aLoiAVFAGZI9Zpgxz8vuCz5SSIY4UMk5L0OeW9H3vcN0RQqA/eup=
uyJpWIilMntW32P9yqb1BKM9naPHeb0FsjXqUhl0PIk82bUWscvijpKaH5K5yIWPViwhgfzFr7/=
9fFxLidrwP+/TK6HnWsnNXPD+zcuqGLFCEA1gN/HLxv7E32aiqaSazK96XSopaUvnW4JpeHvzfz=
fmafpK8KTsBaJ1CgLImAV/KNNYNvCzH7tFX5/Vs98cTvYJR3YJRP8/mqQGvxgm66u2WcdrEBmKz=
D76opZs8S+uupGm2sGU6oDY8NMrGiDn6jeQJgl6RNhiaIxqUN70Sdmksb22759223fTq5aPrFq1=
X2r/4KufOGF6b/+a7r7kUcfpW2Pfhh5cSl8+yqsxU4OarywGJnECLgYKojx05r+OAqKDSyAs17T=
23Ab9SgwNj1e2qgFv5thR3GxeliWIsD6CPhQ+KlaVajEdthdrpQksGyJ8giVLv1W2H7FtPp2u7A=
0N3r2EZchlzdKQojvUQ6+vQHripF7SI3gulps9VoLE+OWCHyyF9dnNdVrVi/cI1YXinYcwqkzqi=
MAWi+qJlhKwA/mhUUHJhBqJSAqUTTmEYgKIgU1Cr4eIgPVAa5KaakqJgk8vRJBs03UFhRLWlWsk=
moKoJMvlYf1zPyavGiWZ+U0USl5c+t2HuiJrxgu5LyBUPSmXfuvfuKvaafcOTK89tKJ9dkVGwNv=
c0VDlW1Ht+147v2XPMNobJ/5b/oa0NhN7iW1LqTRDFJg7kJ6zKCqtVakMQQ0hlrxXihmyU95nF2=
t4LA9JtiSnoKSOKNGQEwiPFjMg8PyI4EZZ10two0IOGWI6WAH/NILRrNTTLW2dTHZQUlS8lXFI6=
lt7fB+SFYyzB0BVRjLFLmrMZWLs9deY7Lhq0zMQAIb2uMB0Rlr61y2c+3KcFDn1K/ZONFfzknd0=
Run3vbBLXseuOaSaw76IoZLArvHB0f1A3TZ0MCKyKWOaKB30561N+SN2ya2XTfB9KJl5jtCi/As=
+B4HuYwwCUQrZiypNiuzVIQJHrHgVjsxzlPsRdUMHllXrJmZ6TKDValZzMygoRUD466aLZo42rQ=
dFSTFwYI2WpIglEU/W5Ja6CX911yz7vXXXxqlH5++dPTHPx6lZS6LxZnXaR30O0reRWrh5j6Fm/=
sk4j65bfUpnyMswub4IMRw+HARDiaWsYLiOqN6wAJ6WNDqkUEWPXzLgrBTcXj1uGCndAbYCZs0a=
XT4wmyXHLhLwarikxTPwt2BDUHL7G0mI5liImhxtSWSy3d8o5KgR6b/d7V46Ib337jmwCX+qG6b=
fdfyDxnp6vV/Jx7fdvBdVZ4XFMEWOcDfS0DdpaQmInVeCLBbwEtbWMSjM9cZBeCsZZA0WVQDqDL=
asgOgOpNWl2jG8MYBYRLIGuiOV5JrxGGuQvSn0zP2a64cgheTtmAtstFky1j8X3+tO/kh/4bdu6=
6//2t37F23YnjTxqVbhwTqPV2399//7qGb9x2+7/H3XH/r0Q1rd3d6YV9WgLy4YV8sZILb3Smzl=
bRAbG+mTBYI8t7KVm4J1SHPY2IBG8YYb0FpMMJiKfJYx6xTwgtRF02YVtBXpqe20OXTr4j0N59s=
O3uTTzi5m8WUHTM/p78V/hIyxzjJk/08zlYDJi2UbEfr3cE+0osBI+piAnIRr6hm4DOtcK8F72F=
Wh3lHBoNmkyAHog623+0B+Jnora5o69zoUDM02jY32ZaFfGI2KOy49/Jr9+48Plh5+PYjx29dd8=
nKpet3XFMqZDZs2ThW6Z1QT5Y7Tmw8fOnq4vZI8abN17xtz9imVYOVkVzLBI32rIj2bhtcvozJR=
H7mFYEIf05EEiGbCXdLLSATzgI3O1FGnwTCIHFhMIIwxOBVApaqFmsVk6Sazmmvoix4nMy9Ky0S=
RFlVLgeMHsGU7avMBrgaFfl7rrj85CvP+3+8dOvY7msvXbeif5l97cTwBvo/j911z8kPTU9PdF3=
xyez1V2zZmSp3HztxANa7H/z5v9HvEzPEYYU5Ht0O4Zgqo0f3MGNBINhzoXNjft07z69DJt8Uy/=
3p3gx38ml40Rw9/XRLa2tLKJPhejMKMU8dPtNFQuRyUnPjRwXt9UXCn5aCIp7BQNMHn+0TFTtLS=
yH0EgoLgiI1DDwURFAovcUdRIUCtQ9ULxAhuWcXPXpilAVLl66OaQufFzQJaxrLp+R2khZOCwVi=
JMRdTnsd1Hu7MDIdoK9Sqfja8Fe+PAL03UIU4Uv0GZB4E1DIIiwzMwcGNAfmgmrRIquENw1ftwi=
rzr4grFKq1b+BPZ//GZVyJy0bvLfTV6cDwkh65MtfGX6tiDysgF19DPyfD3KNA6QWx30L2bU4SA=
YTK+vQxMpe1OMkCz+sYn1SsgWc4NlczTQVxS8FrzZQHkVGj13TheJM+GRIwlSjda7YsWwchS1PT=
SB98mwxp7J5dN81u/aW37dq3NhmtA/uTPgDyWTAL6zP9h3cvPxY23Xv77t1fPVBenaGV3eAhrUz=
R3VHhSkySFaQ50kthBlApKROQBBVLai9Osw/FLmkZsx1dQQMaidwEKOplUyHeiCr7hFRFNUhsBJ=
DoppDhwVhySqaV/pCLw4f/8W3iDdvdSqjojJ2Wk20vKHET5PJeGJ0rAv+R5tXytIQVXNDkrzUYn=
DIoWhnb6XKXUgvsKCvApZ4YgQSVTPxpnI9IkpXSIJAh9mYYcp4YHLSVHKI8uiG3fRXSkYXNXrna=
KhJ+8kPv5bNpCGHH6FZ1Ny17xv4+LYnPrskfaxn9aaxvuVLWo/2FUpyn1XKmv3uzvzyj77z6Stu=
+eJT993qfOL9n77+aprY0ltub3eal+//9Vfe3Tf4mfdetW3J6DrL1h0r963tqbT4A1v+IuVxB3q=
33Hn9Y4ferjzz5VXJHde87eNXjf3jEuFdRJj5DQjRfcInwXd5yCiPElnKA3m90SIWi0UmSVMOyB=
LAKTvQNHsLWi2PAlMEA7onjP3Qt6bKFXfJ7QfhAHpSmH+7Szpz/0/Gfj74w2HTytdWWEcdLx9tt=
wvXnn3I3t5ucH7+805DO22nXvQLCVhLF/gimYRJljyi+QX0pBRiExToLMYMeGHU1adiIdkMa4qh=
KLSxxNQNoVsEVuxmuSmEMWCuFDe3ry4/GBZRsaLlSMJ1Epyzv662w1tJN3hauzfEpD3kxRjCBVR=
lgaqa3pqE24pRUgwsfIWYu0DLiWIzess2A4ly48qYSlQlqUpm/v19Ow/c/a5DrbEjlz6bHXAEL9=
35jClrA7KFrNPY9vFrs/SS1fsOF3Xja+42Fun4ypt0LFbKQzyxFnQ6AvlgLYg8kMA3SkGkSgJF5=
sptg3s2HUsdTKjc3KM4IW53Mm1QTGAuRWaq0a94nUhXEEmUgrBdfgySsBankxlpTLW1iluSi+eI=
UMIoPdtF859/fNcVS1yOauWad99/U0de9C05dOTgio176cbHP598bLcceuzdD33MIV71RKqt6xm=
0S7iX98JeipDVL9diImnOTmIBEmjGLB82TnIyP+hhBogl/LBKkcU84AZVg606h/lNNcuW4hKaIM=
bt19XTt3Zfu3nLBiq+594NDR6rT0zuaw110eT7H+ZxKK6rFdYVIS9pOVGAryrAIptAC7CXRSEOt=
sCaw8RCUCtkDU4/MYG8OUEG/U6868e6qdOPl05J2wIgJgDEOEAKWcqkI6xCAlkTUqdIRSyOokxa=
MXwCS9xisZrBa4nc+7s93NFbJcVWVSwYtxI1QDgn/BKEWBA1Yjqin8uRBG5bylsaoSV2JSXwirG=
F/tsSp/PHzzithYLV+Qy1O6XeBm/ef4nrrHPV/1npmn5VPPw08CbI8sUnSQv5DKn5kDd+MMGeIo=
sLVRMwhBRrJhYXmvTAELPkow4eyEssXZCcwBCzxAJHGzIkXFCCEPICQ0zFmswEGD1RLSjjZZBgy=
hv0AYdk5oWwY+AIscRTD8zQAVMiLE5mUaaiRyUEwfCzeF41QcyphlqqWtTJCJ9lAav9AXuyQfq9=
isvx/QYLpBW/B74IN7Q9vs81/YZz1b+ucs0QMEKcK039+wjoX5I8Tnj5F/VvEaWb8vlZ5dcHbAq=
CMKfmqiCWGsJOVgcIM4MUDgKhYcipQSlNhZopzBgJ1LOKsBuIrOlsUbQ2kENbkNAor35CBNNSVW=
1Atkqc8LZOOp/GVsqs9OmiDb196dndh5e44D96+933X9+1RFrx24p0cvvhFZv20I1Pfi7yJGjuh=
+9+8CnHNzgH/pOrr6YnfwuykCJPaV4hyL1CoCWJXgF1RJFKqhFuWUQ3NgXsMaYfdvQRrUwT4kC+=
rViLM4bFU0C+GfQiPlcv4iJuMeiL6nPWa74IvudDRsnFWoSlf5EQ/CQW1TQahRj6HJ0PrLPRjnU=
R7zzDgIQnGixoSkCCVUtQGX45LNEd0vAvtevpT0nDDWVoMzpfe42/nv0WZwbW5+CK240UfIsDP1=
wQo3C7AcxQnJwRyAXFUmRlOiDbDpTYGc12l0azfQ7NrGI3f9VsrUslaelZ/DZnTWwt+Pn2mV/Rv=
4bP96FP8BLuAmtGb7Otg4031Q7rcME6/Kz2JYCgCSJGmaiCNZll97ILs3umfxY7yB76RovQ6M94=
eX/GLrEmndaSAa/WXCjGePYlARDW5YPS+Nlh6di1w/ZPvtOhv/wqepSvefqj997ZlKG3w5rj5GZ=
NhgJMhlR/bHEJCtuZBIXRoycYKyNcgiKMm5G4xs3IXG4mUS4omshQVQlLF5QOqeTWrliQokt554=
hG5rvGJd8Y+8cfrnr286vnCcb0L6gLryy/nX7R0B6ljv/ETaFgJwnksU9C7HSZJhN27kvspLH58=
8VDXigeFnTmc2VDsYus3iKKrFZJVDvRMv/5ZKCZaxmRpJFfVaUfzLHpKDJfFU8+z/gPpks3xvj/=
QVJrwfU5PaUSsrfmEIOoxWjYsTZEYIHmImN69IzqF8HDRZmHQ90TirUoc3LRFh5R+UVVRk8NdNi=
YIGHVEl2ebGtIGO6KKqPFMhgx5CBhjKXcviqrY7IaDVptIGKBsupSulnTHf3m506dGbHbR/5zzP=
qz/P+Vh/5pUHaA6W6ZttL/is1RVaH37HuFI2e/6za3t5vdQozb8RDI32eA/iC5m9Q8KH+OkuoFU=
mWNcjOjXDVZsVcbKij+M8j4msioFd2wOX6RsQE3R+ROyQG/4NA3goKa3tGo46otWLYVMSZ2MpKx=
fqO3uzjJWnGk5J3dxNQs1dnQ5+gl8uA/Dspj03fKg/80JMtAZnCa0DOyBQRPPvuMsGTaPpc8VmP=
4uaAKCsRYLWQZqTlwhz3goFibKIhVhjCvMgRZdOXHtCjIXapfgnU69LjOIIQcqlmrKlTQpTSymK=
xWJRFZTeHI7jtu3320lHt4+507jx47efCykycvO3iSbnz24I4dh565avvKzdsOfeK+p56ino89y=
dcH8QSrLXlIjJwkNReuTzSy4IhVxiMsopgy+10CDyMaxWeQLMVbbAgXBhWzkqXYRNYQwmo+1p1D=
WCg3Y68UWW+TQfkjIHc1twdkjPNcS02z3ia73bM1s+D/feTO+0/6e3lc8LZu+ZJde/cnkf17rj5=
wveFLzdBg+rRh25aNawVOW3Zmo/CcoII9jpNbNemylVihmbE/ZgIxK7Ao0iEqLsw6RM2swY74YU=
f8WrzrqyNJEW1zUG88GODEMD5X9ZCUKBG55pBZYGCWVJeImxYLLbJpRhOGAOj6y1200uxgZC/fc=
8ede4596HbDvR3FdUtP3f5nx286eOjGG//uRrrpEwe3bz/4iQf+xnuDrV181vM3D9771Me0DYQY=
fuY3wnth/9pJibyhWXA/s+BKW5EnJt5GQlZi4fJUqiOIOVkK97KXWbuMk80iZJjBy7SjwcvMNXg=
Z3gjGsL/M8/UvkNee4fl6XFQip1XR9oYin37xb9/4+RDctk1KouzOw3uT0XjEnZ+M4fca3IzfF7=
8vZQTPVK3BO/ACPCTPy3FRikRjXfx/dMHPLOMvZIDfDuBqRxCjCwcwuiTVDNh0mZfzoV5AxEfh3=
4AWYekgyMKiPkiWTpMpLR8hMzfd8PHVETFoFCsDls7EsoQUsIkGz8QyZ6tUXR0L7N62c193w27v=
2HNHq6cQepsrH85YIq5865A4VBD+A5PjXXR01doxtGeDEAP8EuLSLnIXqXWyGADEzdjZjAE8uBN=
huBf2sIAzgDF4oaBIZ9SYrzHMIdWVGA8Kcs76ZCBngfQDLL7aDXdiEhvYUCzSc0aHJ9jayaofxk=
4eFYBzlXLAHI+s+OZFB72ZbAYYUV4YkPqjej/XvcEBu6Nj2YqNQ5tF855177x8y/ZelyvTO7Jqe=
L2py5uKODoeuOG4R3m75B/rKxdTRn3b6mXbjoc/sk/yjlUKpYROtsheR8fYrquAD5BMChMgl25y=
JQFfi8kaiKRVy1Mknrixa6LHvgarXYLWuUWWebF+Bvgus6uRqNRcLH1x2TG+mM09sLqpEgdqmmt=
eltHovqVcVBTKFafzMXl8+nfj8mNOp2B47LG9rrNf1cxG2bWXx49ByCk+yXzxTYSPTlgsde6FRO=
aFajqXXCw2fbARFmhkPtiI3ZEoG+WJMp0RcXRA9YIf8rLQwSvDL9i9jZCDmRC7EVYdDFUbDURPr=
OFwMYZbGNKZjHHcPsiV/ntY3rrv0q3uQfC0UsvI9PdGWliyhFHQh47u33+UHuQOafoDI5via9cm=
No7QtzsJnanP/E64leX7HdzSc9qsGm0WO6NNKmDkAGtysYyuu0fHltBC+cQGOH9/vd/2ueesw18=
Z/tHET7UPNtPfYGhjBx9/NfISmwhPslj46zwWrkkyBDYl9pE1k9kB1/xj7S72sf4ChrloW17a8x=
8vo21RvF1OxXdaNXreUAynXxzq/Fkv3jYopi6IWMyK8bRTdZvfMCie0y++9PWfDbP/Ru5SPW6z4=
ob3LGF4zwz/4Rs/17H3JPh74mnVbDGrFvMbTsV6mjxvMFqsotvXMD1LHQajyQy3JNnt8TZuz9oh=
yAkkjR2lWY7YaEr3vRHz7U8tf+ZG2/jXx59c9uefGP8UcsbsnC4K9rN1+s9Oe1ub8+yfCamz/yp=
czuRt5nXQkQPAoxgZ1Cy3j+dv3kAUIz8c7VBcJSyk1sxOqThnWk01YJJlY4k1FvR0WbYqvzZWo2=
vU97C8Zxn7++fGfjFovvMhS/8rS194adnZcdODTxjH2x00SFscsH32r73sAImxTv9u+h/s7e0m5=
w+/Jxvb2Rp/CWvcB2sMkB2k5mbRC+ixVFxUdIIFxXdGdYFauFha6EKp9zEV9kGkxmICl09rRxHP=
4vLl1TS3rHO8WrV++FOWoVeGviEumz67TPwKEzbb9M+ozWlra3NMT36f6/A36V6QOTC3QgvL/96=
uxfpWcH1WFuhbHY1AX4cTCKZG9ZHlg8YzqkFkI2AOnD3A6JEVjxyEz26oDgOGjNjwcUogO6iyVt=
5kVU04LWlhPogmXDSFvTVW2umkN0//t1us0H+avot22eS+dmG549KP5M5+znHDc8ze3D9zCz0pf=
JGYSIF1HmCfsfNAjazzgNbQ4K7XDGz9Bh3PpHg7wo/9XPi6/2dPPHGXbmX+rCMHf88x8zT9dWM+=
g8yfz3CXaMoxRP9iSHjyrB5+t2vmZhpqfLaJjT4ouoKq1z4bMlMjfDZlJo2a+MSS9tklKVWGr64=
nnnjttV3CL/O/fwH+3t/T53UR4WVixHkqAlFFaYrqiRkbQ/DXzc38jxVFaMmdypr+nsxsn+48O0=
2fp57p1/75nxlPyIyH/mpmPdDgJ7ggYq7j1xxKvAlvgv5q2l7rx98/JiRph/A9+P02/H38UJueE=
Q78mxJc+BP7D1Wqa4xalfypYwcPFIXvneJxYm7mDfoq/SnkYllyh9b5ToKHDrDymqFekyivrdVM=
UmOCa0qXDksQRekMvLINmxWDKMqJ7tsaYO67lTKueT28gt1qleRJKRROYkvCK7GqYRqjYC/BqjY=
XJCdvfle0OYTZ8QuWhswZkys7ae7WT2bL6eyE5DyxZ8NyufygY9/EwMSOfLpr/dt33rhqoi0+VB=
K3OuTC2LK1098VDa39oytG052dSrzC6TYDA38DvHNCFnCF5qUlrFgguX4IjrEb5qg3hqoE1BbIw=
BxnsK2LswgOV0NLFBePlC3OOsuxXA5eDvVITNcxlQElwRK9vjEeo7Wj8lSaE+mbb86sWrrzykce=
vm1LLHDZns1rUmXho7HW6VdT7zxy+93CR8++j+4/uvewyGQlDfv257BvLWSXVoP3mEG3cfVOsEp=
O1lVzWrQiJ2mWsLErboQ98hVZSG+TsKrnCfIurlZ3Bz0nvmpjFEFLTsqzRTw2GpO+6/IVG2JBn9=
8fHN28Z/3Ska0bjtz8i6vv6+sIRFybnSf27jmW6+25F3ndOvM65FnfY3nWHY1uOkQXThYaGbRlY=
7aF6gJMNzMTZbZq4z7YaHey/jpLrMBnqjYP5PahZvoVYulXCLNclnOxHonM5ixYpTICW1KzEbHa=
pMpfTmlzSqnyrGRJSGTre69t61l3U0bq/sDa9VtO7Ni8rLykL7l23/dPPmL7XKz17E4Qp96hO27=
cfjhFt4vXcHlKz7xOT8N+eEiYHNZodDR2JKSrT3ktMpZivWhkInwIF2cGitjg9PEGp+IqqlG49F=
lxUxyy1tjB5NGCBBDMrZj+GOdsjikxZ1cqJd5hT99xePNldPpzu9ct377rsoO37P5xX7Fn9c+ue=
fDyPR6bbd+V/ZXBe2ri0NINKEsR+Har8CrI0rFG7dBQV0JFLNPpS6pHV1eNsCtGVnYwNgrnujPY=
wQkAEe5iLaBrdCfguw+TqGZ3Ab4bYF8iaIc8EPYppkbSAjvQaHObssYIVsZxQyJleenSa3YlO9p=
3j97/gDTcahDpFXGX7aaHE4GsbTD6zlWF6Q/AHrBZjbaZjECA7xnIAQfJGVJzIMMHjPVJl2PAzF=
rMSmtBzcFLoKBWkPtDbHCzFxZO0GJl3fVJQy82OUJyXQkXlV5RrWKW66lPdnqqcD8u19VhHp/9O=
nb6ixhP6ZUwBFSQ/PW0vKF0nyaT4Uh3D4uiavyCJW69VjZ1oobAhdZMfQO4e1XpuYCjNVfpR1Po=
kVWXjKoXyOH+GrChrVQkYJEiy5NWT2+VTYj4wSpit7aRwgCjuPkAhYxR7POZ5s2MFCgbGin29UJ=
63VYtWbur48d3VJc8fCJ8+TbJJuzfvWFw03Xb9m1cOzi6taP/QHtnuG9HH/zb2T1u8fsyVcem6q=
o94UK+uGyHzy/4XM5K30jP2MSmjsGRfCZikx299Iol4+NXj7O8D0IjIQn6HScf5h4E61gR0Gu7K=
8RiOdwSr3VRmwrZROwMkyKwqYFYs8cVY/IT4wN9LA7BqV6r1IxnJGujo8MSikCMG12JG10v5Neq=
NVZdxOw2i1rM6DZ/ct+UubI8OiGXv12QuiqFUbnwnT6J2d+vD65bM/0jEDgUREulOzGt8h+EQ1z=
3sfauh3jCTrxYR2pqkK3IpoUhC2YTlgZHHRI9VcRhFR+rPViAJIuuUeqGULJZeDAUFZ04KekcTh=
BhFzsdolrASU6ZXKLbw8bMJcVa5bGwFoJxjWI2TYcTLzgxkipLy9+ekfueSXYn4R9ScBxI2gIEC=
PcFE8nuBD+zMlObyZBXgAYZrMA2UrOwKeeCZpDB86k+O6/XGc4w42tgFtdgYgUvbVzD7QJbAKmM=
i9fwbCD1UxavLxji89Cm3oof0jq2RszpQGLdjXWuTx8or3hHxpMe3BpPf4Iv9plWcUC6j07Cek/=
sPdo+GtUtb6yYy5wIMhcht3H/h2lqyFBXXX6QOFw+Hn2ALZjSe4IWMLx6x6LyFy0o4TMYp6D8eV=
nLyxuAvQizfDWMQTDrToe1+UIPFracYYhZzHpWldFEq1TR0lU+05/yzpEr94dNnaeW3qssffw9/=
bNiFfu0U59Om9/3G0Mm8dL/mJUoXrc3Am12sr0xr2vAmsFi69cmdj2LTeySxWZ1Z7WhscKWmzJy=
9ScDbFXMufGF8Pp8FWxrN/lHTap9KTxPZABvFkimC63+Ys3GwkMX3M5Z66o+UiwqORHdBZtcBRn=
v9GDpvtbJxLyzG8W8c66Yd4rsoEkcKIhnG324WpY14bKtFiykMbfvhl9wM4/vRv8SYi3LkB9IxB=
nYTh1zLEqW9aXjuDE4+uIConOgIVPuUCzbgWpjhBzGUZ2rLzhb6V9gGeYahsYP0T4JJPRI/5rUt=
f2DExLYCXlX5zK58M/d0o7uMalb063K4Pj4hlWz9uJo01w0r7Xeh5AF3jKbyfJfmXG2JnliaDPN=
lBds9VbmifUaT7WuE+fpbNdpbssJeBrhIQVEqudJRtFiRjSW+ZBlRNUDm+C3w1rQYVnIosUMJ2f=
Jlb1jE1Lfd7rBbHYvncOHxaxmM1b6NdCOs3yrtNl4u1GLldjRHF4Ps/jqioXXw7CajhNULpDgSU=
FnMrLCn2zHFoaBNMI6bkuabhDDoFfuvOvlOy9dNzS8bt0ta39x1f0P/J8HHjix7+qr9sMXrsUP8=
YMe1uInSfJn2hxICDNnyjtPcUsdy7xsyBMNuB/SMgPGbaybLpxBuVRNAdgxt9AUToEJpwDCqejZ=
gE9Em6ZljXSBTwtEIFlitXIRJyoFd5VJrFxV9HLNEWFTPQYM/sD9z9uG2VbBnNzBz3Ziw7ItV77=
nqkxFWvrTx7rTq/dsHOsaeB6UeRluxx3Hrn/I8knYA+oRT+y55GBS24uM4KSvsfm8G3mfgDUJ2F=
7EjGwg1AUE24tsPA97A07WGwCXDMHSBbwyTuvhKISq87DkAmefrVKTyhgr2WqjAjwkdwpNGVsYk=
6c/dPvQZipQufyTEWnt8I4rd21akRgsRNbv/tHJhyQx6daf/QdJ39qql15qfdcNew676HW2KzU9=
oydhf4PkxBzPHNAUzMEVzF3UOiC2elPTQkzTfFzTfLpG37+m883RNJbv+bgiwUaiCuks3uoC+1L=
hZeem1pRl2KvuAbMUjcY9scKwtFzTmUuLBcGxLbBq+gdcVfCMBOjKUVh/lryH1DK4fqyIGViLws=
COS+JG+SDelVw+szYKCzm5/YwadM85HxnkZyVSEOy6Uyb8xRBPzYPYidZZ2VTHc3qLyxfNMN0yZ=
HhRXZZq9mgKpdGHUy2srO5noeWcinq2WVDXaQX1XLc9t63UWZ0Y3HPJeLHHnE215bNd5lZvxJ45=
uGOV/Y5LAp0rM6FYf/fYat81K7yZZDTr00tW2RJdsnxjoyZ9lo4LwxBVXU5qErMSkJhjdYidYa0=
ZWFXcoEc/CAGVhwVU7LSTp3HaCScgPCys8qA3ZGGUR/OGdkzMXdi0Upyga1jRQs+I9SvMRGaTqr=
IUHMunH300UYynJ4YHO+izscje44Xp3wz2mNO+rgrVzhyFZn4tRGCvQuR92nySCbJclgpKYNkFT=
eL4gRvFXmJTxNYiGx8Ocice1DcGj1AQLaBj7iK345amHbcwO26xacPE+iCPfC2S4sPjqqxTZMJK=
o1hVCI6hVxsen+vT/MS3LIXekSkU+4ZBJuXCB/YsH52gn4ylp5/r643SLXCxHmRxydj6NTSANdH=
fwbff0e/PraNTrRhqeCt1dMO3yvbrbjP3qQOfWfIU/Vw6rRenP0tXiBgSTa+lz+NnTUP8oYPP8p=
FPajMlkoxVdBbcOUraR55bQ9/3H6cWqaG/9O2fhXkNXYb77tOqpUWrkYuvnTmnRq47T43cZjBqJ=
fJ5FXKtPq5bvD4uALG77x66/gjQu+Th4RvfM/xujeS/oe+cvoNONMi+efrdlM9G2OHbr4D2+fVx=
w2x9nGr1ccMF6+NohbTA1D8vQtXq4/bqe+8e+pcuw9bd5u6pJXc9MvjPOcPeI4Zq2vy3X7Cl00b=
rnbc5jOm09TNnzOm0yfzB99lNaVYbn2F59/dB1nNkEREACUCxRgEFKZAWlwLs4WNa6++r6Ciw6O=
St5r5a/9+1ru2OZUL7O1s/pTHp72mFMyi0bXMsGA1keg7TGq9508+w+fx3nKfmTc9f8w6B/WAVX=
oMFTfnFy98ErCQ/W2RqhEc0pRW9S7zobfus01agl0//9F9ctlKR3i6uuz8z/Xbxkke4fRiduYl+=
XPg8SZOtBFIpNQTuNVVgB2btBdWqHc+OsYMEfjeWg2p+lhH7cbDFVsRAmagpzEB8MT5n564qdlk=
1iVzFMR4Yor19A9TrpBEKSVYUX3x+LKbCG2ilRy3SeHn3UcfqcnX18qHOzcHja/smdCK1d9CB5U=
cuWZsWSuObNm50ievXbNlQptn1l1+yZpCy9X9nxkODwu9ZfVqrMqs6qc6+DI3avPSd4dd0r/4+A=
L+/FOh9qkFvmtfZIwU2tMmjCkav7gzYQDXhZnUkXYJtVJpZbk5vBMMjfYIdb8N41QlhhLvKj/Ei=
sZUufMlkcY4CiUWrnURKkQF5unRz59Dy1dXyasfR3eVxyaIXdRN9644H9tHyhi1r1ouujRs3jZe=
E9NpLjiwfoB10cM0ll6/n+7WdfF/4Kb0WZPw3hA1LmOvY5gmU+HkpLt5ocX42/NI3+ESAX1Q8p1=
WD+Q0wHi/+4oN/+yy3OIEu1e8xw1tO1SK+odhOv/jT33yhgtMCIHmTZoPVDX7JZp60sCuD1Qxx7=
6TVYnPnX/zpR76wjf2iX5z0+j3u/KQPv7O/FxAn/QH4oQZ/gU8X4HABvI/DBd4qWWoxeMBa2bw+=
f9NS0aXW5s3AAgPGD0nSqqoLMveBzh4dfNSoucJsly6V3H50W+8uQ8QRFH1e64YrL9udKzknEr2=
+dd8fXREXrAazXi+sXbpcMgSsNhZjzsXiGOIxJp9WNdvZuD5ksHhuRw6yYXB4YdmLbMPGNjtqZv=
Zo7QF+vsPDSwc4yg/BRvJqPKaByBwCQ+U4IVzrTya6E4mz/x5MoHnNiSsb+BhP0G8IO0mEtOLEG=
bY4lJYSnsZVEsVagI1SBUJ41i/QGLBSXAUlyQErdMWaixkMF3bkjcwJG1nskWaaEIXYI8pzVV2i=
WFSDoTqrVWPo5eazw54QztnhKTEIFgNsplFxsSF3Iy/iVOZAS2QzeSoV0bCAFIPFZiMzfslJl15=
9oMs5PNEpJjpMhbTYWVlv79p/zbax6sDSXx+5Rzx8mf+RY57pw+4rH/UePOy489C64yL9kPQ2Lt=
N4mPn3sBe5Rt451cbP0/HY2Fzn+BuYAoVc7ECq15KfMpqIy9GE7kiAr8kXFP0ZCI3VlIedaUixw=
CWFWB76FCtEsNKvHg85pPgJBxyzbi+qHVitS8Heulj7vw2dVTpTrULaoZ3PL5VRs1PlUuOEyvwW=
BJY/vR5IeUoJb3q8Y+UKIduyq7h8eyLkklqCYKw+97lDQsFLe6ruvYdThZz7poG2noG8P6a/1HL=
FzQm54Hh8WGdYq/W/yKeFsvAc6HgrOUIwioiamFW24HxamiUBLWJdaWH4IqoIm4qH/Fog5lepHo=
xSQpo02bzsJJcoq05WzY1i2uMNwrspaZI69TKDjAA7zc4JjNBMbyVbwZqDv+LHA38mvwnbW1mTm=
6WumLnmDufzh1OH+8cn+g+lDuVy8K2ycnnl8OqdS0d27bxt59cPVe+pHmo93NFxuPVQZfnEEriG=
/4Ial+7a/c5du5iP/i0QWBCeJBnECmEzHS1Glvuc27+eisVD1MGKEDE2Uz/VmmI3xJLaygaJqZI=
tKJEzsPmYFDUmoT2oIkUtNdLmoWO45UU+GA3bC9kJFmONjDOpOAsFVNKKo5em6sKgwEU17JlmJx=
zEIItfxm/2Wh74sKXy2cqJ93564Ec/kFZOT0+4v/W/y0/fc1Brjf8HtbLW+OncsVyNN8drcPkF3=
OfvzFwCvutv2Fm3CNF6zJAroPNCf4s+rNlflnTMjw0Pf5peO/0QxGHwHf7GyMw76HPC10iVjGFE=
yhTFDCycM53TWlDzoDp5PMu9NN+G1mGcWYd+GYfSFAPmYzJc94tqFqwB8BSuRsA82ItqGO53sdO=
kcDEiqjYQtmWoOBCCKO1VtSuLJ7/MLiEUa10yNIpClZBYuJ8HdioZNCaThgR/x8x1yT3bNWimaV=
GDf85R0wKFfI4VErpMbKISz5pmjSPX9/Yc3Ds60Wnty3VUjaIz7uly3DNaPXZ48/J1Qo+ju7urq=
rdbAs6k3GF7+6rxtVsf2E5jl5dCw/mJNf7bN0Z7Wu0et122+ozjB3u3+wvbxi6J3b4rVGi1uSWn=
aJXMXkPfHd2jycr4jt4s08Xjwnp6rzBJLMRNygw3SSpN6eykW4/s0a4axSFDgA0t4DEVV6Bx0nM=
O7kzz6ng0F4nkoi/yF+E2XyTi80YiXu0VJGJ85h91E8IZIpEE6cfzBCx3c8HORgWecE8t6XEZHH=
l1CextzxLc255eMIvpDnY3DXc70ni3ox13fIAfpA6xg9RYaiuA5SuIai9sMxjAMu57USlzX2GFT=
R6E196CJD9n8EXTriUs/+5ZAlvaV1U6pCmrHCKsc56WlSzfU2YV+S7ySolfO7yXZaf3/HM3nB2V=
ouyoVGb86r6H1619b9+JoepVTz32g/zho/c9dNmRw4ceePjg4avuuWrZqrwr3b7i0j3LohVHfuW=
a4++hWz96bWVwqHL1x9c8tOTKH3zsocOHD19+38OHDx0+9uDld/pPrvG97ZkrPVtvDd7F7Wmcrq=
InhE+weYJ3QdbOTuY45k4PYBMBQqikoT7ld5BrYG/ThSmdg2zCvWXTBFMxicTgPh8okOcNFEjnH=
yjQhdHqhvj5FC1aOGeYIELPHSaIX3prpC0U63VYtywbKDvajltW9Hb0jsXDyYFt4/TpYk/Yl2+1=
DVgcia7u8ldt+mB7V7EzFIvd4udymyXj9L30o8RIHHgStuI1+b3aS/aZ665LPn3ddX+38d1jb7t=
i9N38hWG5/JXwJfo0MZDuxslbSGkY9AGLKYzoX3HKr6bXNdwpVnCINuZXvkVYtYQer/7355Dv+n=
kyvIJsIt9cTIqXTTB5LY5B7rzMUFdKIIy6+tTwanZ7GHYklcRLZUNJTWF4vnmuJC8Hvo/Cbqws1=
kaX45pGx8HoLx/Fy+VJ2NhRUV2L591B2jOzwr0FXpdjXLmsqq4dBSF3+aKG/nbcuIykdCEqhVos=
o3MYXibJta7+5VhsWi1NETnUbsVfS8pqZkX1TQk+RE9FZtr8UcEfpdr5QEGbgsXBsIqE/wUXiwX=
a0HEItQFE+/6HDh16+J8+PjzQFbI6rDpHW0fO05VwyrLBlW+XbSOfL6+xiLeNDkuWherx8KHDh4=
/d/95Dh48c7Upemet3mOL2aMoU97eaI/bWPnsiQD9kSrea6P6n6Jb2Tp5XHRH200eEx2dxbix1/=
JqLc2Nq4tzg7h+hncL+wUGGp0FrtCB8meHMrCccpQITSlNBtRkbKDNT5hA5rM9rQDNThhC5Gf7e=
ebFmiIF1nWWtoJ5tBiUtm67dtOkdbf3tuSXVzf2C8I6NcOO+XLV/M2wfnif3CF8SlgIdLrJvznl=
y7GMYzBj61vQGJsw4s2HQNzqILCd3srTXIbF6q5aD49yXtVhzsjMMTlYUa5xOwkPptJyAkAHhMZ=
g6nH2hAV7kqVbpmuqnPgX/kL9haqfrwCaFyMMah5hFwnifmNBrw0p9YMN9rHLgY1PJLbiiKSs3R=
FY+c+uWQBvdDW1U3KISBAs1FQiRAfilQGEqyK5YVc6KZwJ97EygWFUCOFdDVB9pFBBUvZun7AyK=
SoObaR5eL1VK3vA7DxfaY2GnK71pYGT15Td+xR6h9szeY335gnOpZax3pFS+YkfpMtYvpAY6AfR=
1Yt0xjvT5gD4fttCID5vpbIbLAffSWKjJa0M2+Qa2CVW6MLRTgxKrE+OIUBtcetD8phDQhAX0Hh=
EsEI7CByMNvBmP9JzR7Iin87M4Jm2sBZ9h1eJUI2Obg2ZSZqI0izNTmgc00+IVrVZPMNY5cJnP4=
SyWuzKtLba4Z+PgwIqDlaG9q5esoSscsq7k7GtbI6TaV+akqkl2xnoqXStC+t720gqEFCLfFJL0=
UTYXF0cpPP9cHGJ0lUzfPHDw/ULy1CkWM39rpldwU4WUyJOk1o4ZYqqk2i04MFWzt7MZZpxmcYn=
F4iSxR5B5vawpbgTLaNQOR8n1SbfoMoMphMwhU2CD3aKIzYKpGBcR7SjB8K3/leeFA5eoOE/DLy=
nSaaI6JcjT2Xc2RpLBYWl7O6LsYRPFl6rydvowBbeuHdWHK502njWsQxvIzCM755916uEy689L5=
ZUlY3v6QKRv1RJr0JPymexGs9HhaV2baOvcs89pdZnsbkn2PiVt+9iG3/08GmzrvPON6bPd7kAk=
aYt6nHKkY2NPh+345aWrBvt8fq3mrdKXIcdwYCePJfVWji1lZW7Lascs0GrW0HyA/TYG2oVHSsz=
AKlMIFNHcOLHLcNqYzAxQr0lK4f+ToWtv+uJwz1r5h/Tbx/a2Ws8uFb40/TTH+KIieZk+DPFiEq=
NFxANpgnuRheBes6EhA/fqzdANLQz0g9UzydRMgl4FVz5EyLGx2r0drKiIx6lxakMw4FlFPjHkQ=
9foR7iRKXuIbMToVER5UiWITjDTtVvAkQkmj9bDc2JB3qMBi/rnqMKcht5UNBJPFU3OtMWWahup=
xNOq2e9JC28boplkrsfK1jgCdqwAem5HTBqGnAREWx3IbibmLJpqjgRIbwXEy3oeEC/W7x15WDa=
v+Ne1ZuFIMDt9v0UXDOlsdIzHe2G6kt4Ia0L/s1KTANHB/Y+jiXJmkVknV8Ob5J7Hcq7nIQb9PM=
+T0TxPKhm+7NGDBx8N93cVqvBF//zxA5c9dtl/3b1+/d3r+Tq6IAb7szkxWLbs9/r5S9d11z2dv=
O66Z8ZHr3jbGERg/AVipoGZn+p2Cs8CP/GEWpT8Oz+jVnMia4USe52Swg4nRETeEvZwFH+xJrEh=
EQnrRGEW1IbdeNbcwn7NUJoys1BWpU7s8kwRLbCN8U0RL7gp2POBsEmJsOoRnmwPsomHoB8nHtj=
x9JAEexdv7B2bcph0ukREklKCsuIGXoYlBpGiWtAeR1kPiG+tfO7WMlhObFI2MLLKA/fI5mX/tN=
IcQ0C7S2j4X1pXrux+/HHhuL91+lmLEAjorLTz7HsQjvPK1p/8pPWOO1r/EiztACG6cY2XHeT3v=
F+H3a42cKxtjE9tOcsC3pot0jymTSUDeENNgnsKICIsCYCFXcjKzjfLShzcaZFY7QZnB9KgEV6W=
pnmBiUpaVPLovnPcfecKU3lum7vwoJGe989aJNXZhjOXsupKwmtagkScqOY2TDXSYJEDDfg7PuK=
9KIMT87x8eZ6bX8Du9MkDHW2RFqcztbY6tPzgO/6nPbwY51PbDxTbOp0Dlni0u9pdPLSlew/Ic0=
iT5wJ4r2EySn5Hat0ozynkeU9JDSBbUw22TvWOdKeA+0tKai9Idn+x1juCzOkdgvc6zfjeVCczK=
TVzZyNUUPqKU7IT31NlVO+xghI/02AyBg45uPSikVzA7ZyoDoFkLy2qgyDZlWJtcAjfG+yHvRsa=
xMshyKjVcZy1apFkxLFLprKd3SztlZRSVR3CEcme4ggbVR7pBWaXqyx+VXOjVexTq1ncKQi10gv=
jjowWeMxH9psXeZyrCCGPy2L1hFryS7o7RdlZKObT8bDVJcprrl12aW//jhXllU/P1xF6qUPUFZ=
ylTCKtS2SSiTaxbBKdkc5Sftyv7850j2WmPztfbwQyOPM6fVL4NJs/OaB1OREn0sYQD214RLsFb=
Woc/RrHbzA7GWSkDoeGESpJh7N3URefLjHqcKq+hQ2SRtGWEzWOhXSir87WlzFQGKCVWVC5OXX1=
wV17e9+7ctyUNdojcQRLerRRXv+LOehI4WC276AQ4IV2UH2O06N7lqETBy6I1OObReoJFjiUyhy=
kHuxbBxZF6tGV/CndQrQe58EDxRvORezRPXtqeox6563Lc5F1yRdc1wURhLIQRZ6DIiRDWLkYkt=
CfQ6Q5d10B8D0XWldwdl3hAh+jnrOuIEO1XJRfFWBY1nQOy6wnlp7o27E9fi7XhB+fOvXgg4xxZ=
HZP74U15sG/vvcCa+xorBFhiwKm+mQ6kITw14s19EJBcZ+ZamOI3Eobc3AYBcNP7EhnG0Sckw5J=
7OBoVUstOr3F7jUnOzmE5RxSO4DUrqqSlFS5rbo4yeXeEkJZDtGSR5NsPpfiPYcL3kui+xzt7bS=
7NXnQJnqoZREhEqwneocNOqvQ3d8bCQpmYToLrNFrfDkJfMGooY28+wKcCTc5EyoomdKUl5czsY=
XSzs6S+wNsnAp9VWugzrDB/DJnCXPqMamm07PD1a3ypMVujixkC2FeflF2NENekNHZ+Hc+I+y8L=
hp8+egwvzqHDRNapfTsG9RLTY2yaZMPX9D4kCMPvkk+qEl4aSvg4WzWSHKfUWMhVuVLI/WhOusR=
xdwcXSYtPaf3eHVRnCJW/IvzIMx4oLYl8WC97K8uLh5yE99XV7LRWVxK43yO0PFDy5YVe5a8fHQ=
sH421t8ei+XN4Ej40vqynuGx6E7DEFc3lorFcjs1R/x0ozgTrubSTVzV+hDk//NE0w7Tg07sYPz=
L8asTkgHzJbmwgbkwls8SIUZCujtbSyPlW8zka45sN3FERs6ocemClraj6PTilV4uzUxpxcPAoV=
th4FIuNCh6W5FrAZZhbQmaG7qRYCqoZAikNTRUz2zw2HJD1NjZSZGWdBAQoTFKWLKi+LDOFqh0P=
HiMUKGM1XQzmiV3xLg63lNKSKt1r6ReMFafza/e5rF1dVtd9/+USe6dbqlL9pGHpuq+3W4Sec8C=
fmvYzR1c1sCUSGgZZL3mOT4BPtTlIj35R9DGlWFDjBjbJybCBMeBJF9QOXRMGXgNFyoJxyvGcDi=
IWHGEsSKx2Px+wDCHhs4hzFe0FxcxJU7p4MF1EAU3JNZvUgWfavAUEynRjtJKOwmWqADdtGDgSf=
/VigGZ08Szx/DhnZGH+uCjy2fSB+Vklx0FrBT8UgatX/vSIY8k/CnEM+e8JgE7H4gm0gG6JYY81=
ZPOPwB6j4BvPhz82fRyCisVByCCuWMCzr/1/lmfR2DyeqTaICf9YrkGcc16uncF4Z1GuYVxB5vG=
tlXzjT8+39JvlW6K4OOsyGusmY/EkQvP+KeWNB2PnZd4JHpSdn38PPshiMo2HJ4GHWdJD/vNPzU=
UcyCqUphI8SslBlFI8P1d1mjVNge2cz+FOxuG2ALr5xXldwnp6G+JauhB0SbUiyk++MCui/gB6d=
3Avb4HJi3R/z8vxK+a1hc+j7hMLm8XM94iItQZyrCNusoHU9NpUNsI22RoVUAdH9TCdUUVnvSaa=
mgNF4KJZ54EVPHHyDUsTookdFCT8gLZuAfKaCPboXU30NbBBZ4PnQrBp59DgbeKCdW26AAqc502=
hwOG67DjmIrpZvXkhHhzkF6ZZTLhn5mh/Y1ENvffAurphXUbiI1u08x5mI4NQcgoaOorIUeGsDC=
S15rY2zlLgEKSV9VysJgbixQqsbjwhK1BEUOJFfJbpLFigh+tUW3ONXI8WY56OyLDGHtArCwkCH=
+/mz9fAFhrOy7AuNiJDuYs4lZBoTiWEiwxK0HGGowM65qIDakGalaEDThp8DpB8EmCH0AyB+mSI=
3YhByI9BrwOHHHUmkPYYZMBqOMkJmw3gFzJ/9lE6XIClJpVb+Y2m7P7+Gwvpbb4Fe+PScFA9HAX=
P1UC0lTSZCbPodIoSl4kPgFEdznuxk0hu9oQRPJodLta8bJO8MTAnbnZ2zo1y5OWjX9ZAnePgeV=
28NonFMrhbRdAe7URaqTwHOzVPWfFMA1DFooxrTxND9fWqtIvDqH7iE3RF92tNHFUERbRN/xjRV=
H/bzXWVYaxBDhskJURjuQjKGkTTahzS1854DjYnYuIoURrs2nysNWzmdPOktptNeUxl+U/Zi+Gw=
lVkUztoBSrc0qZPdgtbljuRAAPRZnJZaCNGm5tBAhroRPgxnqLIXhGurnDcRPhfI7doFmfAFgd3=
etzAlRt1hOG+g3yJ78tiKRZHe4oshvSU0pLdJhz4cZTndmwR7Qyt5HsC3VWAsFwd9oy+f4j70/4=
X1gq08z3qfA8N5nvXaWU9y/nqT51lvarH1ts5Zb+wtrhct6nmWvI4b1vOvmgUrjXXfy9Zdxme8n=
LNupaOAaCOThWSHmWHSUaVvLiERUKsiV6simwGaauc/tc8SWcHKSVGSn3N4gjF9x3wy1Q7MUsNF=
NKxJNkV3EcLPqzjn4cXYAu05D1Oy5+qNXuPPScafNCkgWti5HAL30lmainF/01ZkD7+bZRCOGiQ=
C7LFtGL3m4TI/y5oe7ekTk8Aa/Vva/0UiqfMwYM28OOo85B9fJI6i5BESEiaFAWIjZIRmKzgM6z=
dlTY+8+mq2/mrbq/CvPvZqva0O//BHTaYmBVV4jXghAk4j1izzWPEGx1pMzWfc+RDlRNQeGsCfZ=
ofzF6rsZnO5L5j0LsljCaIeKzYO0Rh3cavcIj1nsXlIII3v6fnZFY1d2sAum9bNVnD+iKXv2lHM=
bP7ozjvXru9vH7rz2M47tm0czo7ccKifRnqXHbp5T/+qwzeNA4MObW/dHzh0+QvPHt7WcXnL8SO=
1O7bSb2U/Nn1T18fuu2cX4lIiFhvoexzypFsvgsaW/mPR2DIaGttkMJRIMRl5K4BsaIgXB2W7AV=
GGLgbMRntP/f+LXhy4WJzeH+IUycXovf7UfHqzF6W37Y+lt30Ova1/CL3oCBYn+WbuB94M1eARd=
BrdJ4HuHOklygUpx+p4sTTVyu1eZ5HV6S7GCfTPmQCbPsQyZjdcdl+MP32ajeRQpnk82qXauxHk=
IfhW0Qkri1jNxTl34/yZ5Isx8JsLzafAselAhgIkTPZcHJ0uchF0uqiGTlczBsOswXpxhDpUhXN=
R6r7eUIPFkepuOnWqiZkieBn2cStOrTVz1cC8XHXKHWb1CreuPmVvnYVv56UeyLlUW6g493g2S2=
N9c4sUPt5bgSycqT6mV2xKwt1Eam/FuWExpqFys2xkHmL7vEP32dmOcqpfFPt/OSxWEKDX1ysOr=
28Lbdu5Z3/SPSfhGtt1Yt87DBuAAS/qt25av0ZA7JKZN4QJ4d/JGLB59kz6aJFj+eM0eZpJeBqH=
avsLiL7GjhEAySOeem2EUTsyhofRR5qkjogMCENy1ycTUhGiqWSIRQgV7ZFUVpGdxcAHu+KZAqm=
IkESpfkwtKhAZTUXTnV1l9HdWSRP9NJa64lWlX5oSdNaWpWw0h3GmMbY37zgBHtBpniQQsl06fE=
5u83EymJu4+233XLlxhywbc916pzXkSlv3712dXl+0tiSzBWvMH2lNZlxjS6z9XWvzQfNYyuSi9=
7z7yW0bevuFXKvdLdlEi8dQ3jS603PXdm93qycScokeHyhZYY2jM1iZ2NT9nun7ZUMKbA3DtRO+=
R6IQMeexd8mQ7TIXRbZrbyDbKbFC4ylfqbngdinGxwa4HT7fK+VkcMhqm1WSn5dC4XgimZkzlt7=
+B+DcsSrQhbHuxsC/3nJBvDvhY6em981i3s3lSRZ4ct9bR/sDo9zgyQUA/zq1+XzkRbKtPc95oQ=
Zz1T8W9Q/TqAsi/20D63Nh9D96JVqgubxIky48Dch40X5RXnQ0eREvsN424RDSTV5w39PgRTebh=
+fykcdHxDL5aE23c6bUgskUM7cdf4iQaGWvC8vJcu6k0xcUFfoD1vlvSkuDP18E/iwho+RfNf4M=
XpQ/I03+FApqGlK7YrpgZkLGhoWAW1XgVlVUyjh7xZ/TDaycKvOrsjjpKVuded6PKzCOVkWGvsY=
5OtnhHTbP1loKUx18lAAHh4bLmtClC4P4tOoskfgDakbO5a5aQIT5WLn6Jvh8/qmCC7N+YEFu6L=
zwHpw9Z9xgWWM/9Np+TLJ5gx4ygE9TZzvScdEdKTR3JFtQqqWpJA+peiEqGGQb0j5PlfGiFS4gw=
+5qcl3xikoF3ynCO8WCWoGEakibclcTWXSiMcyzO6r45GtVMiGMXQPgufCHyPZs5bOp/M1bi3N7=
GQ+mPJzJn+A/nc80LtUiqWmfZha+OjvXwHmtczA72UOGyBf/AEvZXcCjNcoAOw9IleGm0QRbiSF=
5EbxzUXvc1xxZL861pMoSfLczVMcDgmqxnc9DLJGek5K5vImNxnU2mLyIXVUHQB9q7W2d1epbsL=
GzQxLZORMS81i+QppvdXV8YMKfi8by+Vg0dxELrPLZietmxyZYXv+68D/oT8Ev9QLH/5LU0iyvh=
9wAh/DVArDeQzm+vxX5WqxZGciL1Ql8L0fSHuB72djkdAdwT0Lu4XOCO0SshGBPIwqBULmIx7Qx=
7A/ho9+LjLkOiRWHlB5J9WATKiqrPhBrpU+a9MfTAyxvKqchTAqRZLbIw6SaUfJprB3WLeStv0/=
D5mygyMzncrrUyx/Flven169Zlim1JpZLjuM7Lo33Pb6NTteXblsxsHbbsVX7Ni8Z35pr7Vx91T=
bqPkV3FcrXJbqTcZ+k8bd7dHDw6D6//f7R3srgqhUT45zH79CLunet4/hOCQ0ntkg+oc1JZLQ5i=
XPBYlFsowY8x66Embob2FnoHIpwaS6MbJrmcaRrIx/pmgWVVRJMZKU6HnZU05JWfFPapMloMMVE=
NiFP6jzOHGNpCkPvBAio6sw0ByMuhDrrXnwuYlEw2vsWjkSci047/Q/z5yF0HMeVYdUGeEdkPpJ=
rFBKRIEdyDWIHq9B4YgaCuQYZmGtoFswVz34yrGwvjrY9p3PIPn+AodDJC1Fd1ajMT0Z7dQyE9z=
z4rhgYms6D8boaIsLbF8F5FQ6c+gWHep1HXxjou+HCSLVKdB5954DVJjWwWqQsEo1r+HrmWHUBb=
SGNtijSFrkYdi0mlovj126H8G4RDNtJrU4+S1sL5JfvXEhbAmgLc9rCQJuvwHp3Gm1hRltklrb0=
nL2LSM+zvQu28M1TzYGFJCY0EhkYmPe828dCNhc9zw6u57FabpFNpE9jhNbYR71G6yTQGiUZ0o0=
59HxqW/EJlJzaGMNdUbpKUwHu+9uLDJ1RIz1WnPRaCeLfBliaGG8yYbLDGIf72QDGDmpHgD9vHN=
GV8YRXVpp06GReU5qLTxy7AD7xHL+u8WD2zkJurOUu3MW48Un+wwLJpg03/mVkDJVm6yO/ZZise=
AZMRFRj3qM3MEwdBllptTFMVgtDBUXAKmzVO4AbQnNeQsQxCkezVW8psqdKOUxYN7Cx/TewIxgq=
sWnPwNI1mvcNiC0jqOTlCMGalfqE7506+925AKzNnn2OYX2K89CXF8GOdfJ16s5gF/xC0LFsnYg=
Wy4CBmhixqtOkIZbOx4rFPr62xidAweZhxCa1eg1icdEQrNNI3LhO3sM3sCaqk50uZGc0VDuskx=
bYiIH1jCrCIkVr82FVVrHZx7drcw94jJsKBicTIruZHbpQqVNDq9fNaew3litwHZEbXE2ynv4Cx=
upmfg/rbWFYAvgEpIcb/XwG3chjN1FiK3Y5GKRctNnTDxYbNk+DGHA00EcdTYBHh7vZ2wct8bux=
lR/mPW7VwM+BqH4HayaoYTc+6oTZRJeNFZ+AsPmN/Xmwvey2not7VqNy/QLwgrMfnLdLt8328xM=
zv6Y/E/6VBCGvvYXU/Eh1BHy8XdCOgOIsg2YhjM1eSYuPHeCIc9hr1itpATJqFrsDNTqOY9lmg8=
0pyn4rx60GyojaiidBPaTxyEfFLk+azC65tem+/BnskhRouaI1TtAG9GlxJZ7YTtx7pb+tteM23=
3Wtm65ZccJ39FN3HTx8294NwyPr23uia3/1tveYqn3rMivaTZHkqrHs8EvP3PzYw1976Zp3HL12=
zIH6w3BUIU+Nk35E/36zSKpg/tQsZKe92R7YulbMTgfeDLTqZDKig/SzwtPPi+Gs4qPA2zHP7eJ=
JKuI8YLENYazapSmbN9TawyT/HPBVtQcPtiQq1TcDw3r+sfdFAVpvX5CWXhCwVRg6t3PZ8LW/Bn=
tgBsvlJ3s1iyA2UFzxiaMWsAMBJl4OH3tmqlsDcg1qAy/4VAS39DzCuVrtNsYIn9hEdGUWTLHNR=
XZtlsXmobtuByN7/3yEV2HvqemvN1Fe56/XPWe9c1FnWTAXWAx4NqgBz7KVerx+1AADoi3OQ6Dl=
kZvnPEi0PKiZh0Z7GIztAkTa/4VnQ+asFZ88f0hbq7uxVgw8rQxeD9cq+tjZYp+2VmwIixpvfdI=
LuGKbw+piS5bZcaCge3bJ1sYDXGZZPKeoNI/Lu7nd7Z3PaPokKxwtxusvwvqTpJN8SFt/prH+Dn=
waLRheUL+wK2hmqJ7sCDqWWn31SWsKghHtiAiWW9s5aZM+Qzvcl/h9qTDl40qFR9KlGCLjILH2Y=
CbPZwA6MrN0BtFpW7DEb3dJ2tPBmhRfuLwzjwkbF6hOZAE3XjynhDPV5Ixe48sk8EVm85t3apzx=
NTiDYSl4+HRpys59UbzYeMCKGxhgcWOUhtUCt8iEErmSMiALowEM1nESk7HLyQ8gh7VTYD42l64=
ztrBaY9i3GGrygooLJ3tucMYYsJM7IoNG93P8xwb5Zxvh2N0a1bQw2/DXgT8aE74kyHDlIF7SRR=
RbgZ2y1oAivAVV0rDx9WcQ/s/iwvgCpxk03AsDXyzskKgt+xZh1fQzia5EPOBP4Es3dVarHwjE4=
TpB93fhvYZMKsD7btB+zA2u0CYtok2d0h4KDJz2QOjr4b1Eq5NP53lwbkCUGdrX8wadw2X2s7M5=
VhniMwb45eBQskEE6yE+7CsrOlk1mGefN9L0f425AffcuYH0nYernb3J3gN3HR7q7Y/3b98T/Ww=
8P7KumuwZ2dAG/PXtdu9ddfeJB8IHPUdWvmvNMB0Onpj+Veqq/TuH+ZwbYs+CzQiBR/zgW0GfBT=
PCTif/YQC0cQ2AVhVa2OjupC8cYRMVGg4tQn9eHIEW7fo5KLQ5HOQ6DxItrZ76o2gO/ylo5qC7k=
76WsEax6ohU3zTN6BDOoflDOAx2HppvPjWf5gR59C3TnPxDaU4t2Ocp2OdYokF29C2Rjf7lHMq7=
tJmy8xOPQ2U6jf5JhtfXRT79ljiQKigdpakoN63ZImvfnMOOyRY9GtR4oH5exkzmXPhQynSAHSL=
KBXibJ96C7PGxQ+I1k91WffNMWWxw4BwOdcwftDoPo751zqSVwLF6NT0pnwetV1MJFO4mYC8EE9=
rp0gsA96IcLwrey2T5AgC+VzB59sDaLLA2PP/8Pu05XKHGc7gQfN9dUD0GnGvQnn6hCAU27ehjT=
+JSdQi9f27wzcAnWQju4lUdi4a+zx7BJzD0faMdd8iOE3F4BgFx6Z3s2RGLP6xr7gN65yDve25G=
2P0T77kqW5FHflKWtnRnEHi/MKA9O6YJuw9htW747Eeb2Ps6bV8asnzl+XZmMbFtOcMkNM6PTM4=
VwZrej2PxIISTOqPAcClzcs1stTTl8WJQzItJ46I7vEAiL7DXLy86/8eem0N/BBnEjgtWPhikyU=
Uel8OwRSwNJP7Fn4rTqHLMrxVQYtWekx4kV2tPQEDQFzyd4Gmci6kZMH/WI7BW41HcCoUPdTJUK=
+38DOJQaKdqsGDkKeKJQsSQlkX+ZDjJKfEY3OnRolB3pTlmAgHCnAOTJusB9vD0S0Mn8fnp04kR=
aRUNjlILHyt5ZTizafob4snn2w3OHxeBBgPQkGe1z+2NJ1kb8BQKe7AhQsQUGNKuzJZt87BzQec=
+v1oHph4zCZvMHldIVB0+tNrEwhi3ZrdwnY2nNJgMB9fdlNkWupo9QGYNbRujJWDsF6vZNdNf4z=
L/25J2XvM3ui8JnwRJ7yR1widdAqDnCbxow8ZadP7ZpQ4dO87awWpxHWyEXuD9zimnP6G/8FEwn=
kykg2CgId0HgqLtxSIr7/mLmInOP0SHWxMWIb4Ot4BZt4qYXuFxJZZaGNOSPKlPtOEYg+r2sA1U=
rOwxMxbeXfbj6c5YO39AJknDawfEhbk5M7bnPRlr1OZu+YOw8/s3nfzwID25xOn8xgMuPKzkeuB=
XLrE8fWjlgyc37zt29fPXXPP81XTjxw5uveOm+SeVbr5z64Fn7/3o49T50ce0ePfXOjPr+7SSDv=
Ix7ieVUEmVLHXuM2M6Hvvice1WHT4Eeyrt8GG9OI2FoU4G3BOB7DLCQSydHnZCNsPjYvSKCJSSx=
BJQSMeJN+CBjow8aZJ8ad4jY9KO2RmeGE6D7X2OWN2BCIscWqVJGk5yrLm+3uZTeOYVjLFrJjTw=
5wyNsvk7D9ww1H9s8x46fWbHusFVWzeeGF996EB8VbV/5cp3UP8rhY788B3fvf+yy47u81h1l11=
ZrgwdOkR3n77qqtMnHnIOja3mM2jsedW6Z8H2lskjb+GJ1X1v8onVFe2J1aqen2tbauUPre4u9u=
KklRpAK1X60zzAGkJorOO+qedYC5X/p7Kri43iusL3zuzu7I93d2bX+++d9e6s1+v98do7GDDgY=
rdQl5QgQ3FxCmqApNA0pKRFJbRCqdoKKUqMiNSIp7ZRozRRqUJ3bYtUSM1TqRS1jURESZu+IKFK=
7EuekPJQYfecc2e86x/AefDM7Hh35p5z78z5ued+36GZzd8f3xCdtdy8ePED4gn9nJ+E90s/aOv=
XG2Uiwdi1bJLB2ggfSaNSJzOGlCTzsrdIRTKKNu4RtCQlgoSgwr1GGXMvyKonuEmaRQRGK1VHN8=
xPIgt9PYamZEBo6jFsJVILdSRbNZnnWBx8mQpq6dFVmZhlLpkLPcKw99XpmXtUlea8TopNxCl/A=
iH/vEEnimD+8VmMJpAcydmDE3FNQxc+HGpm3uuxMPoeX9a5nvVfW+b5nbUFrOsXfP5rrT8quIpp=
nWKUnf0CbMWxx7AVxy26hnnJqxJH3sYJi7kYDmt4ixfPixHQyV8s/w67W8jB/wjPBMoxu2EGCgS=
7DJvL0myEhwIFc7oEIpVfW5C8EEdQd65gpED88VBkdB1mimXpVhBULL4nZOskqpDukGycuZYO8f=
9Jf4DnfUJgZuIkSY8JLhZm0SkrpRBxQ5omvufSJF+6B2WmhLniFsXniKgNfqWF6E41oRbjJ1JUW=
EyWtAKl4MqfqGTOnEnlx/YVhqrTNf2tt3g4pT87oudfLERHk0cP/Wf462MH8mNGKh//mvaN6alh=
Y+LYy0Obd2bInzwl5fgrNEdV7uBh9gkeZsQelIPIyryakVlkPE9Zxew5e6115/WqrOGycSQbct2=
+nqPzegjSyKRRQbKM6j4l1GupFK73grQFrneDaaDTRrDWdIEptngEEBeZ1wkuD9sp4FplMiqIMW=
jDtZKDG6SlofDYdgu+D1MkLV/or23dMlic2PvkhHTd5y5mMkW3b3LHdiHLDWkfH5L+xHyIlejpw=
ErsIlfJlWjRn9/GSlyGhrqRicYymVg0I/2c9rpOtvMC6OZFGUYni7BdhL6Ii80hWJNlkcID58Gb=
pPlkFUdvUnBYqrRwV3ZTMBLGSWNwXSkRuX7d0YV2aVGplNFL0ok1xUOcXVsqcjTpflZjcxL6OV2=
1poJJ5YCYx9NahCzZVLqIYaAhgZ/mIQqRTVtMsAuWs3FtV2XzqJKMp479Yt/I4I5RR12h6x+Txv=
gvpb9AfDDJ4OlFH2E+7FLhzSsrgimM37ay0VhuDsNhwS9y0+hZunFBr0wTsbJrmTLyYTnnY6tXY=
647/yL0/2+a31Ys1nFHe7RDb3hWj3FEm1MufHvm4s5Xj/8ZR/kH9Jwz9jG/z4OCc3wV9rCASB3j=
8Bq5//HYGLO+L9977Pfle/b3DX6dXZU+hHckPEN+6BZfi+B+RbcIgnfm9AqyHeghv01ULnomZtr=
qOVqeksb92ZRRlqIzh5+aCLrDajJbx3tk4B5X7HtAO7zWPaTbiCc8J+G8LZMU+x7eZeJOzLwabR=
TazJQ0gXeoHOXXZ74MNwjFs/XSoSN0j6Uj7Ap7/gvfI7b2HuP+XNIoH3378JfwFgm4xcxhUQvAr=
/OXSI4Mm0ZtNdImKgyCFntB6kqdobnApyuCWHsEZxxJWhTYqtOCTxA6bTJ1dB2tbnm4lj/EQ6GO=
FQovdSpfQt3zM+02O2qNbhOVQ0aidx39YPiF9QlpOBtCS8FCMavNIb+1EEPoj9Kpa3vJfGiv/Yb=
anlzTfyv7UsK+5GeoL+02p0Wbw49oMzH9wdkUemYspVptTmGb44l2m4k4fXWvL9fCGOIf7VHwJu=
r6aVL1igHxT7GjUzh3pC39lN+VPoIjL7S7G7lKhK65DydJKLj33l7wJFkB3kIedV7zIHewDyI1X=
63hNIl+EkN7r49wVyWaEvRgpjKA6SI/aF5DKThIMQ8GOUhxWXhLLKKANYvJhgyBvxEbwfB/8vXX=
fzgQKJUChUq1L5C8uGcPv1stqsald95ZfEqW9+6d1dVidZAhKuzSeavdHmp3gunMYM9R63XR+p4=
6GCSEWXb5BLdMvtZQbzcidYSCgLFPKa6wqoXGu2TF7esKBKVkKtNLDhC1NgAurpCm6fXjDHpo3t=
cVT5AAOzkIINtSKIaCWxIljKLItjyT8PddMzA0FCgUAn3Vii3YRfj7HsrG37UkfPf92dm9sguEX=
HwOpeS/ErJydpnd5e9LKOkg2tgF2YG47daOUInBTrgIzN3aWdjEIdve5i5P79g+PX2Obz138OCO=
7d8Uc1cnlz6XfwaeMvJipNluixM41GOaZMa7oljlgKfIoOtke51B8pKxMjMIh0EBgZoItnA1FKO=
A2zK3+XWOTiJEcjLFi9Z+QOxTmwkxOb9ih21U4Jm67/g9+IseQoDM0HrmEfYPUZVG6Z5GlUgfGk=
SVajNAqc7WgrtLx6yDGw4TfXjYGDGbCWeLVjuL5eBIAuFdxg9GwXAoI01KlgqmcVkTFrBgcmIYD=
oeJbKNZDokgPEA1iopbCkUwNMpn4WM4nkjrGCU0Nw3DGBqoDhZpRLkRfC+aKlC+R8WICt63AfEw=
tEOjbqQQgKgbUUPbUByqWVeN2KrPmQOvHNj/6v6v7pua2jeFgKEHebx96k77kH96/PTp48+cPv3=
M1avvPfgxIoX+1TrDtcW3+ZGrKz4Jv66ffYX9jXCPDWa7pc4g85OfShDbTqKXdRCgSAcrhcVIgd=
cYhGvcpGtk7WvAj3GI+oV323QJ1CNxBRtT2cJTpnYsPQ2bSelNGK1REQlRwNvhFhigqt8SXioKR=
vbuLL8k/V26DCOmwh7gbPCcbhRN01zoEmjAnnRvfykfq4OvvOAKJXN9+ZiJKNcIrxyOQwDN1Sbz=
tsghr5LkmsDy1UQU5YbYyk1FW27MH/oJ5M6PrrabMDrQzy4IP7sMnwr047kC4uKPF4rwizIlN8o=
hxEUSM8I9cMke4qjrAUuLxFdZgoPOZjwCOLgsC66eLFYfxOLdIusOfuc1tz/ak6Vh1QhqzVSFEJ=
mbkZi9tJQyhMRQMQLBG8K0xnBjsVaMKEa/dXT2v0mXsqnwk/5Nbte9E7t2P9vb+7x+JDqT+VZG2=
r97d9F12xGNOD5xFQdjXQvz/pjzpjMScd767LNbjmjUcVOMm/PcL93gk20/zt3Cv44Owwn389Ie=
7t+2jfw+xu9w9DfZsJbV8HixF/oQA/pe6R6torpl1V+lRP1VMp23shwOs9ktt7Duas6VteMd2CK=
+z2BtYcAi9qlRcaNSb+a6iQwwR7n+XB/m+nN2rh+2TvhZjpZ1Ngr1Zry7NZchXKoMRJ+YiSsnWn=
NlIk4spzwCZRTBH+Z8AaTmbcS1uegALopolEUCN8sJdJam+RvKaHNgEL4c0NQVPL7LtrzfBWFrB=
8KzoXVAS+bSI6Hx8R8c0PvKT277aFtWrX26OfSJZr6hV3S9ghMPpzKq+qNL6Xg+tDX70p7U4hNW=
xdWpxTew3Op0Ja1Hojr1Eep2iHR7xdJsWGgWXmNtzeprNGvTKlqaTHdqEra9D9EnxWdYsRlbrti=
0IG+6QYtYExjLoYeDWOKqQLVHzTXVGJavu0h3q/QV69ST0FyE9GWpaYdyIqqN3h3RqsYTE6/Nam=
ZbQ8NDDw5YXPTHk1v1l/fUSEHs/8tKlrF42mNgZGBgYGJgWGKy43k8v81XBnnmF0ARhnPMyZ9h9=
P/4/yIsK5kPA7kcILUMDAB2yQ1geNpjYGRgYL7yX4iBgeXk//j/CSwrGYAiKOAFAJpXBwp42m2T=
P2hTURTGv3OulVIrRls0f2zTEkO0jRHF1r+YhBbEpnYQRQepthWVoOgkDkUR1MVFiDjrIIKDg2i=
GIuIiNHsdJIuREiyCDkYqVrx+9/KspTTw455373n3nPd9J7IR/idHCWM5hqtSQFrnkNM09pvjiO=
tb9OEZ0vIYRRKXBvpNHpPMT0kWO7gWpGZnmb+NjJKeII6RXQGHSZr08p2zJM87brl73Cp17DHPM=
aw37U89jW69jl59xTVHIohomc+f0C2DSMhrtOoE95sRM+Po1AqiWuV5hnlVpPQuz9I4qCcQ4nsR=
Ldo58wjQU3Zeh+x3HcJ2eYJ7UsNarhnzGRV+E8hFWWDvMTTLGyS1D1vkC5KSR4euwVbdjTYJs36=
LfaFNjKOsX2D9vSTG/BQ2aRvzb6BT7qNHRlh7H6Ly1S4YY//IPFrlm7Uyw/p15FmvyjXH7z/pdG=
fPTvOkjjr97C9/3kCWFM1tDMgkumQKKa+Ze27gvBxhD86LK9hMYtyb0YT9ILOs63xp4CX3s/KA5=
1P81gkc8JzjeZ0aOb1XwIzbae9BLvAggPqHvAeDaCcb6NG6Rf2Xwb5KPi57//7jPMggoWPUkHqv=
hL7nnNADr/9SwtTFeRCmnmH7W0Ps65/+y3C6+JgeLMV5QK/avRe8i3PUQi+bTI0972Q+Z8f5tzg=
r9It7q6nlpYDL5B25Q8pkLIjBWQIqSJC4Q0rsteRX979Z79ARPGTehVUu5wdSJIOn9ozpxzXv5U=
fO6iHO3AA6/gJawdB8AAAAAAAAAAAAAAA+AHoAwgFoAfQCjgK0AuwDIgNqA6gD4gQABCgEQASGB=
NIFRAXMBhgGhgbkBx4HkAfoCCIIgAiSCLIIxAkmCeQKKgquCxALXAvqDG4M8A14DbgOEg6CDtIP=
Ug/CEBIQgBDyEboSPhKYEwgTPhPQFCIUeBTQFPgVDhU2FVoVchWUFhAWcBbGFzgXlhf0GLYZNhm=
YGfAaXhqiG1AbzhwUHJQdBB1kHeIeOh6sHuIfYB+wH/IgSiCqIMIhIiHGIgoijCMUI4IkCCQqJN=
olFiW8JjYmUCZ4J1YndCe6KAYodij+KRwptCnyKhgqaiq0KvgrEiu4LHotVC24LgQuUC6iLy4vs=
jA8MPAxlDIuMsozbDQuNHo0xjUYNZQ2BDa2Nw43ZjfCOFI40jjsOV451jpOOso7cDvQPE49AD2K=
PhA+oD9oQB5A2EGEQhxCjEL6Q3BEAERURKhFAEV8RfRGsEcIR15HvkhKSMpJCEl4SfJKbErsS4Z=
L1ExSTNJNFk14TchOgE8ST6hQOlDOUTJRoFH6UiJSSlKIUrBS9lMmU3BTlFOsU8RT9lQoVFpUtF=
UOVWhVxFY6VmZWuFd0V5ZXuFfSWJBYqFi0WWJZ7gAAAAEAAADoAFIABwAAAAAAAgABAAIAFgAAA=
QAA/QAAAAB42sVUy27TUBCdpE6BDUJC4rGzuqFIASUBpLasIKpEkbIJSBFLx7Fjq4kT2Q5V2UQs=
WPAFiB9C8FecOXecB6RIsKHRvfd4Zu7MmUeviNySb1IT/dvc6zwd3iNy2JO7K7yP8x60Ne8GFIn=
cN1wTz/touA7NJ8N7G9iDTYUbctP7bHhf6t4Xw9fkg/fV8HU5adw2/F3uNHqGf0irES67SZCXUe=
73o/FiEuT+IBrGs6xcyqGE8lB86cpM5nIpuaQylkRKyNpyLEdYj4iOpSNNSF/CopQCK5dIAplCd=
iYZ/DymvkvZkJ5G8BVR2pMX0PvyDnEWOAPe9hEpIhoitg/rHJoMviPc9cFItVN4KvBLcTeDdIF9=
RI36meC3m9UceMY9haxkhHV+Bb5K6NVfYSxDq4LiKfAI1rF9F7AbIlYKqwgMqjt6Kocm2WTknZN=
/anxS3FswJ42Y8Hx6Becu9Fqb0vI7xK79eQsWc95sY83oT7lklMWsjMup4rAZqcsbrg75X3lTnJ=
vXS9ZU/cwhLWhbRbtgLon5chWosg9xut49X3XlPadDq9Q0rgHvKUoZOYNVadX2TTYBjmmXkmFA3=
77NRTULrospGagutu6F8H11rVz833vywCZFJ1MZT9mf8xUn5XBOthfk52Z+RE3ByAl1ynDIWdGv=
XznrTK8nLjUPuzLZ7uv2tGz3dZ3pCb4OkNsZLN5g9eUU/489engF1IfsFPs6J9fBsc1wZBO9uw6=
O15/ehQOsJVcHe4svip7L/8jp39+xAd+rqrq+5TIwNq/RywmlLe7PUP023lHdO5B0IG/Lk59ypQ=
TdAAAAeNptz1VoFQAAQNGzZ8zubmf3s9sZm+3s7nbGzNkxY7aiCPqlWAgqdmJ3J3Z3d/7qw28v3=
P97BfzjT4wa/sfbkGECkkgqmeTCpZBSKqmlkVY66WWQUSaZZZFVNtnlkFMuueWRVz75FVBQhEIK=
K6KoYooroaRSSiujrHKCyqugokoqq6KqaqqHWmqqpbY6ItVVT30NRInWUCONNdFUM821EKOlVlp=
ro6122uugo04666KrbrrroadeeltnlkSHLQ/9zLbYAitttN589820zHc/LLLCXCc99s0qm/zy02=
9rbXHeWVv10dcS/VzU3zkXXHXJZVe8M8AN11y3zUBfLXXbTbcM8sEn8wwWa4hhhoqz2nAjjTDKa=
PHGGGuc98abaIJJpphsvzWmmSrBdB99dsAdz72w3Q4vvXLQa29scNczDzz0yFP3PLHTLnvtc8pu=
e5w2wwlzbHbGEUcdstCXsIBjjofHx8VGB4PBv9TtcTQAAAB42kXOzQ7BUBQEYFepVov+3P4RQSQ=
29zW0m27Eqk08h4WVjSXPcmrl7ZjIcezmm2SSean3jdS9V5NzaDqlHm1X2abZUNDWpI8I13ZJtj=
k1PbLWJVlmT4N1+bQmffPFEBj8YAPDC2ME2DuGA4y2DBdwNowx4K4YHjDOGT7gRYwJ4DMUTfnKD=
O103jedVZ3BAJyFwhAM9sIIDBfCGIz+Ww3GhTABdSZMwSQVZmCaCHMw08ICzGPhHCyELWnzASCe=
ZioAAVHds3QAAA=3D=3D") format("woff"); }

@font-face { font-family: Charter; font-style: italic; font-weight: normal;=
 font-stretch: normal; src: url("data:application/font-woff;charset=3Dutf-8=
;base64,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
EiQSnhMUE+wUgBTgFXwVyBY0FooW+hc8F3IXiBfEF+gYBBgmGJwZFBlWGfgaVhrMG3QcLhyaHSo=
dqh4KHugfmB/iIHAg/CFKIcQiNCLkI0wjuiQaJJglBCViJX4l2iaAJsAnpCf8KGwo/ikkKdgqFC=
q+K0QrYCuKLGwsiizQLSAthi4gLj4u2i8aL0QvpjAAMFAwbjEkMd4y7DNsM9o0SDS6NWY2CDaoN=
4g4JDjeOZg6WjtEO5Q75Dw4PLo9Tj4GPmA+vj8eP7JAOkBUQM5BcEIUQrpDkkQIRJJFTkXQRlJG=
2EecSFJJDEmySjJKnksKS3pMDExqTMZNKE2sTh5PEE9oT8RQJFCyUTJRdlHoUqBTWFQWVPhVglY=
gVtZXJle4WExY/lmOWjBavltqW7ZcMFy+XOZdDF1AXWxdsF3mXjJeVl5yXo5ewl70XyZfgl/cYD=
BgdmDgYQxhYmJQYmxiimKkY2ZjgmOOZFBk/gAAAAEAAADoAFIABwAAAAAAAgABAAIAFgAAAQABk=
AAAAAB42sVUTW/TQBCdpE6BC0IcCkerF4oUUBJAouUEUSWC6KUgRRztxKlXTZzIdqjKJRw48AsQ=
vwjBv+LN23E+IEWCC41293lmdubNR1dEbsk3qYn+re91nh7vEHkcyN4S7+K8A20tuAFFKncN1yQ=
IPhquQ/PJ8M4aDmBT4YbcDD4b3pV68MXwNfkQfDV8XY4atw1/l73Ga8M/pNWIF900ysskD3tlNH=
aDsJ/Eo2lWLuRABnJfQunKVGZyKbk4OZNUSsjacihPsR4QHUpHmpC+gEUpBVYuiUQygawnGfw8p=
L5LWUxPQ/hKKD2R59CH8g5x5jgj3g4RKSGKETuEdQ5NBt8J7oZgpNoJPBX4OdzNIJ1jH1Kjfsb4=
bWc1A55yd5CVjLDKr8BXCb36K4zlwKqgeAI8hPXIvgvYxYjlYJWAQXVHT+XQJJuMvHPyd8bH4d6=
cOWnElOfjKzh3odfalJbfAXbtz1uwmPFmG2tKf8olo2zEyvicKg7rkbq84euQ/5U3xbl5vWRN1c=
8M0oK2VbQL5pKaL1+BKvsBTt+7Z8uuvOd0aJWaxjXiPUWOkTNYlVbt0GRj4BHtHBlG9B3aXFSz4=
LvoyEB1I+veAL6vrpWP/3tP7tmk6GQq4wn7c77kpBzOyfaC/PzMD6kpGDmlThnGnBX9+pWzzvRq=
4px52JbJZl83p2Wzr6tMj/C1j9x6sHiDdSrH+H88oYeXQKeQHWNf5eQ7eGYznNhEb6+D5/Wnd2E=
fa8HVwd7ii6Ln4j9y+vd3rM/3qqpuaLn0jc0r9HJMaYv7E1S/jXdU9w4kHcjb8ugnaqoEVAB42m=
3P1WsVAABG8d+uMXt2d7fX7pybs2Z3tzNmzu6ps1EEfVIsBBU7sbsTu7s7X/X+AX5wHg+cTwBp+=
Rurlv/tXYgwAckkl0JK4VJJLU3ISSe9DCJklElmWWSVTXY55JRLbnnklU9+BRRUSGFFFFVMcSWU=
VEppZZRVTnkVBFVUSWVVVFVNdTXUDLXUVkdd9dTXQEONRGosSrQmYjTVTHMttBSrldbaaKud9jr=
oqJPOuuiqm+566KmX3vpYb7Y5jlgR+jPXEgutsskGCzyQaLkfflpspXlOeeK71Tb77Zc/1tnqgn=
O26aufpfq7ZIDzLrrmsiuuem+gm667YbtBvlnmjltuG+yjz+YbIs5Qww0Tb40RRhlptDESjDXOe=
B9MMMlEk001xQFrTTfNDDN98sVBd73w0g47vfLaIW+8tdE9zz30yGPP3PfULrvts99pe+x1xiwn=
JdnirKOOOWyRr2EBx50IT4iPiwoGg/8A6nRxP3ja28H4v3UDYy+D9waOgIiNjIx9kRvd2LQjFDc=
IRHpvEAkCMhoiZTewacdEMGxgVnDdwKztsoFFwXUTcziTNojDuIEVKsoOFGWdzKS9kdmtDMhlA3=
LZU+BcDgXXXQys9f8Z4CKcQAUcmjBu5AYRbQARISnsAAFR3bN0AAA=3D") format("woff"); =
}

@font-face { font-family: Charter; font-style: normal; font-weight: bold; f=
ont-stretch: normal; src: url("data:application/font-woff;charset=3Dutf-8;b=
ase64,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
/r5nvjalfnp7t4fETYktjaduvQEKqGkP8AOYq0SwAAAHjaY2BkYGBgYmBwVLyeE89v85VBnvkFU=
IThHHPyFxj9P+q/CMs75sMMjAwcILUMDABVtgzRAAAAeNpjYGRgYL7yX4iBgZX9f9T/aJZ3DEAR=
FPACAIvCBoR42m2ST0iUURTFz72PCGsic6wpM2ds/NQZo74RJEMylIxisoIZUxItZtHKamGLKCv=
6s4hqW7RrFW2ErF20iNkIURStWtSizVAwRCEjVESv816jiDjw47557373vnfOlST8TwYJ15LHuO=
SQ0s/o1gHsNRcQaAldeIKUTGOUBFJBl+nDlDQjLgfQwtgvZVtifjs5Q0KSJlvIbrKLHK7updnjJ=
NnPGtdcHRflC5LmHrJ6x87reWzTK7zDG8Y8aUeDzrL2TzRJgbxHRG+jSePYaibZ4wP5wfysj236=
EHHtRo+OolaLqNdLtmyeQfUyoAXWP4Yd8gK3eOdfjGnzFa/4JpDjmmCfPtTIJyTZO9AI3zvEXm3=
YrkOolQz7p+yMplAnIWJmir3G0MhvAj2KTbqP+Y+wWV5Sr9OI6ghiKva3iVurUaxVY//Id+yUb6=
SCd4y9fP+w053a9JAOHWetHO/mzis+L2cm0CsP2LtInZxm7j/vK4ew0XtxFQnSyL232m9fSxlR7=
0sF09w/KE95VkSHuYGBKg3UvNXrvQLmop31HuSrHlSh/uu8BwXEyBp6tH5R/2XwXnf92nmwFOdB=
Fgm9jjqv9woYUD/nQeS/BwtIxs57DzLWkjndw5wF/ZfhdPFr58FS6AG9qvdeZPwc1Uho/5o59h1=
jPmfH+bc4K/SLvkSo5akqBfKc3CQzZJhMuBniLAEWnSQkzfIRnSQkLTzf4NAjuM+8kVWrETAnSV=
rx2J4wCZzzXpY4p2c5V5OI/wPgjM9rAAAAAAAAAAAAAAAAAABMAKoBIAHCAlYC9AMsA2gDpAPsB=
CoEZASEBLQEzAUOBU4FwgZMBpYHBgdsB6YIGAhyCK4JCgkcCTwJTgm4CnoKwAs+C6IL9gyODRIN=
kg4aDloOtg8oD34P/hBwEMARMhGqEkQS0BMqE5gTzhRkFLYVEBVkFY4VpBXOFfIWChYsFqoXDhd=
iF9QYLBiIGWAZ4ho6GpwbEBtWHAAcfBzCHTwdqB4SHqIe/B9kH5ogGCBmIKghACFkIYAh5iJeIq=
QjJiO2JCYkriTUJZYl1CaCJwInHCdEKC4oUCiWKOIpUinoKgYq0CsQKzwrjivcLCgsQizoLbAul=
i8EL1IvoC/0MIYxCjGWMlYy/DOkNE40/jXYNig2eDbON0w3wDh0OM45KDmIOhY6ljqwOyI7njwW=
PJY9Nj2YPhQ+wD9IP9BAYEEmQd5ClENAQ9pEPkSiRQ5FnkXiRiRGbEbkR1JIEEhiSLRJDkmQShB=
KUkrCSzRLpkweTLhNAk18TfxONk6oTv5PuFBEUORRiFIgUoJS7lNSU3pTolPgVApUUlSEVNBU9F=
UMVSRVXFWYVdJWNlaeVwZXUFfKV/ZYVFkcWT5ZYFl6WjhaUFpcWwpblAAAAAEAAADoAFcABwAAA=
AAAAgABAAIAFgAAAQABHwAAAAB42sVUTW/TQBCdpE6BC+oBerZ6oUgBJQEkWk40qkQr9VKQIm7Y=
sV1bTZzIdqjKgUgc+AWIn4TgX/Hm7TgfkCLBhUa7+zwzO/PmoysiO/JNGqJ/q3uTp8NbRA57cm+=
Bt3Heh7bh3YEilV3DDfG8j4ab0HwyvLWCPdjUuCV3vc+Gt6XpfTF8Sz54Xw3flsPWjuHvsts6Nf=
xDOq13834aFFVc+EeTUeQP4jCZ5NVc9mUoD8WXvkxkKtdSSCYXkkoFWVcO5DnWI6ID6Ukb0iNYV=
FJiFRJLIGPITiSHn8fU9ykL6SmCr5jSM3kJvS9vEWeGM+BtH5FiohCxfVgX0OTwHeOuD0aqHcNT=
iV+GuzmkM+wRNepnhN9mVlPgCfcMsooRlvmV+KqgV3+lsRxaFRSPgSNYJ/Zdwi5ErAxWMRjUd/R=
UDm2yycm7IP/M+GS4N2NOGjHl+fQGzn3otTaV5bePXfvzBiymvNnFmtCfcskpS1gZl1PNYTVSnz=
dcHYq/8qa4MK/XrKn6mUJa0raOdsVcUvPlKlBnP8Tpevdi0ZX3nA6tUtu4BrynKGPkHFaVVds32=
Qg4oV1GhgF9+zYX9Sy4LmZkoLrEujeE75tr5eL/3pMHNik6mcp4zP5cLjgph0uyvSI/N/MRNSUj=
p9Qpw5Czol+/ctaZXk5cZh42ZbLe1/VpWe/rMtNDfO0htxNYvMY6l2P8P57Rwyugc8iOsS9zch2=
8sBmObaI318Hx+tO7sIc15+ph7/BF0XP+Hzn9+zs24HtVV9e3XAbG5hS9HFHa4f4M1e/iHdW9B0=
kP8q48+QkdfANlAAB42m3PVWgVAABA0bNnzO5uZ/ez2xmb3d0dmzFzdsyYrSiCfikWgoqd2N2J3=
d2dv/rw2wv3/14B//gTo73/8TZkmIAkkkomuXAppJRKammklU56GWSUSWZZZJVNdjnklEtueeSV=
T34FFBShkMKKKKqY4kooqZTSyiirnKDyKqioksqqqKqa6mqoqZba6ohUVz31NRAlWkONNNZEU80=
010JLrbTWRlvtQv0ddNRJZ1101U13PfTUS299rDNLosOWh35mW2yBlTZab777Zlrmux8WWWGukx=
77ZpVNfvnpt7W2OO+srfrqZ4n+LhrgnAuuuuSyK94Z6IZrrttmkK+Wuu2mW2J88Mk8g8UaYpih4=
qw23EgjjDJavDHGGue98SaaYJIpJttvjWmmSjDdR58dcMdzL2y3w0uvHPTaGxvc9cwDDz3y1D1P=
7LTLXvucstsep81wwhybnXHEUYcs9CUs4Jjj4fFxsdHBYPAvObxxaAAAAHja28H4v3UDYy+D9wa=
OgIiNjIx9kRvd2LQjFDcIRHpvEAkCMhoiZTewacdEMGxgVnDdwKztsoFVwXUTcyCTNpjDAuSw2k=
M5bCCZaVAOO5DDZgflcAA57FJQDieQwyEO4TBu4IIayw0U5eJl0t7I7FYG5PIouO5i4Kr/zwAX4=
QUq4HGBcSM3iGgDABesNkgAAAABUd2zdAAA") format("woff"); }

@font-face { font-family: Fira; font-style: normal; font-weight: 300; font-=
stretch: normal; src: url("data:application/x-font-woff;charset=3Dutf-8;bas=
e64,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
rMQzuUGcrkkYNzIDSLaACAmL98AAVOGVSwAAA=3D=3D") format("woff"); }

@font-face { font-family: Fira; font-style: italic; font-weight: 300; font-=
stretch: normal; src: url("data:application/x-font-woff;charset=3Dutf-8;bas=
e64,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
wAAA=3D=3D") format("woff"); }

@font-face { font-family: Fira; font-style: normal; font-weight: 400; font-=
stretch: normal; src: url("data:application/x-font-woff;charset=3Dutf-8;bas=
e64,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
ABU4ZVKwAA") format("woff"); }

@font-face { font-family: Fira; font-style: normal; font-weight: 600; font-=
stretch: normal; src: url("data:application/x-font-woff;charset=3Dutf-8;bas=
e64,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
4mL8wsDKwMLUxRTBwMDgDaEZ4xiMGG24OJi4WZlZGRiYGFgaGJjeOzAs+A1UowDEDAGRQcGMBxh=
4fzMxC/7XZGBgkWLiUGBgnA+SYxJk2gxWxw0AkX0NwgAAAHjaY2BgYGaAYBkGRgYQeAPkMYL5LA=
wXgLQBgwKQJQBk8TLUMfQxzGP4zxjMWMF0jOmOApeCiIKUgpyCkoKagr6ClUK8whpFJdU/v5n+/=
webxQvUC9KxgDEIqoNBQUBBQkEGqsMSroMRqIPx/7f/T/5f/X/s/9H/xf/9/zH9ffvg1IOjDw49=
OPhg34PdDzY/WPWg7YHV/aO33rC+gLqWJMDIxgDXxsgE9TeKAgYGFlY2dg5OLm4eXj5+AUEhYRF=
RMXEJSSlpGVk5eQVFJWUVVTV1DU0tbR1dPX0DQyNjE1MzcwtLK2sbWzt7B0cnZxdXN3cPTy9vH1=
8//4DAoOCQ0LDwiMio6JjYuPiExCSGzq6evmmzFy5bunzlilVr1q1dv2HTxs1btu3YvnP3rv37D=
hxkKE3PyHlQvaQ473llLkP3XIYyBoasKrDr8usZVu9tSSsEsQsaHqa2dsw6euzGzbv3bt3ew3Dk=
OMOzx09evmKouXOfob2/bULvpMlTJs6YyTB9/oJ5DCdOlgA11QIxAFPqkZQAAAACEQKzAGIAmwB=
TAFgAWwBcAGkAfQBNAIUAgABzAHkAbwCFAIsAogBgAHEARwBCAD8AIQJ5AAB42l1Ru05bQRDdDQ=
8DgcTYIDnaFLOZkMZ7oQUJxNWNYmQ7heUIaTdykYtxAR9AgUQN2q8ZoKGkSJsGIRdIfEI+IRIza=
4iiNDs7s3POmTNLypGqd+lrz1PnJJDC3QbNNv1OSLWzAPek6+uNjLSDB1psZvTKdfv+Cwab0ZQ7=
agDlPW8pDxlNO4FatKf+0fwKhvv8H/M7GLQ00/TUOgnpIQTmm3FLg+8ZzbrLD/qC1eFiMDCkmKb=
iLj+mUv63NOdqy7C1kdG8gzMR+ck0QFNrbQSa/tQh1fNxFEuQy6axNpiYsv4kE8GFyXRVU7XM+N=
rBXbKz6GCDKs2BB9jDVnkMHg4PJhTStyTKLA0R9mKrxAgRkxwKOeXcyf6kQPlIEsa8SUo744a1B=
saR18CgNk+z/zybTW1vHcL4WRzBd78ZSzr4yIbaGBFiO2IpgAlEQkZV+YYaz70sBuRS+89AlIDl=
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3D") format("woff=
"); }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 300; font-stretch: normal; src: url("data:application/font-woff;charset=
=3Dutf-8;base64,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3D=3D") format("=
woff"); }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 400; font-stretch: normal; src: url("data:application/font-woff;charset=
=3Dutf-8;base64,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
bo4BNVua8WVLBKiZrSgjLPII5qQW8PyXoq2pDFKrWZCSHchhreAHSoF6ZoODM4i92xqWdapjXy1=
pr7zZ0cUiHq+nuTRZajiX+C9GeQ/Oo6Yp1JQZ3Lc12xwJJlCljY91TTecDT/znfcCO/YeOKBStr=
Y+23GW3BZrTXY1pRKRprZ2MHysA4nUv8BONDPOTABP/gJJD2f/1KV+8hJ5lfaB3srlfWj3hst9o=
Fa5D5Sj9ZuiyYpx7ELAirpxSUO7QtUGWlWhMbCO0Do6w0JBi/MlL3ZEamwgxJ2+EO0NFWineBgd=
Nk5ts8s1MIOKWNplVlS5WhWz7VRjutwN2pvZkOvYeO381be1DCYSgy3xmnbQTK5t6wLvkEN5VJN=
zfI8iBbLVAF7vzMoOSGOlA9KxVgekU+6ABGmh1RtZTzkx0gh+dQ+kO6pY0QfZtXfH+q01vZCK1M=
niBtYOWQOXZS24tP8JuHRW2+v3ZqKxsrI/U9ix94aaHk0yd/LkCrjcq+GyVuCqWwsuTxVcBloHC=
HBZacKnCq5sGl0PzUqaJfdv2T86qhwN1tCN/+rJk2NjZdKVYUwDjB7g2MdWwugtwYg5F6pJU0tm=
gxuHUOHUqlSJm2XQwe7C2WroU4Br56FuhehLFQR2Taggh7zt0bJxDFZhiTcQhyxUMRlPcGJVsBp=
NWhYC3JymDb+Y916BcJOqLeqfEsLa9tKLWsz/tKO/qys50NVVHGPYK2Xc2+jsIh/YOQ+uxN5Rxl=
7AaWYFg4ZzUseTYBamFm2zhWvGcXu0frZQz97VVxBuxqw+IJwnalo46xekOvQx6215XuWkipVgE=
W1dNdZVZUllBqy6VsK9w+dy+v1Ol69BxvkYvsGLMvKvsXf+YgPjz3fI79HWK9HhOOVTpMMHLnuC=
cCpAqOyt22WbsIYW6Ej62Xb7V3rn1bSwatB01IJkr/dTHjcZPXaqQF3obOpylVMoNWJmy8V62Va=
cR0V15VaVR7ryjHq6muOZTLy5q83ndPj8dqev9sR+NNbZGYt3dMTr/P46N1KGv3QJHjbTGnwXTr=
ChXSVcuqaJV7SlCmarEcljVmB7rbHcXutOisYLWDejM7K6BGqz6fhShy3r7GSJTKWKdrl2dEZJR=
I7/pp2RDKIp4BAYQpRk9Ivvec83iq+c2XDoPoU5Z+QfG/+ziV9NfPnLhCcbmx4N0/7qBO2vjnDb=
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
K785Kjo94lAq97F3ljeXKyZr+LnWYbASRFfQ3ZzgLARJziBVsy+Q//laLqcZMTg5xmrGmmY9o4H=
JpsxPPkHzK/bt+/NUkA3XCXHmSj+WuvsaPW8qK66NVLrOfz6S6JHu4S338ZWNyG/G7FNt+/sPRi=
iDlt9jTxejts69fJ3L6dFqRzYM818RFz5/5338ykZbtsVdVWq4l+E52P/Denppz2JWosekohpnR=
i48lhh0lvbpBbNjZc8dlltqDmNtfy/6MZA1+/NlAfHQvvvuE9Mg4/hVXPW8u3jDJ3ick8NzCndu=
4p8tLtBnYuu/MdbNpK5ZSzXPJyA5bDTxYu1djK8J73TEW3nZWseJV5DvRuL/LGB5uSbk+f4znP1=
ovB3pdZBV/HOK+3mQ484nAXd2Vznlioklq6qmanvvkXjmDTzM8GJbxmW/iOU05HbP8wy/OnQrhU=
zctuJd52b//+dk++xy+naX0yYGm/3M7ud9Q1TLqT1jWeLJS+LZ6pruxnK2P926iy5WP8Wqunxay=
xnfP8vTu7Nj1SLZz0kLrQvLfoZnae4pWw/PB/rqJfW8xL1z/OtBP6/qUJw5x7ngCV3RO9+e3H8I=
Br7ETu+M+l1hLp7jkj713N/Ks4cIv/WvL4HmCcY21TfyTKyHWTvUjiBrF0/+mtJPj9B6XEGntnp=
B176Q9do0yjwpvIAsLGmfrrtVQ6nOsaKRjJE5Jh34boPmPsd8Wv4akNLttpXzVCRtACM9cx/PKa=
+A9SWuXtF3l/rxc8sGdGZp29DhlO6zLk1IwJZgiY7xLPRb9HhBcvUhRRcc5J41aHiJf7zo8XrVL=
3GVJeuIlS9Rx5hZ6oIly6Hx/9qu3IP+LTwlMgwpyxHB0i2segkrNAX7hjzT9NFh7B0Da/hHRwPy=
vrA2KMprZgttUMUBs8ILaNEEHi307uGE4hgztex4PfIS1/venMxutnzLw/BYTi+a6itatSnMaQC=
hUAv2Ay2/04JxbsjnsY0evo3bYsNja9EOuFRG5SU8roleDdijZ1E4hZdeiORXHo+MHa+EhR0rWY=
iv8RbTb58IwXOZtUMLnuApd0sk7Fk07p6Xo9fr/8/nCXLuDPVYHeMX1HqJMyVXl/I/tU6RDXkno=
f+/Fak/4N5ntN4RvZ5T9fCp/W/QR/8GgayfYgB42m3PR0zTcRTA8e+D0kLZe4t7j///X8pw0krr=
3nuLAm0VAYtVcRtwg9GYeNO4LmrcokajHtS4VxxRD57d8aBetfj/efNdPnkveYsI/sbvNgz+Fx9=
AIiSSSCxEYcVGNDHYiSWOeBJIJIlkUkgljXQyyCSLbHLIJY98OlBARzrRmS50pRvd6UFPetGbPv=
SlH/0ZgIYe3u2gECdFFFNCKQMZxGCGMJRhlOHCzXDK8eBlBCMZxWjGMJZxjGcCE5nEZKYwlWlMZ=
wYzmcVs5jCXecxnAQupEAtHaWYL19kf/mgru9nFAY5zTKLYyTua2CdWsdEq0WznFu8lhoOc4Cc/=
+MURTnGfu5xmEYvZQyUPqeIeD3jKIx7zhI9U84JnPOcMPr6zl9e85BV+PvOVHSwhwFKWUUMth6h=
jOfUEaSDEClayik+sZg2NrGU967jCYTaygU1s5gvfuMpZznGNN7wVu8RKnMRLgiRKkiRLiqRKmq=
RLhmRyngtc4jK3uUgbd9jGScniBjclW3JokVzJk3yrr6ax3q/bQrUBTdPKTV2aUuVuQ+lQOpWl7=
RrhRqWuNJQOZaHSqSxSFitLlP/muUx1NVfX7dUBXyhYVVnR4DdLhtfU6bV4QsG69sSj7vC6zTvC=
Gn8A1t2aJAAAAHjaPcw9EoIwFATghEgg8peC1plYv1ZuYGhoHCoy4zlssbETL+AlHlaOl8OnxnT=
77ezsky8X5BPrMD0MM+c3N7cShi1q12HdUzi7DUo4DgyFsShgj9LYhxgj+CImyN5jRYgbj+Qzmz=
xSQqJ/4Kj8U0Gtgghm0Z6IObFoAjNifg9cE7NdYGnsi6lxYaGpaFBeAzWx0n86rOENmlNEXgABU=
n2AYAAA") format("woff"); }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 500; font-stretch: normal; src: url("data:application/font-woff;charset=
=3Dutf-8;base64,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
gF0AAA=3D=3D") format("woff"); }

@font-face { font-family: "Source Code Pro"; font-style: normal; font-weigh=
t: 600; font-stretch: normal; src: url("data:application/font-woff;charset=
=3Dutf-8;base64,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
l5QUkxcoIB9ZOCpDpJqwk7NNYJ3HsGJGccFGN2eGxm7a0Rn92unoibmW1vC+qw4dfPKuY7ccnJp=
Yuyvdtznj72nJbe3Pb+6fG21Xh3J97erU9pkD5h3Jri07Lc5AujA2ddWaLdHWdDTo1ofINV25XF=
dnfz/qoRkax3uFc3Dra7EBKrOseO6clGMdLCLkkKMDoNXRqnNwVJXDWQNFy0loSDWIJTe63jQpK=
cws6mb3PrvYkYkNJEAKXTP7p5X/SaLD+eaWisRkKCYsPsF/h9OANbGdK6qpZY5ggELCZLrByEKY=
ahb4UNMaOjUGilT2klNltoJBYMYyBMlsZkaHSo3ZMMz3FZjJDuC00lMDRvUsWX86mo4nurvXk0f=
3VNzk0e9MdHZOpCgsvZcyFBYr6MXDXNEgC0PMHqgYlzmMrGrjstASuGYlp8kN0NjNWAcguc2sds=
OkBWgcHi/zgSxK+hlMFeAPJrepQnfFYw4FyN54f3a451tk/d9seh+D9ZPb/YUR8u49lfBfqwZlg=
FltxgTsoZnrqsWjNARDRZcHozTLglF5DEYlde7di+rv3v2Fv7rzif38K5W1P/xK5W+/t/9uZh+t=
o7HQV4Aew0xCo56m6Sg5rmxhm2Khm2JBOUDjyhp0Q/UFkRNEHUsBo1vDZFVOWEesuxI9wZnCjt3=
81Xve+Nke546mw3tJma3ZAzjl4Ow3cdfL9p7VDT4GsgRlT/ByUDOIDnDaQhTJJnAyeNeS2MRUqd=
tCXX70eazwThhz6zzlUBqgQbhsgmjEoIwftkal1hdkmoBZDIdUNhAE1KbKU89Og6p17XpH27q+w=
vXtiabdHbEm8rOxjTMz26Yqz5Dtq0YqH2WPXPVsAQ4Obmtd3E3BYNkBo+nI5SeMbzhhBLMZKnU9=
mPVn7IBBPbtPPmTkZ1Nzl50x1LVxgKchZqRoe4f+rWNGcm10fcwov0LMKPfeP38v/Nw8eWZy4pa=
JX5955JEzNz3yyE1T8/NTG+fnFZtplMKCNtMRrmYu1cgDNhPwmKI07Sasf6VEsjfaSnaZSDVbyV=
xvKxGFZF6ZZLLo9bqFmrUEun7D7IFr75lfP6buHcyjsfQK/8mBiQdP3/ro4NwTZDUzlygNR3kth=
TuI+r5qqugQbsVeAXtkmckCuyp6qiaLzkIlVYj6/4rJoquaLFaaS5MNFl29wQKnFaRE/nKDZeu4=
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
0czEaaBZiXf0oqxBtIPVDjAAFSfYBdAAA=3D") format("woff"); }
------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://course.ccs.neu.edu/cs5004/manual-racket.css

@charset "utf-8";

.RktIn, .RktRdr, .RktPn, .RktMeta, .RktMod, .RktKw, .RktVar, .RktSym, .RktR=
es, .RktOut, .RktCmt, .RktVal, .RktBlk, .RktErr { font-family: Fira-Mono, m=
onospace; white-space: inherit; font-size: 1rem; line-height: 1.5; }

a.RktValDef, a.RktStxDef, a.RktSymDef, span.RktValDef, span.RktStxDef, span=
.RktSymDef { font-size: 1.1rem; color: black; font-weight: 500; }

.inheritedlbl { font-family: Fira, sans-serif; }

.RBackgroundLabelInner { font-family: inherit; }

.inherited { width: 95%; margin-top: 0.5em; text-align: left; background-co=
lor: inherit; }

.inherited td { font-size: 82%; padding-left: 0.5rem; line-height: 1.3; tex=
t-indent: 0px; padding-right: 0px; }

.inheritedlbl { font-style: normal; }

.RktIn { color: rgb(204, 102, 51); background-color: rgb(238, 238, 238); }

.RktInBG { background-color: rgb(238, 238, 238); }

.refcolumn .RktInBG { background-color: white; }

.RktRdr { }

.RktPn { color: rgb(132, 60, 36); }

.RktMeta { color: black; }

.RktMod { color: inherit; }

.RktOpt { color: black; }

.RktKw { color: black; }

.RktErr { color: red; font-style: italic; font-weight: 400; }

.RktVar { position: relative; left: -1px; font-style: italic; color: rgb(68=
, 68, 68); }

.SVInsetFlow .RktVar { font-weight: 400; color: rgb(68, 68, 68); }

.RktSym { color: inherit; }

.RktValLink, .RktStxLink, .RktModLink { text-decoration: none; color: rgb(0=
, 119, 170); font-size: 1rem; }

h2 a.RktStxLink, h3 a.RktStxLink, h4 a.RktStxLink, h5 a.RktStxLink, h2 a.Rk=
tValLink, h3 a.RktValLink, h4 a.RktValLink, h5 a.RktValLink, h2 .RktSym, h3=
 .RktSym, h4 .RktSym, h5 .RktSym, h2 .RktMod, h3 .RktMod, h4 .RktMod, h5 .R=
ktMod, h2 .RktVal, h3 .RktVal, h4 .RktVal, h5 .RktVal, h2 .RktPn, h3 .RktPn=
, h4 .RktPn, h5 .RktPn { color: rgb(51, 51, 51); font-size: 1.5rem; font-we=
ight: 400; }

.toptoclink .RktStxLink, .toclink .RktStxLink, .toptoclink .RktValLink, .to=
clink .RktValLink, .toptoclink .RktModLink, .toclink .RktModLink { color: i=
nherit; }

.tocset .RktValLink, .tocset .RktStxLink, .tocset .RktModLink, .tocset .Rkt=
Sym { color: black; font-weight: 400; font-size: 0.9rem; }

.tocset td a.tocviewselflink .RktValLink, .tocset td a.tocviewselflink .Rkt=
StxLink, .tocset td a.tocviewselflink .RktMod, .tocset td a.tocviewselflink=
 .RktSym { font-weight: lighter; color: white; }

.RktRes { color: rgb(0, 0, 175); }

.RktOut { color: rgb(150, 0, 150); }

.RktCmt { color: rgb(194, 116, 31); }

.RktVal { color: rgb(34, 139, 34); }

.together { width: 100%; border-top: 2px solid white; }

tbody > tr:first-child > td > .together { border-top: 0px; }

.RktBlk { white-space: pre; text-align: left; }

.highlighted { font-size: 1rem; background-color: rgb(255, 238, 238); }

.defmodule { font-family: Fira-Mono, monospace; padding: 0.25rem 0.75rem 0.=
25rem 0.5rem; margin-bottom: 1rem; width: 100%; background-color: rgb(235, =
240, 244); }

.defmodule a { color: rgb(68, 68, 68); }

.defmodule td span.hspace:first-child { position: absolute; width: 0px; dis=
play: inline-block; }

.defmodule .RpackageSpec .Smaller, .defmodule .RpackageSpec .stt { font-siz=
e: 1rem; }

.defmodule .RktPn { color: inherit; }

.specgrammar { float: none; padding-left: 1em; }

.RBibliography td { vertical-align: text-top; padding-top: 1em; }

.leftindent { margin-left: 2rem; margin-right: 0em; }

.insetpara { margin-left: 1em; margin-right: 1em; }

.SCodeFlow .Rfilebox { margin-left: -1em; }

.Rfiletitle { text-align: right; background-color: rgb(238, 238, 238); }

.SCodeFlow .Rfiletitle { border-top: 1px dotted gray; border-right: 1px dot=
ted gray; }

.Rfilename { border-top: 0px; border-right: 0px; padding-left: 0.5em; paddi=
ng-right: 0.5em; background-color: inherit; }

.Rfilecontent { margin: 0.5em; }

.RpackageSpec { padding-right: 0px; }

.RBackgroundLabel { float: right; width: 0px; height: 0px; }

.RBackgroundLabelInner { position: relative; width: 25em; left: -25.5em; to=
p: 0.2rem; text-align: right; z-index: 0; font-weight: 300; font-family: Fi=
ra-Mono, monospace; font-size: 0.9rem; color: gray; }

.RpackageSpec .Smaller { font-weight: 300; font-family: Fira-Mono, monospac=
e; font-size: 0.9rem; }

.RForeground { position: relative; left: 0px; top: 0px; z-index: 1; }

.RPartExplain { background: rgb(238, 238, 238); font-size: 0.9rem; margin-t=
op: 0.2rem; padding: 0.2rem; text-align: left; }
------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://course.ccs.neu.edu/cs5004/extra-styles.css

@charset "utf-8";

.ProfjType { color: rgb(119, 0, 68); }

.ProfjPrimType { color: rgb(119, 0, 68); }

.ProfjKeyword { color: rgb(119, 0, 68); }

.ProfjString { color: rgb(0, 0, 255); }

.ProfjLiteral { color: rgb(103, 115, 123); }

.ProfjConstant { color: rgb(42, 149, 157); }

.ProfjComment { color: rgb(0, 119, 0); }

.ProfjBlockComment { color: rgb(0, 119, 0); }

.RktKw { color: rgb(0, 0, 119) !important; }

.RktSym { color: rgb(0, 0, 119) !important; }

.IncerciseBody { padding: 0px 0px 0.5em 10px; border-left: 5px solid red; b=
order-top-width: 5px; border-right-width: 5px; border-bottom-width: 5px; bo=
rder-top-color: red; border-right-color: red; border-bottom-color: red; bac=
kground-color: rgb(255, 235, 205); }

.ExerciseBody { padding: 0px 0px 0.5em 10px; border-left: 5px solid orange;=
 border-top-width: 5px; border-right-width: 5px; border-bottom-width: 5px; =
border-top-color: orange; border-right-color: orange; border-bottom-color: =
orange; background-color: rgb(255, 235, 205); }

.Incercise { font-weight: bold; font-style: italic; background-color: rgb(2=
55, 118, 103); padding: 5px 0px 5px 10px; margin-left: -10px; }

.Exercise { font-weight: bold; background-color: rgb(255, 177, 103); paddin=
g: 5px 0px 5px 10px; margin-left: -10px; }

.InsetSpan { margin-left: 2em; display: block; }

.PaddedTable blockquote.SCentered { padding: 0px; margin: 1em; }

.versionbox { display: none !important; }

.stt .MathJax_Display { font-size: 1.18rem; }

h1 .RktIn, h2 .RktIn, h3 .RktIn, h4 .RktIn, h5 .RktIn, h6 .RktIn, h1 .RktRd=
r, h2 .RktRdr, h3 .RktRdr, h4 .RktRdr, h5 .RktRdr, h6 .RktRdr, h1 .RktPn, h=
2 .RktPn, h3 .RktPn, h4 .RktPn, h5 .RktPn, h6 .RktPn, h1 .RktMeta, h2 .RktM=
eta, h3 .RktMeta, h4 .RktMeta, h5 .RktMeta, h6 .RktMeta, h1 .RktMod, h2 .Rk=
tMod, h3 .RktMod, h4 .RktMod, h5 .RktMod, h6 .RktMod, h1 .RktKw, h2 .RktKw,=
 h3 .RktKw, h4 .RktKw, h5 .RktKw, h6 .RktKw, h1 .RktVar, h2 .RktVar, h3 .Rk=
tVar, h4 .RktVar, h5 .RktVar, h6 .RktVar, h1 .RktSym, h2 .RktSym, h3 .RktSy=
m, h4 .RktSym, h5 .RktSym, h6 .RktSym, h1 .RktRes, h2 .RktRes, h3 .RktRes, =
h4 .RktRes, h5 .RktRes, h6 .RktRes, h1 .RktOut, h2 .RktOut, h3 .RktOut, h4 =
.RktOut, h5 .RktOut, h6 .RktOut, h1 .RktCmt, h2 .RktCmt, h3 .RktCmt, h4 .Rk=
tCmt, h5 .RktCmt, h6 .RktCmt, h1 .RktVal, h2 .RktVal, h3 .RktVal, h4 .RktVa=
l, h5 .RktVal, h6 .RktVal, h1 .RktBlk, h2 .RktBlk, h3 .RktBlk, h4 .RktBlk, =
h5 .RktBlk, h6 .RktBlk, h1 .RktErr, h2 .RktErr, h3 .RktErr, h4 .RktErr, h5 =
.RktErr, h6 .RktErr { font-size: inherit; }

#tocview_1 tr > td:first-child { display: none; }

.AsciiArt { font-family: "Source Code Pro", monospace; font-size: 1rem; }

.SmallerVerb { font-family: "Source Code Pro", monospace; font-size: 75%; }
------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://course.ccs.neu.edu/cs5004/codemirror.css

@charset "utf-8";

.CodeMirror { font-family: monospace; height: 300px; }

.CodeMirror-scroll { overflow: auto; }

.CodeMirror-lines { padding: 4px 0px; }

.CodeMirror pre { padding: 0px 4px; }

.CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler { background-color:=
 white; }

.CodeMirror-gutters { border-right: 1px solid rgb(221, 221, 221); backgroun=
d-color: rgb(247, 247, 247); white-space: nowrap; }

.CodeMirror-linenumbers { }

.CodeMirror-linenumber { padding: 0px 3px 0px 5px; min-width: 20px; text-al=
ign: right; color: rgb(153, 153, 153); box-sizing: content-box; }

.CodeMirror-guttermarker { color: black; }

.CodeMirror-guttermarker-subtle { color: rgb(153, 153, 153); }

.CodeMirror div.CodeMirror-cursor { border-left: 1px solid black; }

.CodeMirror div.CodeMirror-secondarycursor { border-left: 1px solid silver;=
 }

.CodeMirror.cm-keymap-fat-cursor div.CodeMirror-cursor { width: auto; borde=
r: 0px; background: rgb(119, 238, 119); }

.CodeMirror.cm-keymap-fat-cursor div.CodeMirror-cursors { z-index: 1; }

.cm-animate-fat-cursor { width: auto; border: 0px; animation: 1.06s steps(1=
) 0s infinite normal none running blink; }

@-webkit-keyframes blink {=20
  0% { background: rgb(119, 238, 119); }
  50% { background: none; }
  100% { background: rgb(119, 238, 119); }
}

@keyframes blink {=20
  0% { background: rgb(119, 238, 119); }
  50% { background: none; }
  100% { background: rgb(119, 238, 119); }
}

div.CodeMirror-overwrite div.CodeMirror-cursor { }

.cm-tab { display: inline-block; }

.CodeMirror-ruler { border-left: 1px solid rgb(204, 204, 204); position: ab=
solute; }

.cm-s-default .cm-keyword { color: rgb(119, 0, 136); }

.cm-s-default .cm-atom { color: rgb(34, 17, 153); }

.cm-s-default .cm-number { color: rgb(17, 102, 68); }

.cm-s-default .cm-def { color: rgb(0, 0, 255); }

.cm-s-default .cm-variable, .cm-s-default .cm-punctuation, .cm-s-default .c=
m-property, .cm-s-default .cm-operator { }

.cm-s-default .cm-variable-2 { color: rgb(0, 85, 170); }

.cm-s-default .cm-variable-3 { color: rgb(0, 136, 85); }

.cm-s-default .cm-comment { color: rgb(170, 85, 0); }

.cm-s-default .cm-string { color: rgb(170, 17, 17); }

.cm-s-default .cm-string-2 { color: rgb(255, 85, 0); }

.cm-s-default .cm-meta { color: rgb(85, 85, 85); }

.cm-s-default .cm-qualifier { color: rgb(85, 85, 85); }

.cm-s-default .cm-builtin { color: rgb(51, 0, 170); }

.cm-s-default .cm-bracket { color: rgb(153, 153, 119); }

.cm-s-default .cm-tag { color: rgb(17, 119, 0); }

.cm-s-default .cm-attribute { color: rgb(0, 0, 204); }

.cm-s-default .cm-header { color: blue; }

.cm-s-default .cm-quote { color: rgb(0, 153, 0); }

.cm-s-default .cm-hr { color: rgb(153, 153, 153); }

.cm-s-default .cm-link { color: rgb(0, 0, 204); }

.cm-negative { color: rgb(221, 68, 68); }

.cm-positive { color: rgb(34, 153, 34); }

.cm-header, .cm-strong { font-weight: bold; }

.cm-em { font-style: italic; }

.cm-link { text-decoration: underline; }

.cm-s-default .cm-error { color: rgb(255, 0, 0); }

.cm-invalidchar { color: rgb(255, 0, 0); }

div.CodeMirror span.CodeMirror-matchingbracket { color: rgb(0, 255, 0); }

div.CodeMirror span.CodeMirror-nonmatchingbracket { color: rgb(255, 34, 34)=
; }

.CodeMirror-matchingtag { background: rgba(255, 150, 0, 0.3); }

.CodeMirror-activeline-background { background: rgb(232, 242, 255); }

.CodeMirror { line-height: 1; position: relative; overflow: hidden; backgro=
und: white; color: black; }

.CodeMirror-scroll { margin-bottom: -30px; margin-right: -30px; padding-bot=
tom: 30px; height: 100%; outline: none; position: relative; box-sizing: con=
tent-box; }

.CodeMirror-sizer { position: relative; border-right: 30px solid transparen=
t; box-sizing: content-box; }

.CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-fille=
r, .CodeMirror-gutter-filler { position: absolute; z-index: 6; display: non=
e; }

.CodeMirror-vscrollbar { right: 0px; top: 0px; overflow: hidden scroll; }

.CodeMirror-hscrollbar { bottom: 0px; left: 0px; overflow: scroll hidden; }

.CodeMirror-scrollbar-filler { right: 0px; bottom: 0px; }

.CodeMirror-gutter-filler { left: 0px; bottom: 0px; }

.CodeMirror-gutters { position: absolute; left: 0px; top: 0px; padding-bott=
om: 30px; z-index: 3; }

.CodeMirror-gutter { white-space: normal; height: 100%; box-sizing: content=
-box; padding-bottom: 30px; margin-bottom: -32px; display: inline-block; }

.CodeMirror-gutter-elt { position: absolute; cursor: default; z-index: 4; }

.CodeMirror-lines { cursor: text; min-height: 1px; }

.CodeMirror pre { border-radius: 0px; border-width: 0px; background: transp=
arent; font-family: inherit; font-size: inherit; margin: 0px; white-space: =
pre; overflow-wrap: normal; line-height: inherit; color: inherit; z-index: =
2; position: relative; overflow: visible; }

.CodeMirror-wrap pre { overflow-wrap: break-word; white-space: pre-wrap; wo=
rd-break: normal; }

.CodeMirror-linebackground { position: absolute; inset: 0px; z-index: 0; }

.CodeMirror-linewidget { position: relative; z-index: 2; overflow: auto; }

.CodeMirror-widget { }

.CodeMirror-wrap .CodeMirror-scroll { overflow-x: hidden; }

.CodeMirror-measure { position: absolute; width: 100%; height: 0px; overflo=
w: hidden; visibility: hidden; }

.CodeMirror-measure pre { position: static; }

.CodeMirror div.CodeMirror-cursor { position: absolute; border-right: none;=
 width: 0px; }

div.CodeMirror-cursors { visibility: hidden; position: relative; z-index: 3=
; }

.CodeMirror-focused div.CodeMirror-cursors { visibility: visible; }

.CodeMirror-selected { background: rgb(217, 217, 217); }

.CodeMirror-focused .CodeMirror-selected { background: rgb(215, 212, 240); =
}

.CodeMirror-crosshair { cursor: crosshair; }

.cm-searching { background: rgba(255, 255, 0, 0.4); }

.CodeMirror span { }

.cm-force-border { padding-right: 0.1px; }

@media print {
  .CodeMirror div.CodeMirror-cursors { visibility: hidden; }
}

span.CodeMirror-selectedtext { background: none; }
------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://course.ccs.neu.edu/cs5004/abstract_and_interfaces.png

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
9tlvv/0mHksZTE022WRuscUWc4MGDao2uTaPl+yrYAhh8sYbb3TzzTef22OPPVrw+OSTT7qrr77a
HXnkkW7GGWds8axeF2+88YZD+HjxxRfFK/QSSyzh+m3bz3WfoXu9smhoOrW291rjN7RwbZh4s/QB
lUJw5plnuv3228/x7iyzzDKuvZaj0nK3dnh1ZNjYEUZrl8ryMwQMgaoQ+Omnn9wll1ziLrzwwhbx
EciuvPLKFsJYiwAd5OLll192r7zySgcpTf2L8eCDD7o11ljDMZhvFsriqa3qspp8s8pQC8aDBw+W
ejrooIPcDz/84G655ZZakmvKuNddd507//zz3Z577ikCUMjkc889J7P3n376aXi7budoEhFmDz30
UAfWjz/+uOvfv7/rOV9P98UXX9QtH0uo/SFQTR/QjKWsphyN6MuaEZt68CSCl0ph9UjQ0jAEDIH2
h8D+++/vpphiCnfGGWc4rwWXAgwbNszdcMMNbskll3RrrbVW+ytUBRzzofnss88aru2qgKWmCorm
8/7773ejRo1qGr6yeGqruqwm36wy1AIymmtoueWWk+P0008vx474h3YaARMtn1IjxzNDhw51u+22
m5t66qndE0884UaOHCn9BgJYr1693JgxY5QNO3ZCBKrpA5oRpmrK0Yi+rBmxqQdPXUkEU0MjQ8AQ
6LwITDvttO7f//63O+mkk9zll18u5yeffLL7/fff3VFHHdUCmLffflvCvPnmm26WWWZxG260kVu1
T59yGGZ9zz77bEfnPfHEE7v1119fTBfKAQpOXnjhBVkD9f7777uZZ57Z7bzzzjLDTLTRo0a7K6+6
0j3zzDPul19+cfPMM4/ba6+93Oyzz15O9ayzznIMvtZZZx3R4GHW17t3b3fggQeK6VU5YHDC7DmC
13HHHSd3NQ1MLC+44AIHL8suu6w74IADJBw4ffjhhw4TIwZ+k0wySTnehBNO6FZddVWH+cbHH3/s
FvUb0zMznzcALsK0Wn5gKjbtLLzOPfdcd+utt0r5qFfO0X6BTZKq5fOUU05xaF3DtsZg9pprrhGT
MdpBSHk8pdVlI+ok5IfztHzz2mFeGUgvtt4WXnhhed8wK1x66aXLGqDLLrvMPfzww27XXXd1U3eb
uvC9Ic+8dy+Gp1rfffKohPr16+euuOIK0XDRf+URE0lo71999VXR4P/9738XbGgbsYRmC/rPf/4j
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
SHoWbCs+LF9DwBDofAjYPl6dr86txIaAIWAIGAKGgCFgCBgChoAh0MoIiOBlzjVaGXXLzhAwBAwB
Q8AQMAQMAUPAEDAEOhUCXUeO+LTs1fD777/vVIW3whoCnRUBTG3sfe+stW/lNgTaDwLWV7WfujJO
DQFDoBiBLj1mnNnxMzIEDAFDwBAwBAwBQ8AQMAQMAUPAEGgMArbGqzG4WqqGgCFgCBgChoAhYAgY
AoaAIWAIlBEwwasMhZ0YAoaAIWAIGAKGgCFgCBgChoAh0BgEbAPlxuBqqRoChoAhYAgYAoaAIWAI
GAKGgCFQRqDLeOONV76wE0PAEDAEDAFDwBAwBAwBQ8AQMAQMgfojYKaG9cfUUjQEDIEGInD33Xe7
6667rpxD8rr8oI1Pvv76a3f55Ze7k046yT311FNtzE169s2KXcjtu+++66644goHnrVQvdKphQeL
27kQSL5fyetmQcP6qtariWZtA62HwF9zaitM2irf8X7++ecSMAwZPMgtudTSf0XE7hgChkCHRwDh
YMSIEe6EE05wk08+ebm87733njv99NPdqquu6jbaaKPy/bY8WX311d0HH3zg3nnnHWEjed2WvGne
v/32m1tyySUd+E066aRukUUWcffff78+bppjM2KXBOe8885zhx56qHvgwQfd0kstlXwcfV2vdKIz
tIANQcD6qvrCan1VffEsSi2mz91hhx3cp59+6u69917XpUtz6EcayVMMJkW4VvO8tfP929/+JmxK
jdoGytVUmcUxBDoOAj/99JO78sor3WWXXdaiUCeffLJolyabbLIW9+0iH4Enn3xShK69997bjRo1
yl177bX5EeypIWAIRCFgfVUUTNGBrK+KhqrVAr766qvujTfeaLX8YjKqB0+PPPKI23DDDR3WB52Z
xLmGrfPqzE3Aym4IOLfXXns5hKvzzz/feS24QIJWacCAAW6xxRZzzAwZxSOA9hBaeuk/rQimm266
+MgW0hAwBDIRsL4qE5qqHlhfVRVsDY2Eafr777/fNNouClsPnijTww8/7D777LOG4tfsiXdF6DKN
V7NXk/FnCDQWgWmmmcbtvPPO7swzz3RXX311+fyPP/5whxxySIvMMfG75ppr3Ntvv+1mmmkmt956
67mVVlqpHObLL790F1xwgXvttdfcRBNN5NZee223+eabl5/nndAhs37rueeec7/++quba6653K67
7upmm222vGh/eYbQSDqvv/66mE4iPGIqMeGEE7obbrjBDR061B177LFOVf9PPPGEu/HGG0UAnWee
eSS9zz//3P3f//2flK9Pnz4utlxoDQcOHChpgOXjjz8ueffs2VNMJLP4IgKCL33yggsuKBgiDF94
4YXCtyQ47u+ss85yzPyHdcPMNWXr37+/1Iumtcbqa7jLr7hcPuQLL7ywQwuX1GAyA4kp3siRI8Us
cpdddnHTTjttOcs8PAlUT34GDRrkbr31Vgf+K664ovv999/LfOhJURskXEw6mp4d2w8C1le1r76K
foh+l28E55jQ0Q/Rr4cTUkV9TNhC6W+wJMA0PjTF47tDH0a/rf0fZvL0yaS/lDdVRnCnbznjjDPc
xx9/7BZddFG3zz77uEkmmaScRREvmnayn7700kujykpGH374obvkkkukX8YUPeyXuQ+PRx55pPCU
9+1RXqoppxaY7z7fXvAMFTGkDc7gmeSp0m/1RRddVP4uUk98I/murrbaaspGLiYEiun3y4mNO3np
pZfc9ddfL/U/44wzuu2228717t07GUyuY8qUVxd5z8IMx/Mfb1nj9cSQwbbGK0TGzg2BToYAnQYf
Ej6GrEdaaKGF5Pfoo4+WkUCI2GyzzWTgTuc1ePBgN3bsWHf22WdLh8YgebnllpOPyZprrikfDwSC
b775pkWHXk4wcYKAxMeQDyRE+ggAL774optyyinlXtIuO3lNnH/961/CFzzy4SBNzh966CF37rnn
umOOOcZdddVVYvZAottvv7275ZZb3MEHH+wOO+wwyYfne+65pzjIYH1bbLl23313d99997kvvvjC
zTDDDCL4nXPOOTLBlccXgxPKgsCKUIVw9OOPPwrv4bo7mFt++eXdd99951555RXhlb/kGibSQjhW
wQUh85NPPpEBkAqGhGEmk7zAF0GZQcfcc8/t1/0OcZNONqnUQRHf9eLntttuk7oAi5lnnlnMNTn/
5Zdfymu8itogWMSkQzij9omA9VXtp6/Sfog+baqpphIBZ9iwYTKpNmTIEOl7ivps7Rvpmxh8//vf
/5bJvzvvvFMmZ2jF3377raS5+OKLy/eLfN966y3H5OEEE0wg3x+EmTXWWMM988wzMrEHP/SJ66+/
vqRHOrG8pPXTG2+8sfS5eWWFr6effro86ZfVL2tZi76p1ZaTsirxzcIcnjVlfOcgxZNv8gMPPCDf
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
cUV35plnOpSnRx991B1xxBGiPP3nP/9x77zzjrvkkkvcvffem8cZOHCgu+yyy9x1112X37vjjjvc
oEGD3Mcffyz3HnzwQUkXhe7bb791V1xxhdtkk03cpZdeKs9feuklUZoeeeSRnMenn37qjj32WFH0
uFnHgzC33XabO/HEE92mm27qUAhvvvlmh9xGhoAhYAgYAoaAIWAItBsB20C53Qgbf0OgByGAo511
1llHZrueeeYZt9xyy7n777/fvfnmm+67775zhxxyiChG9913n7vnnnvcs88+63bccUc3fPhwUaQ2
2GADye3dd98tR/g98MADcj5kyBA58sfzvn37urXXXluc+xx66KEye/bYY4+5m266yb3wwgtupplm
cscff7z773//67bZZhuJe+ONN+Y88MKI0rTtttsm8dCIn332maT78ssvi6LIrJ2RIWAIGAKGgCFg
CBgC7UbANlBuN8LG3xDoQQhMM800YmaI2SCKkSpSb7/9thsxYoQoRFtssYVbfPHFJVeY7R155JFy
PmzYMLfgggu6fv36ucGDB4syxKzZBx984GaeeWb3t7/9TWbJvvnmm3x2asoppxSlDvPCVVZZxX3y
ySdiLvjhhx+6ZZZZxn300UfynFk4eNxyyy2iiJEgCtoEE0wgs1cohnU8REj/h9nkBRdc4CaaaCI3
8cQT6207GgKGgCFgCBgChoAh0FYEbI1XW+E15oZAz0IAhatPnx8skFGMoK+//tqx9guaf/755ah/
s88+u8QZOXKk3Fp//fXdOeecI4oWyhjKGeZ9u+22m2PWi/VbzDqpUqd8b7jhBscvJma1kGmrrbZy
uLzHpHCppZZyzLoxY4ayiIIHVfFQvlNMMYWbaqqp9NKOhoAhYAgYAoaAIWAIdAkConjRMTIyBAwB
Q6AKATXJ+/zzzzsE+/LLL8UMEQUIQqFC8cKc8MknnxTnGxtuuKGbZJJJZCZsttlmy8NxgiIE4aAD
U8aQUARnmGEGuYW5IYoXytVbb70lJo+YGUKpPCSw/RkChoAhYAgYAoaAITAWEBDFyzZQHgvIW5KG
QA9DYJ555hGJ77zzTnfUUUflM2M4rIDU/LB///4yC8V9zBP33XdfMenDlBCnG9NPP71bcsklZeaL
eJgmMvjDmjJVyrgf02KLLSamjLfffrt7/fXXxWvieuutJ8FSecQ87doQMAQMAUPAEDAEDIGuQkCc
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
t59beOGFO4jam9+X3pz3DpWgExetei/POeccd9RRR7nBQ4a4/sst1wmJOh/V6kXnMWyWw49+9COJ
Kl4Nm2Vi8QwBQ2DcQeChhx5yV1xxhfvkk08aytR9993nNttsM8eoXqvokUceEaXrgAMOcKNGjRK5
WsXb+DhXVmZl97sas+4iR0q+n332Wff888/nQZupuzGPnJmdVCLw9NNPu7POOktmgenctprGRj0c
G2m2Greexq8M8656L8vS72k4mrxpCJg7+TScLJQhYAiUIPDKK6+4e++917333nslIRq//c4770ik
/v3/Nws//fTTN87EYpQiUFZmZfdLGbXpQXeRIyV7mMEiL7NdUDN1N+aRkq6Fce7aa68VGKaZZhp3
2223OW/B01JYxkY9HBtpthS0HsisDPOuei/L0u+BUJrICQj0JYy5k09AyoIYAr0QgXPPPVfah3XX
WdcNvGSgdDAXX3xxx0zUZJNN5i644AJ36623CjLnnXeenK+55ppu7bXXlnuYxF1++eXuxRdfdLPO
OqvbeOON3WqrrZYjqfwXXXRRR3x4/uQnP3HYoUN/+tOf3IMPPugw+Zh66qllZPupp55y33zzjZtn
nnncXnvt5eacc86cHyfDhw93V111lZjkzTLLLG7XXXd1Sy65ZB6mTqYPP/xQZPnHP/7hJppoIrfB
Bhu4bbbZJo8fnqBssuaqSqaiPJ5//vluwgknFJPBKnzCtMJzZhcZ4R85cqSYYe65555uuummy4NU
5bGszEaMGNHystR85oL5kzrMyuTTOhXyqiorcAdj6hvnmANSd6kzoSJfhZWmVVWnLrroIvf++++7
Y445xl188cU5hlp3J5hgAvff//7XnXTSSblyBl/qO+X329/+1oU8eKZ1puy9Iww8qTvMVI8ePVre
r/HHH9+RHjxVESTsuEjk//rrr3fLL7+8lDH4Yu7J7HtMVe9LWR2qqodaPmG7RV3HWqCuPUC2svpU
lWacpyo+RWHr3jvilGFR94znde9RFW/ih5Qia1kZNNquVmEev5fIWJdPwvBO3njjjdIurLLKKvKu
cr+IqtInPKbl1KnnnnvOTT755G7ppZeW7yH5LKOy+lUUPgXrqrKrelaUnt37fo0X7uQfHjbU1nhZ
jTAEejECBx54oCwAxrxClRnswVGa6ORA2Ci/+eab0tFB4UIhuv/++2WNBUoO67F+/vOfu7333lsU
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
dp2dkr3Jzz33nJnAsf9MQlfH9ADCLBou3//WMbl2z1yk8eqe/apWiYAIiIAIjGUEME/CzAfTHkyA
k6ZfWSjcLTUr1QptJyCObWfX2SlxdY9n3tl7Z7+7tLPr013KwxwUbSKmhWjcFUYn4BovE7w4rT1e
o0PSEREQAREQAREQAREQAREQARFoDwEXvLJdS7UnZ6UVAREQAREQAREQAREQAREQARFoRcAEL+3z
asVEP0RABERABERABERABERABESgQwmY4OWuojs0Z2UmAiIgAiIgAiIgAiIgAiIgAiJgBKTx0oUg
AiIgAiIgAiIgAiIgAiIgAg0moD1eDQas7EVABERABERABERABERABERAgpeuAREQAREQAREQAREQ
AREQARFoMIEecqzRYMLKXgTGcgJvv/12uPzyy8M333xTkwTnLrvssnDyySeHJ554omY8ncgn8O23
34bzzz8/vPzyy/kRG3D2119/DVdddVV4+umnG5B7cZZjsu3FtSuO0dXrX9xCxRABERABEeghxxq6
CERABBpJ4P777w/77bdfePOtt6yYXXbZJay55prht99+s9+8eHHVVVcN+++/fzjrrLNCv379QjpO
I+vXnfJ+7LHHwmGHHRZeeeWVTm/Wa6+9Fvbee+/w0EMPdXrZFNiRbb/tttvCoosuGu64445Oa0uZ
+o+JenUaABUkAiIgAmMBAZkajgWdrCaKQDMRQCjgDfce/vnPf4Z33nkn/OlPfwrDhg0L11xzjQkO
yTgeV5/5BF544QWLsNhii+VHbMDZF1980XJFYBkToS1t/+CDD8Imm2wS7r777lZVfvzxx8N7770X
JplkklbHG/nD65/Hb0zUq5FtVt4iIAIiMLYRMMFLWq+xrdvVXhEYcwQwJXz33XdDjx6j1n0+/fRT
q0zfvn3tc7rppjNzw2ScMVfbrlUyws9EE00U5p133k6vuAsOY0Loo7FtafvAgQNNQ4eZZDKcfvrp
getytdVWSx5u6HfqP+GEE4b55puvZjljol41K6MTIiACIiACdRNoIYX2edXNTQlEoFsSYPJ33XXX
hSFDhoSZZpop7LTTTmZy5Y3l+LXXXhswK5t00knD4osvbmaB448/vkcJAwYMCLfeemv44osvwoor
rhjSk9pLLrnEzh199NHh0ksvrZpzsT+IFX3MDB955JFqHM/4rWiqePXVV4c333wzzDzzzGGDDTYI
K6+8sp8OX331VbjgggvCq6++GiaYYIKw7rrrhi222KJ6Pvnl888/t3Y8++yz4Zdffglzzjln2GOP
PcJss82WjDbad8ZK+AwaNMjKQzux5557hqmmmsrayV42JvOw2XzzzcOHH34YPvvss3DwwQdbXpgB
Lr/88mHyySe3fNjbRj2322670cpKH4BjUf4vvfRSWGihhcK4445ryRGGrrzySqvHDDPMYGyXWGKJ
atZ33XVX+Mc//mF1nHXWWcP2228fyghOybrAZNtttw2URRkzzjhjm/P/85//HFZYYYVA/9x7771h
pZVWCn/84x8tv/vuuy9gtvrxxx+H3r17h9133z3MPffc1bLSbU/WMd0fBx54YDj22GPteiMDTPgG
Dx5sfBBajzrqqDDPPPPY9e8FFLEq07d5/UH9F1xwQdsjx3X+9ddfh7XXXjvssMMOXoXR6nXkkUeG
ZZZZJkw55ZR2PX/33XeWhn5UEAEREAERaD4C44wYMaKCxmvQwAFh6WVGrTg3XzVVIxEQgUYTwNwK
AWDiiScO888/vwk4P/74owlhU0wxhQkUW265Zfjpp59MGMMsEMEC4YN9PQhfTGB33nln+z7LLLOY
CSHHf/755/DAgw+GvnGSyP4uBDgEqb322ssm/l9++aVN2pkgn3POOeH444+vxqHdCGQIMph+UR7C
DfU4++yzbXLMJHu55ZYzTRqTVYQ+TBhxWJCl0UdgpO5MWgnkN+2005rwQFuzAnvRfv/735tQyMQf
4QknFghsJ510kpmsPfrooyYU/PDDDyaY0fZVVlkl3HjjjSYwLLDAAnb+/fffD3PMMUf46KOPTPBD
0FxyySWzirVjtA+TuLz8MZtD6Nptt93CX//6V2OGcIpAtfTSS4cnn3zSBBmEU/LbcccdTeiln3r1
6mUTfo5TBnxqBThsvPHGlv/ss88emOwjJBDo25tvvrlN+cNk4YUXDvAnTz7XX399cxYC4+uvvz7A
D+EOwZdrBWGFeOm2F/GCweqrr27X53jjjVcVuPv372/5wRHB7rTTTivVFoTBor7lGq7VH15/NF4j
R44Mc801lwnD//73v8PDDz8cllpqqWobvV5eJn3HtUwarnvYIbhtuOGGtbpQx0VABERABDqZAHMG
gjnXkMark+mrOBFoMgJMVA899FDTFLHyjyCFVot9V2iPcISBloBJN0IC59mrhaYDLRkTVuIcd9xx
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
REAEREAEREAEREAEREAEug8BuZPvPn2ploiACIiACIiACIiACIiACDQpAZkaNmnHqFoiIAIiIAIi
IAIiIAIiIALdh4A0Xt2nL9USERABERABERABERABERCBJiWgPV5N2jGqlgiIgAiIgAiIgAiIgAiI
QPch0DJs6Cfh119/7T4tUktEQAREQAREQAREQAREQAREoMkItPScYSar0pAh74fJJpusyaqn6oiA
CDSCwGuvvRb69OnTiKyVpwiIgAh0GAGNVR2GUhmJgAg0AQG9QLkJOkFVEAEREAEREAEREAEREAER
6N4EtMere/evWicCIiACIiACIiACIiACItAEBOROvgk6QVUQAREQAREQAREQAREQARHo3gTkTr57
969aJwIiIAIiIAIiIAIiIAIi0AQEelQqlTDOOOM0QVVUBREQAREQAREQAREQAREQARHongTMuQbC
l8KYJ/DNN9+Eiy66KBx33HFh0KBBY75CqoEItJPAHXfcEa688sp25tL+5GXqUSZO+2vS2Bwa2Ya3
3norXHzxxYFxSkEEugOBMvdLmTjdgUVXa4PGo/I91oysGnlfNWN7k701zogRI0zqGjxoYFh1tdWT
51p9P/TQQ8Pnn38eDjzwwLDgggu2OteVfvz222/hxhtvDPfee28YNmxYmG222cI222wTVl555U5t
BmV+9NFH4bHHHgs9evQI//nPf8y9NxfMJJNMEhZffPEw66yztorTyAqm69PIspT3mCeQ56L5pRdf
Cvfce0946aWXwk8//WTX5Zprrhn+7//+r+6Kk+add94Jn376ad1pOzJBmXqk43TFeyLdho5keOaZ
Z4YDDjgg/POf/wzLLrtsR2atvESgJoGssWrgwIH2HPdEU0wxhY1Pa6yxRl0WPGXul3ScZhoXmqku
3hed9anxqDzpZmSVvq/Kt6Y4ZjO2l1q7dWEpd/LPPfdcOPXUU0P//v3DWWedVdzqJo6xzz77hK23
3jo8/PDD4ccffww33XRTWGWVVcK3337bqbVmUvvyyy9Xy+RBgtB1yCGHhB9++CHccsstNvFNxqlG
bseXBx98MKy11lpWVjKbdH2S5/R97CFw2mmnhaWWXiocccQR4YknnggvvPBC+Mtf/hJWWmmlsP/+
+489IGJLm/meqHUfj1UdpMaOtRmfmxIAACJ0SURBVASuu+66cP7554e///3vgZXzU045xZ5rG2+8
cWBxtZGhmcaFRtRFY0u5q6eRnBqZd7nWdVys7tSWjqJSyqvhNddcY5LatNNOawLByJEjO6r8Ts3n
+++/DxdeeGFYYoklwpAhQ2zllpX4s88+27RMnVkZBkw0iGi7CJ988ol9LrfccvY5/fTT28QvGcdO
tPPf22+/He6//37T9iWzStcneU7fxw4CDJAI/jPPPHN45ZVXwocffhg++OCD8K9//SvMPvvstujC
RGdsCc18T9S6j8eWvlE7RQACgwcPNquQjz/+OCy55JImhLGY2sjQTONCI+qisaXc1dNITo3Mu1zr
Oi5Wd2pLR1FpKcro119/DTfccENYfvnlw2qrrRaOOeaYcNddd4XNNtusVdLnn3/e9nK8++67YZZZ
Zgm77babmct5pKLzb775ZrjsssvC66+/biZ2G2+ySVg9lufhyy+/NAGJgWbCCScMG264oZkIcj7v
nKfnk8GZ/WxMIieYYAI7Nemkk4Z99923Gg2N3vjjjx9WX331gLqSyediiy0W0JQhDHkoqi/x8trM
ah1C1QknnGDC4K233mpZX3rppaaN22OPPQITYY/j5ebl+dmwz0L/K/uHp59+Ovz8889h7rnntrb1
7t3bkp977rnBy0HY5Dvar7XXXttWD9Nlvffee6blZBIOp6WWWipQL/gQYIXqdL311rM2YFK26KKL
hoMPPrjTBVmrkP61i8DRRx9t6W+77bZW5sTzzz9/uPbaa828jJVlVpUJ9fY/2jQWOk4//fTqggP5
cC2y8IBWPR3K3I+kiybTNjZ5ejTIV199daBNjEce0CqfccYZVh7mvHvvvXeYbrrp/HSrz+Q96ify
7j+P45/Oh/vrggsuCIyNv/vd78JBBx1k9/XJJ58c3n//fZswIvBONNFEnjTkjS9597FnwMLSeeed
F3jo0c70PVl0b5PPo48+auZcjAtYBfAsSIay424yjb6LQCMIzDDDDHaNb7HFFuHZZ58NW265pY0n
zTgupNtfZozzsWThhReuLhRfccUVtifcn9uMzZ999pmNr27SRFmkHTp0qGkF2zNHIK+8cYnz6VBU
HvG9bUXziKLxKF12e7gyx8kbI4vG4DKcaj1LOiLvtrDimtGzKn0VNeh31F5V2Of10IMPRJlk9HDf
ffexB6wSJw6VOGmx71HoaRUxTtQqLS0tlckmm6wSbf8r0d66Mt5441Wi+Z7FKzofzf4qE088cSVO
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
WvQpp5wSGMM22mij6jF9EQEREIFmI9CCY40sr4Z33XVX+Pbbb62+aAwY7CaffPIw/vjj2zFevorg
9corr3TKKvgjjzwSzj333HDqqaeGueeeu9k4Nn19OqufmgHEyJEjw5lnnhmWWmqp8MEHH4Q///nP
9rf44ouHvn37NkMVm7oOjAlHHXVUWHPNNUNLS4vVVQ54mrrLVDkRGGsIoO265JJLwvnnnx/22GOP
wMIai54333xzYIxn3FIQAREQgWYlMGpWlVE7TLQ8nH766eHYY48NN9xwQ1h++eX9sH1invTrr7+2
S9vVKsMaP959993w8MMPh88//1yCVw1GeYc7q5/y6tBZ53gAe1h44YXDuOOOG7bccsvwj3/8Q4KX
g8n5RGt7zTXXmPZrt912y4kZbMJz7bXXhtdeey1MOumkNvFBu+oLNLmJdVIEREAE6iQwzTTTBMYl
Fteuuuqq6vfffvstHHbYYa1ye+utt8LVV18d3nzzzTDzzDOHDTbYIKy88srVOF999VW44IILwquv
vhommGAC0/JvscUW1fP6IgIiIAIdTcAEr/asZrPy9MUXX4Sjjz66WreiwY6I7L+59dZbLe2KK65o
wls1g9SXiy66qGo6xiCJGdlqq60W1lhjDYvJalc9kz+EN+I/++yz4ZdffglzzjmnrZzNNttsqZJb
/3zxxRfDddddZ5PNmWaayTR+iy66aOtI//1Vpoy8QT/vXGaB8eD7779vK4EIqYsssojtyZlkkkks
elv6iRVFrg3MSuFOXhdeeKFpQov41UrLhLwMx1ptOeusswL7t/7yl7+0EvapH/uPjj/++NHwYJJC
GD58+GjndGB0AgcffLDdY+ylQGBF050VBg4caOd/+umnwH2AVhVTn+uvvz489NBDEr6yoOmYCIhA
uwm41uu8884L66+/vj2Xl1hiiVbarscffzxsvvnm9txifGIx6bLLLgtnn322PbtZMMacmufl2muv
bXMRBDrStGdO1O7GKQMREIFuTcA2ZWWZGpZt9e23324DmsdnsFthhRVMsPnPf/5j5zbccEPbH+Jx
2PzKyhMTtDfeeCMw0cuaMHv8Z555xlas+P3cc8/ZpI7BksDkDy0cE3IEQDQ7hx56qAlmP//8s8VJ
/1trrbXCiSeeaAIEZpQICayCfffdd+mo1d933323xUHgwAEIbVhllVVqpikqwwd99jSx0kbdGfTp
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

------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://course.ccs.neu.edu/cs5004/linkedlist.png

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

------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5----
Content-Type: image/png
Content-Transfer-Encoding: base64
Content-Location: https://course.ccs.neu.edu/cs5004/classdiagram.png

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
m6NpAf8XbTsJrYX6MdQGmXUxWj1mbLjm1ijwtqG20FvCe1gdlTbPR8vUgYJX3uQPHWj5uR0z219D
ga2SbVCQ/nTIxylljjk9HDMWlU5/CFyIxtKCbhAmhve0FPAL9LsBTVzxUzQzS/J7y06JaGYN5HGm
/cPXULUqqES0HKVf4JdQ31qfe6E5c/8eXs9GX95nocXE89wfrr0n6kw0kspVtgB7oyreCWjO3VNQ
sBob9u9G6Ry8m0bPV0QBeC3grbDt3vCYjErF3yAtHT+Fqqw/iEqxk4B/VMjbU6jtNPblcgfWaRiq
2t4EBX6AM1EJdmdUlf04CqSfCvmciD7bEcDbDciDmdXBwdS6YjwqrcamogA3HE3+Xs6vgANRtekz
qB2yWu3Iaqik+Dxalea6zP5Ka4tOCj+fztnXQVqaTtxGOp/rKEqXcct6BZWyG+0DqDQZf8aLw+sJ
4fXXUan+NrSKzrthu+eiNWsBB9P+4Yzo+dZoYfBy7XTldNA54L1O5xLlGBQc44468dCRjwBfQau/
PBK27YGqZys5ia7PapQEwmVQe2jsNRR49kBtj+W8Gc7Ns2w4ptHeCD/HUBrMx6B8D0OB9AuoTRtU
TX1EJh0345g1if/ZrJqZqMS5ZLTtBtQemgTUNlTivJ50TtyZqASbWCLsS5ZWG4Cqb7vT82it1Xjc
6WBUFfw4ClrfpTTob0jaO/kF0tJtOavSuYR+KGrfLGIm8F/0mSa2RJ/nLeizG4xuahJx9XaSRlLC
NbNu5pKpVXMXKg3dj3qpXohKQ78P+65Dq7aMRWuWJv6M2vn2DucfinrO3kvpGqnd6X3Uu/ciVAJ+
Efgo6pR0F+pcdQlqh3wS3RysEn7ORu/ty+Sv/7o7nTtQ7YBK38cXzPuhqLfvuijofxzVJiQ9hS9A
HaDuCnmemzn/72jozl1h3zeBhwrmycyspXrSeqb1TtoAKqntBeyHOrkkNkbBZnfSYTGJNvS+DySd
vGEo6kR0GKpqXhaVcBPrkpYE24HtyG+THBT2D8tsX57OpbSRqKPOF1AwjUtrS6EA+EU0QcXIaN9Y
VAW8FZ3tgAJudoztR4DNcvIc24rSKuQxdK7yXgbdjByMxubG2tDC619Hn+Ew9HnEN8gfQDcTe1Ba
s9DXeT1Ta6bL8CpVTdOTgqnV5wTUwWdItG0J1IO41nZnay4HU2smLw5uVoMfobbJpBNXGxoCNA0N
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
AABJRU5ErkJggg==

------MultipartBoundary--a5X1SW5166LeQ55kPvozVWmMLvR99EDMgMeXb928h5------
